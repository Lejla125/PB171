

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu May 06 14:43:12 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,inline
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,inline
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,inline
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,inline
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 05/05/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F44K22 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataBANK0
    80  001666                     __pidataBANK0:
    81                           	callstack 0
    82                           
    83                           ;initializer for pinToIndex@F6037
    84  001666  02                 	db	2
    85  001667  03                 	db	3
    86  001668  04                 	db	4
    87  001669  05                 	db	5
    88  00166A  06                 	db	6
    89  00166B  07                 	db	7
    90  00166C  0E                 	db	14
    91  00166D  0D                 	db	13
    92  00166E  21                 	db	33
    93  00166F  22                 	db	34
    94  001670  23                 	db	35
    95  001671  24                 	db	36
    96  001672  25                 	db	37
    97  001673  26                 	db	38
    98  001674  27                 	db	39
    99  001675  28                 	db	40
   100  001676  0F                 	db	15
   101  001677  10                 	db	16
   102  001678  11                 	db	17
   103  001679  12                 	db	18
   104  00167A  17                 	db	23
   105  00167B  18                 	db	24
   106  00167C  19                 	db	25
   107  00167D  1A                 	db	26
   108  00167E  13                 	db	19
   109  00167F  14                 	db	20
   110  001680  15                 	db	21
   111  001681  16                 	db	22
   112  001682  1B                 	db	27
   113  001683  1C                 	db	28
   114  001684  1D                 	db	29
   115  001685  1E                 	db	30
   116  001686  08                 	db	8
   117  001687  09                 	db	9
   118  001688  0A                 	db	10
   119  001689  01                 	db	1
   120  0000                     _ANSELE	set	3900
   121  0000                     _ANSELD	set	3899
   122  0000                     _ANSELC	set	3898
   123  0000                     _ANSELB	set	3897
   124  0000                     _ANSELA	set	3896
   125  0000                     _ADCON2bits	set	4032
   126  0000                     _ADRESH	set	4036
   127  0000                     _ADRESL	set	4035
   128  0000                     _PORTE	set	3972
   129  0000                     _PORTD	set	3971
   130  0000                     _PORTC	set	3970
   131  0000                     _PORTB	set	3969
   132  0000                     _PORTA	set	3968
   133  0000                     _LATE	set	3981
   134  0000                     _LATD	set	3980
   135  0000                     _LATC	set	3979
   136  0000                     _LATB	set	3978
   137  0000                     _LATA	set	3977
   138  0000                     _TRISE	set	3990
   139  0000                     _TRISD	set	3989
   140  0000                     _TRISC	set	3988
   141  0000                     _TRISB	set	3987
   142  0000                     _TRISA	set	3986
   143                           
   144                           	psect	smallconst
   145  000300                     __psmallconst:
   146                           	callstack 0
   147  000300  00                 	db	0
   148  000301                     STR_1:
   149  000301  25                 	db	37
   150  000302  64                 	db	100	;'d'
   151  000303  0A                 	db	10
   152  000304  00                 	db	0
   153  000305                     STR_3:
   154  000305  25                 	db	37
   155  000306  64                 	db	100	;'d'
   156  000307  00                 	db	0
   157  000308  00                 	db	0	; dummy byte at the end
   158  0000                     
   159                           ; #config settings
   160                           
   161                           	psect	cinit
   162  001542                     __pcinit:
   163                           	callstack 0
   164  001542                     start_initialization:
   165                           	callstack 0
   166  001542                     __initialization:
   167                           	callstack 0
   168                           
   169                           ; Initialize objects allocated to BANK0 (36 bytes)
   170                           ; load TBLPTR registers with __pidataBANK0
   171  001542  0E66               	movlw	low __pidataBANK0
   172  001544  6EF6               	movwf	tblptrl,c
   173  001546  0E16               	movlw	high __pidataBANK0
   174  001548  6EF7               	movwf	tblptrh,c
   175  00154A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   176  00154C  6EF8               	movwf	tblptru,c
   177  00154E  EE00  F088         	lfsr	0,__pdataBANK0
   178  001552  EE10 F024          	lfsr	1,36
   179  001556                     copy_data0:
   180  001556  0009               	tblrd		*+
   181  001558  CFF5 FFEE          	movff	tablat,postinc0
   182  00155C  50E5               	movf	postdec1,w,c
   183  00155E  50E1               	movf	fsr1l,w,c
   184  001560  E1FA               	bnz	copy_data0
   185                           
   186                           ; Clear objects allocated to BANK0 (40 bytes)
   187  001562  EE00  F060         	lfsr	0,__pbssBANK0
   188  001566  0E28               	movlw	40
   189  001568                     clear_0:
   190  001568  6AEE               	clrf	postinc0,c
   191  00156A  06E8               	decf	wreg,f,c
   192  00156C  E1FD               	bnz	clear_0
   193  00156E                     end_of_initialization:
   194                           	callstack 0
   195  00156E                     __end_of__initialization:
   196                           	callstack 0
   197  00156E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   198  001570  6EF8               	movwf	tblptru,c
   199  001572  0100               	movlb	0
   200  001574  EFD5  F008         	goto	_main	;jump to C main() function
   201                           
   202                           	psect	bssBANK0
   203  000060                     __pbssBANK0:
   204                           	callstack 0
   205  000060                     _nout:
   206                           	callstack 0
   207  000060                     	ds	2
   208  000062                     _width:
   209                           	callstack 0
   210  000062                     	ds	2
   211  000064                     _prec:
   212                           	callstack 0
   213  000064                     	ds	2
   214  000066                     _flags:
   215                           	callstack 0
   216  000066                     	ds	2
   217  000068                     _dbuf:
   218                           	callstack 0
   219  000068                     	ds	32
   220                           
   221                           	psect	dataBANK0
   222  000088                     __pdataBANK0:
   223                           	callstack 0
   224  000088                     pinToIndex@F6037:
   225                           	callstack 0
   226  000088                     	ds	36
   227                           
   228                           	psect	cstackBANK0
   229  0000AC                     __pcstackBANK0:
   230                           	callstack 0
   231  0000AC                     
   232                           ; 2 bytes @ 0x0
   233  0000AC                     	ds	2
   234  0000AE                     
   235                           ; 3 bytes @ 0x2
   236  0000AE                     	ds	3
   237                           
   238                           	psect	cstackCOMRAM
   239  000001                     __pcstackCOMRAM:
   240                           	callstack 0
   241  000001                     ??_bitValue:
   242  000001                     ?_strlen:
   243                           	callstack 0
   244  000001                     ?___aodiv:
   245                           	callstack 0
   246  000001                     ?___aomod:
   247                           	callstack 0
   248  000001                     bitRead@b:
   249                           	callstack 0
   250  000001                     convertToPort@i:
   251                           	callstack 0
   252  000001                     convertToBit@i:
   253                           	callstack 0
   254  000001                     readBit@p:
   255                           	callstack 0
   256  000001                     fputc@c:
   257                           	callstack 0
   258  000001                     strlen@s:
   259                           	callstack 0
   260  000001                     delay@ms:
   261                           	callstack 0
   262  000001                     ___aodiv@dividend:
   263                           	callstack 0
   264  000001                     ___aomod@dividend:
   265                           	callstack 0
   266                           
   267                           ; 8 bytes @ 0x0
   268  000001                     	ds	1
   269  000002                     ??_bitRead:
   270  000002                     pinToIndex@pins:
   271                           	callstack 0
   272                           
   273                           ; 36 bytes @ 0x1
   274  000002                     	ds	1
   275  000003                     bitValue@b:
   276                           	callstack 0
   277  000003                     readBit@b:
   278                           	callstack 0
   279  000003                     fputc@fp:
   280                           	callstack 0
   281  000003                     strlen@a:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x2
   285  000003                     	ds	1
   286  000004                     ??_readBit:
   287  000004                     bitRead@number:
   288                           	callstack 0
   289  000004                     bitClear@number:
   290                           	callstack 0
   291  000004                     bitSet@number:
   292                           	callstack 0
   293  000004                     setBit@p:
   294                           	callstack 0
   295  000004                     clearBit@p:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x3
   299  000004                     	ds	1
   300  000005                     ??_delay:
   301  000005                     ??_fputc:
   302                           
   303                           ; 1 bytes @ 0x4
   304  000005                     	ds	1
   305  000006                     bitClear@b:
   306                           	callstack 0
   307  000006                     bitSet@b:
   308                           	callstack 0
   309  000006                     setBit@b:
   310                           	callstack 0
   311  000006                     clearBit@b:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x5
   315  000006                     	ds	1
   316  000007                     ??_bitClear:
   317  000007                     ??_bitSet:
   318  000007                     ??_setBit:
   319  000007                     ??_clearBit:
   320                           
   321                           ; 1 bytes @ 0x6
   322  000007                     	ds	1
   323  000008                     bitWrite@number:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x7
   327  000008                     	ds	1
   328  000009                     ___aodiv@divisor:
   329                           	callstack 0
   330  000009                     ___aomod@divisor:
   331                           	callstack 0
   332                           
   333                           ; 8 bytes @ 0x8
   334  000009                     	ds	1
   335  00000A                     bitWrite@b:
   336                           	callstack 0
   337  00000A                     fputs@s:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x9
   341  00000A                     	ds	1
   342  00000B                     bitWrite@val:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0xA
   346  00000B                     	ds	1
   347  00000C                     fputs@fp:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0xB
   351  00000C                     	ds	2
   352  00000E                     fputs@c:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0xD
   356  00000E                     	ds	1
   357  00000F                     fputs@i:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0xE
   361  00000F                     	ds	2
   362  000011                     ?_pad:
   363                           	callstack 0
   364  000011                     ___aodiv@counter:
   365                           	callstack 0
   366  000011                     ___aomod@counter:
   367                           	callstack 0
   368  000011                     pad@fp:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x10
   372  000011                     	ds	1
   373  000012                     ___aodiv@sign:
   374                           	callstack 0
   375  000012                     ___aomod@sign:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x11
   379  000012                     	ds	1
   380  000013                     ?_abs:
   381                           	callstack 0
   382  000013                     pad@buf:
   383                           	callstack 0
   384  000013                     abs@a:
   385                           	callstack 0
   386  000013                     ___aodiv@quotient:
   387                           	callstack 0
   388                           
   389                           ; 8 bytes @ 0x12
   390  000013                     	ds	2
   391  000015                     ??_abs:
   392  000015                     pad@p:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x14
   396  000015                     	ds	2
   397  000017                     ??_pad:
   398                           
   399                           ; 1 bytes @ 0x16
   400  000017                     	ds	1
   401  000018                     pad@i:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x17
   405  000018                     	ds	2
   406  00001A                     pad@w:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x19
   410  00001A                     	ds	2
   411  00001C                     ?_dtoa:
   412                           	callstack 0
   413  00001C                     dtoa@fp:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x1B
   417  00001C                     	ds	2
   418  00001E                     dtoa@d:
   419                           	callstack 0
   420                           
   421                           ; 8 bytes @ 0x1D
   422  00001E                     	ds	8
   423  000026                     ??_dtoa:
   424  000026                     pinToIndex@pin:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x25
   428  000026                     	ds	1
   429  000027                     pinToIndex@i:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x26
   433  000027                     	ds	1
   434  000028                     ??_digitalRead:
   435  000028                     pinMode@mode:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x27
   439  000028                     	ds	1
   440  000029                     ??_pinMode:
   441                           
   442                           ; 1 bytes @ 0x28
   443  000029                     	ds	1
   444  00002A                     digitalRead@pin:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0x29
   448  00002A                     	ds	1
   449  00002B                     pinMode@port_num:
   450                           	callstack 0
   451  00002B                     digitalRead@port:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x2A
   455  00002B                     	ds	1
   456  00002C                     pinMode@port:
   457                           	callstack 0
   458  00002C                     digitalRead@port_num:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x2B
   462  00002C                     	ds	1
   463  00002D                     pinMode@pin:
   464                           	callstack 0
   465  00002D                     digitalRead@value:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x2C
   469  00002D                     	ds	1
   470  00002E                     pinMode@bit_val:
   471                           	callstack 0
   472  00002E                     digitalRead@bit_val:
   473                           	callstack 0
   474  00002E                     _dtoa$759:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x2D
   478  00002E                     	ds	2
   479  000030                     dtoa@p:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x2F
   483  000030                     	ds	2
   484  000032                     dtoa@w:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x31
   488  000032                     	ds	2
   489  000034                     dtoa@s:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x33
   493  000034                     	ds	2
   494  000036                     dtoa@n:
   495                           	callstack 0
   496                           
   497                           ; 8 bytes @ 0x35
   498  000036                     	ds	8
   499  00003E                     dtoa@i:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x3D
   503  00003E                     	ds	2
   504  000040                     ?_vfpfcnvrt:
   505                           	callstack 0
   506  000040                     vfpfcnvrt@fp:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x3F
   510  000040                     	ds	2
   511  000042                     vfpfcnvrt@fmt:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x41
   515  000042                     	ds	2
   516  000044                     vfpfcnvrt@ap:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x43
   520  000044                     	ds	2
   521  000046                     ??_vfpfcnvrt:
   522                           
   523                           ; 1 bytes @ 0x45
   524  000046                     	ds	2
   525  000048                     vfpfcnvrt@ll:
   526                           	callstack 0
   527                           
   528                           ; 8 bytes @ 0x47
   529  000048                     	ds	8
   530  000050                     ?_vfprintf:
   531                           	callstack 0
   532  000050                     vfprintf@fp:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x4F
   536  000050                     	ds	2
   537  000052                     vfprintf@fmt:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x51
   541  000052                     	ds	2
   542  000054                     vfprintf@ap:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x53
   546  000054                     	ds	2
   547  000056                     vfprintf@cfmt:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x55
   551  000056                     	ds	2
   552  000058                     ?_printf:
   553                           	callstack 0
   554  000058                     printf@fmt:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x57
   558  000058                     	ds	4
   559  00005C                     printf@ap:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x5B
   563  00005C                     	ds	2
   564  00005E                     ??_main:
   565                           
   566                           ; 1 bytes @ 0x5D
   567  00005E                     	ds	1
   568  00005F                     main@a:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x5E
   572  00005F                     	ds	1
   573                           
   574 ;;
   575 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   576 ;;
   577 ;; *************** function _main *****************
   578 ;; Defined at:
   579 ;;		line 19 in file "fun.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;  argc            2    0[BANK0 ] int 
   582 ;;  argv            3    2[BANK0 ] PTR PTR unsigned char 
   583 ;; Auto vars:     Size  Location     Type
   584 ;;  a               1   94[COMRAM] unsigned char 
   585 ;; Return value:  Size  Location     Type
   586 ;;                  2    0[BANK0 ] int 
   587 ;; Registers used:
   588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   594 ;;      Params:         0       5       0       0
   595 ;;      Locals:         1       0       0       0
   596 ;;      Temps:          1       0       0       0
   597 ;;      Totals:         2       5       0       0
   598 ;;Total ram usage:        7 bytes
   599 ;; Hardware stack levels required when called: 8
   600 ;; This function calls:
   601 ;;		_bitRead
   602 ;;		_bitValue
   603 ;;		_bitWrite
   604 ;;		_delay
   605 ;;		_digitalRead
   606 ;;		_pinMode
   607 ;;		_printf
   608 ;; This function is called by:
   609 ;;		Startup code after reset
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text0
   614  0011AA                     __ptext0:
   615                           	callstack 0
   616  0011AA                     _main:
   617                           	callstack 23
   618  0011AA                     
   619                           ;fun.c: 21:     printf("%d\n", bitValue(5));
   620  0011AA  0E01               	movlw	low STR_1
   621  0011AC  6E58               	movwf	printf@fmt^0,c
   622  0011AE  0E03               	movlw	high STR_1
   623  0011B0  6E59               	movwf	(printf@fmt+1)^0,c
   624  0011B2  0E05               	movlw	5
   625  0011B4  EC55  F00B         	call	_bitValue
   626  0011B8  6E5E               	movwf	??_main^0,c
   627  0011BA  505E               	movf	??_main^0,w,c
   628  0011BC  6E5A               	movwf	(?_printf+2)^0,c
   629  0011BE  6A5B               	clrf	(?_printf+3)^0,c
   630  0011C0  EC0D  F00B         	call	_printf	;wreg free
   631  0011C4                     
   632                           ;fun.c: 22:     uint8_t a = 14;
   633  0011C4  0E0E               	movlw	14
   634  0011C6  6E5F               	movwf	main@a^0,c
   635  0011C8                     
   636                           ;fun.c: 23:     bitWrite(&a, 0, 1);
   637  0011C8  0E5F               	movlw	low main@a
   638  0011CA  6E08               	movwf	bitWrite@number^0,c
   639  0011CC  0E00               	movlw	high main@a
   640  0011CE  6E09               	movwf	(bitWrite@number+1)^0,c
   641  0011D0  0E00               	movlw	0
   642  0011D2  6E0A               	movwf	bitWrite@b^0,c
   643  0011D4  0E01               	movlw	1
   644  0011D6  6E0B               	movwf	bitWrite@val^0,c
   645  0011D8  ECF2  F00A         	call	_bitWrite	;wreg free
   646  0011DC                     
   647                           ;fun.c: 24:     printf("%d\n",a);
   648  0011DC  0E01               	movlw	low STR_1
   649  0011DE  6E58               	movwf	printf@fmt^0,c
   650  0011E0  0E03               	movlw	high STR_1
   651  0011E2  6E59               	movwf	(printf@fmt+1)^0,c
   652  0011E4  C05F  F05A         	movff	main@a,?_printf+2
   653  0011E8  6A5B               	clrf	(?_printf+3)^0,c
   654  0011EA  EC0D  F00B         	call	_printf	;wreg free
   655  0011EE                     
   656                           ;fun.c: 25:     printf("%d", bitRead(8,3));
   657  0011EE  0E05               	movlw	low STR_3
   658  0011F0  6E58               	movwf	printf@fmt^0,c
   659  0011F2  0E03               	movlw	high STR_3
   660  0011F4  6E59               	movwf	(printf@fmt+1)^0,c
   661  0011F6  0E03               	movlw	3
   662  0011F8  6E01               	movwf	bitRead@b^0,c
   663  0011FA  0E08               	movlw	8
   664  0011FC  EC45  F00B         	call	_bitRead
   665  001200  6E5E               	movwf	??_main^0,c
   666  001202  505E               	movf	??_main^0,w,c
   667  001204  6E5A               	movwf	(?_printf+2)^0,c
   668  001206  6A5B               	clrf	(?_printf+3)^0,c
   669  001208  EC0D  F00B         	call	_printf	;wreg free
   670  00120C                     
   671                           ;fun.c: 27:     pinMode(33, OUTPUT);
   672  00120C  0E03               	movlw	3
   673  00120E  6E28               	movwf	pinMode@mode^0,c
   674  001210  0E21               	movlw	33
   675  001212  EC85  F001         	call	_pinMode
   676  001216                     
   677                           ;fun.c: 28:     pinMode(15, INPUT);
   678  001216  0E01               	movlw	1
   679  001218  6E28               	movwf	pinMode@mode^0,c
   680  00121A  0E0F               	movlw	15
   681  00121C  EC85  F001         	call	_pinMode
   682  001220                     
   683                           ;fun.c: 29:     printf("%d", digitalRead(18));
   684  001220  0E05               	movlw	low STR_3
   685  001222  6E58               	movwf	printf@fmt^0,c
   686  001224  0E03               	movlw	high STR_3
   687  001226  6E59               	movwf	(printf@fmt+1)^0,c
   688  001228  0E12               	movlw	18
   689  00122A  EC09  F008         	call	_digitalRead
   690  00122E  6E5E               	movwf	??_main^0,c
   691  001230  505E               	movf	??_main^0,w,c
   692  001232  6E5A               	movwf	(?_printf+2)^0,c
   693  001234  6A5B               	clrf	(?_printf+3)^0,c
   694  001236  EC0D  F00B         	call	_printf	;wreg free
   695  00123A                     
   696                           ;fun.c: 30:     delay(300);
   697  00123A  0E2C               	movlw	44
   698  00123C  6E01               	movwf	delay@ms^0,c
   699  00123E  0E01               	movlw	1
   700  001240  6E02               	movwf	(delay@ms+1)^0,c
   701  001242  0E00               	movlw	0
   702  001244  6E03               	movwf	(delay@ms+2)^0,c
   703  001246  0E00               	movlw	0
   704  001248  6E04               	movwf	(delay@ms+3)^0,c
   705  00124A  ECD7  F00A         	call	_delay	;wreg free
   706  00124E  EF00  F000         	goto	start
   707  001252                     __end_of_main:
   708                           	callstack 0
   709                           
   710 ;; *************** function _printf *****************
   711 ;; Defined at:
   712 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
   715 ;;		 -> STR_4(3), STR_3(3), STR_2(4), STR_1(4), 
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  ap              2   91[COMRAM] PTR void [1]
   718 ;;		 -> ?_printf(2), 
   719 ;;  ret             2    0        int 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  2   87[COMRAM] int 
   722 ;; Registers used:
   723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   729 ;;      Params:         4       0       0       0
   730 ;;      Locals:         2       0       0       0
   731 ;;      Temps:          0       0       0       0
   732 ;;      Totals:         6       0       0       0
   733 ;;Total ram usage:        6 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; Hardware stack levels required when called: 7
   736 ;; This function calls:
   737 ;;		_vfprintf
   738 ;; This function is called by:
   739 ;;		_main
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text1
   744  00161A                     __ptext1:
   745                           	callstack 0
   746  00161A                     _printf:
   747                           	callstack 23
   748  00161A  0E5A               	movlw	low (?_printf+2)
   749  00161C  6E5C               	movwf	printf@ap^0,c
   750  00161E  0E00               	movlw	high (?_printf+2)
   751  001620  6E5D               	movwf	(printf@ap+1)^0,c
   752  001622  0E00               	movlw	0
   753  001624  6E50               	movwf	vfprintf@fp^0,c
   754  001626  0E00               	movlw	0
   755  001628  6E51               	movwf	(vfprintf@fp+1)^0,c
   756  00162A  C058  F052         	movff	printf@fmt,vfprintf@fmt
   757  00162E  C059  F053         	movff	printf@fmt+1,vfprintf@fmt+1
   758  001632  0E5C               	movlw	low printf@ap
   759  001634  6E54               	movwf	vfprintf@ap^0,c
   760  001636  0E00               	movlw	high printf@ap
   761  001638  6E55               	movwf	(vfprintf@ap+1)^0,c
   762  00163A  EC06  F00A         	call	_vfprintf	;wreg free
   763  00163E  0012               	return		;funcret
   764  001640                     __end_of_printf:
   765                           	callstack 0
   766                           
   767 ;; *************** function _vfprintf *****************
   768 ;; Defined at:
   769 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   772 ;;		 -> NULL(0), 
   773 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   774 ;;		 -> STR_4(3), STR_3(3), STR_2(4), STR_1(4), 
   775 ;;  ap              2   83[COMRAM] PTR PTR void 
   776 ;;		 -> printf@ap(2), 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   779 ;;		 -> STR_4(3), STR_3(3), STR_2(4), STR_1(4), 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  2   79[COMRAM] int 
   782 ;; Registers used:
   783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   789 ;;      Params:         6       0       0       0
   790 ;;      Locals:         2       0       0       0
   791 ;;      Temps:          0       0       0       0
   792 ;;      Totals:         8       0       0       0
   793 ;;Total ram usage:        8 bytes
   794 ;; Hardware stack levels used: 1
   795 ;; Hardware stack levels required when called: 6
   796 ;; This function calls:
   797 ;;		_vfpfcnvrt
   798 ;; This function is called by:
   799 ;;		_printf
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text2
   804  00140C                     __ptext2:
   805                           	callstack 0
   806  00140C                     _vfprintf:
   807                           	callstack 23
   808  00140C                     
   809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   810  00140C  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
   811  001410  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   812  001414                     
   813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   814  001414  0E00               	movlw	0
   815  001416  0100               	movlb	0	; () banked
   816  001418  6F61               	movwf	(_nout+1)& (0+255),b
   817  00141A  0E00               	movlw	0
   818  00141C  6F60               	movwf	_nout& (0+255),b
   819                           
   820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   821  00141E  EF24  F00A         	goto	l2024
   822  001422                     l2022:
   823                           
   824                           ; BSR set to: 0
   825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   826  001422  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
   827  001426  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   828  00142A  0E56               	movlw	low vfprintf@cfmt
   829  00142C  6E42               	movwf	vfpfcnvrt@fmt^0,c
   830  00142E  0E00               	movlw	high vfprintf@cfmt
   831  001430  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
   832  001432  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
   833  001436  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   834  00143A  ECB9  F005         	call	_vfpfcnvrt	;wreg free
   835  00143E  5040               	movf	?_vfpfcnvrt^0,w,c
   836  001440  0100               	movlb	0	; () banked
   837  001442  2760               	addwf	_nout& (0+255),f,b
   838  001444  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
   839  001446  2361               	addwfc	(_nout+1)& (0+255),f,b
   840  001448                     l2024:
   841                           
   842                           ; BSR set to: 0
   843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   844  001448  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
   845  00144C  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   846  001450                     	if	0	;tblptru may be non-zero
   847  001450                     	endif
   848  001450                     	if	0	;tblptru may be non-zero
   849  001450                     	endif
   850  001450  0008               	tblrd		*
   851  001452  50F5               	movf	tablat,w,c
   852  001454  0900               	iorlw	0
   853  001456  A4D8               	btfss	status,2,c
   854  001458  EF30  F00A         	goto	u1471
   855  00145C  EF32  F00A         	goto	u1470
   856  001460                     u1471:
   857  001460  EF11  F00A         	goto	l2022
   858  001464                     u1470:
   859  001464                     
   860                           ; BSR set to: 0
   861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   862  001464  C060  F050         	movff	_nout,?_vfprintf
   863  001468  C061  F051         	movff	_nout+1,?_vfprintf+1
   864  00146C                     
   865                           ; BSR set to: 0
   866  00146C  0012               	return		;funcret
   867  00146E                     __end_of_vfprintf:
   868                           	callstack 0
   869                           
   870 ;; *************** function _vfpfcnvrt *****************
   871 ;; Defined at:
   872 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
   875 ;;		 -> NULL(0), 
   876 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
   877 ;;		 -> vfprintf@cfmt(2), 
   878 ;;  ap              2   67[COMRAM] PTR PTR void 
   879 ;;		 -> printf@ap(2), 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  ll              8   71[COMRAM] long long 
   882 ;;  llu             8    0        unsigned long long 
   883 ;;  f               4    0        unsigned long long 
   884 ;;  vp              3    0        PTR void 
   885 ;;  ct              3    0        unsigned char [3]
   886 ;;  cp              3    0        PTR unsigned char 
   887 ;;  i               2    0        int 
   888 ;;  done            2    0        int 
   889 ;;  c               1    0        unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  2   63[COMRAM] int 
   892 ;; Registers used:
   893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   899 ;;      Params:         6       0       0       0
   900 ;;      Locals:         8       0       0       0
   901 ;;      Temps:          2       0       0       0
   902 ;;      Totals:        16       0       0       0
   903 ;;Total ram usage:       16 bytes
   904 ;; Hardware stack levels used: 1
   905 ;; Hardware stack levels required when called: 5
   906 ;; This function calls:
   907 ;;		_dtoa
   908 ;;		_fputc
   909 ;; This function is called by:
   910 ;;		_vfprintf
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text3
   915  000B72                     __ptext3:
   916                           	callstack 0
   917  000B72                     _vfpfcnvrt:
   918                           	callstack 23
   919  000B72                     
   920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   921  000B72  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   922  000B76  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   923  000B7A  CFDE FFF6          	movff	postinc2,tblptrl
   924  000B7E  CFDD FFF7          	movff	postdec2,tblptrh
   925  000B82                     	if	0	;tblptru may be non-zero
   926  000B82                     	endif
   927  000B82                     	if	0	;tblptru may be non-zero
   928  000B82                     	endif
   929  000B82  0008               	tblrd		*
   930  000B84  50F5               	movf	tablat,w,c
   931  000B86  0A25               	xorlw	37
   932  000B88  A4D8               	btfss	status,2,c
   933  000B8A  EFC9  F005         	goto	u1391
   934  000B8E  EFCB  F005         	goto	u1390
   935  000B92                     u1391:
   936  000B92  EF77  F006         	goto	l1978
   937  000B96                     u1390:
   938  000B96                     
   939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
   940  000B96  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   941  000B9A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   942  000B9E  2ADE               	incf	postinc2,f,c
   943  000BA0  0E00               	movlw	0
   944  000BA2  22DD               	addwfc	postdec2,f,c
   945  000BA4                     
   946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
   947  000BA4  0E00               	movlw	0
   948  000BA6  0100               	movlb	0	; () banked
   949  000BA8  6F63               	movwf	(_width+1)& (0+255),b
   950  000BAA  0E00               	movlw	0
   951  000BAC  6F62               	movwf	_width& (0+255),b
   952  000BAE  C062  F066         	movff	_width,_flags
   953  000BB2  C063  F067         	movff	_width+1,_flags+1
   954  000BB6                     
   955                           ; BSR set to: 0
   956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
   957  000BB6  6964               	setf	_prec& (0+255),b
   958  000BB8  6965               	setf	(_prec+1)& (0+255),b
   959  000BBA                     
   960                           ; BSR set to: 0
   961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
   962  000BBA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   963  000BBE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   964  000BC2  CFDE FFF6          	movff	postinc2,tblptrl
   965  000BC6  CFDD FFF7          	movff	postdec2,tblptrh
   966  000BCA                     	if	0	;tblptru may be non-zero
   967  000BCA                     	endif
   968  000BCA                     	if	0	;tblptru may be non-zero
   969  000BCA                     	endif
   970  000BCA  0008               	tblrd		*
   971  000BCC  50F5               	movf	tablat,w,c
   972  000BCE  0A64               	xorlw	100
   973  000BD0  B4D8               	btfsc	status,2,c
   974  000BD2  EFED  F005         	goto	u1401
   975  000BD6  EFEF  F005         	goto	u1400
   976  000BDA                     u1401:
   977  000BDA  EF01  F006         	goto	l1956
   978  000BDE                     u1400:
   979  000BDE                     
   980                           ; BSR set to: 0
   981  000BDE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   982  000BE2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   983  000BE6  CFDE FFF6          	movff	postinc2,tblptrl
   984  000BEA  CFDD FFF7          	movff	postdec2,tblptrh
   985  000BEE                     	if	0	;tblptru may be non-zero
   986  000BEE                     	endif
   987  000BEE                     	if	0	;tblptru may be non-zero
   988  000BEE                     	endif
   989  000BEE  0008               	tblrd		*
   990  000BF0  50F5               	movf	tablat,w,c
   991  000BF2  0A69               	xorlw	105
   992  000BF4  A4D8               	btfss	status,2,c
   993  000BF6  EFFF  F005         	goto	u1411
   994  000BFA  EF01  F006         	goto	u1410
   995  000BFE                     u1411:
   996  000BFE  EF41  F006         	goto	l1962
   997  000C02                     u1410:
   998  000C02                     l1956:
   999                           
  1000                           ; BSR set to: 0
  1001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1002  000C02  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1003  000C06  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1004  000C0A  2ADE               	incf	postinc2,f,c
  1005  000C0C  0E00               	movlw	0
  1006  000C0E  22DD               	addwfc	postdec2,f,c
  1007                           
  1008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1009  000C10  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1010  000C14  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1011  000C18  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1012  000C1C  0E02               	movlw	2
  1013  000C1E  26DE               	addwf	postinc2,f,c
  1014  000C20  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1015  000C24  0E00               	movlw	0
  1016  000C26  22DD               	addwfc	postdec2,f,c
  1017  000C28  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1018  000C2C  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1019  000C30  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1020  000C34  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1021  000C38  0E00               	movlw	0
  1022  000C3A  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1023  000C3C  0EFF               	movlw	-1
  1024  000C3E  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1025  000C40  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1026  000C42  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1027  000C44  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1028  000C46  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1029  000C48  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1030  000C4A                     
  1031                           ; BSR set to: 0
  1032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1033  000C4A  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1034  000C4E  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1035  000C52  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1036  000C56  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1037  000C5A  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1038  000C5E  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1039  000C62  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1040  000C66  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1041  000C6A  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1042  000C6E  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1043  000C72  EC48  F004         	call	_dtoa	;wreg free
  1044  000C76  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1045  000C7A  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1046  000C7E  EF92  F006         	goto	l1011
  1047  000C82                     l1962:
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1051  000C82  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1052  000C86  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1053  000C8A  CFDE FFF6          	movff	postinc2,tblptrl
  1054  000C8E  CFDD FFF7          	movff	postdec2,tblptrh
  1055  000C92                     	if	0	;tblptru may be non-zero
  1056  000C92                     	endif
  1057  000C92                     	if	0	;tblptru may be non-zero
  1058  000C92                     	endif
  1059  000C92  0008               	tblrd		*
  1060  000C94  50F5               	movf	tablat,w,c
  1061  000C96  0A25               	xorlw	37
  1062  000C98  A4D8               	btfss	status,2,c
  1063  000C9A  EF51  F006         	goto	u1421
  1064  000C9E  EF53  F006         	goto	u1420
  1065  000CA2                     u1421:
  1066  000CA2  EF6A  F006         	goto	l1972
  1067  000CA6                     u1420:
  1068  000CA6                     
  1069                           ; BSR set to: 0
  1070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1071  000CA6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1072  000CAA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1073  000CAE  2ADE               	incf	postinc2,f,c
  1074  000CB0  0E00               	movlw	0
  1075  000CB2  22DD               	addwfc	postdec2,f,c
  1076  000CB4                     
  1077                           ; BSR set to: 0
  1078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1079  000CB4  0E00               	movlw	0
  1080  000CB6  6E02               	movwf	(fputc@c+1)^0,c
  1081  000CB8  0E25               	movlw	37
  1082  000CBA  6E01               	movwf	fputc@c^0,c
  1083  000CBC  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1084  000CC0  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1085  000CC4  EC29  F009         	call	_fputc	;wreg free
  1086  000CC8                     l1968:
  1087                           
  1088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1089  000CC8  0E00               	movlw	0
  1090  000CCA  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1091  000CCC  0E01               	movlw	1
  1092  000CCE  6E40               	movwf	?_vfpfcnvrt^0,c
  1093  000CD0  EF92  F006         	goto	l1011
  1094  000CD4                     l1972:
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1098  000CD4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1099  000CD8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1100  000CDC  2ADE               	incf	postinc2,f,c
  1101  000CDE  0E00               	movlw	0
  1102  000CE0  22DD               	addwfc	postdec2,f,c
  1103  000CE2                     
  1104                           ; BSR set to: 0
  1105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1106  000CE2  0E00               	movlw	0
  1107  000CE4  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1108  000CE6  0E00               	movlw	0
  1109  000CE8  6E40               	movwf	?_vfpfcnvrt^0,c
  1110  000CEA  EF92  F006         	goto	l1011
  1111  000CEE                     l1978:
  1112                           
  1113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1114  000CEE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1115  000CF2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1116  000CF6  CFDE FFF6          	movff	postinc2,tblptrl
  1117  000CFA  CFDD FFF7          	movff	postdec2,tblptrh
  1118  000CFE                     	if	0	;tblptru may be non-zero
  1119  000CFE                     	endif
  1120  000CFE                     	if	0	;tblptru may be non-zero
  1121  000CFE                     	endif
  1122  000CFE  0008               	tblrd		*
  1123  000D00  50F5               	movf	tablat,w,c
  1124  000D02  6E01               	movwf	fputc@c^0,c
  1125  000D04  6A02               	clrf	(fputc@c+1)^0,c
  1126  000D06  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1127  000D0A  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1128  000D0E  EC29  F009         	call	_fputc	;wreg free
  1129  000D12                     
  1130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1131  000D12  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1132  000D16  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1133  000D1A  2ADE               	incf	postinc2,f,c
  1134  000D1C  0E00               	movlw	0
  1135  000D1E  22DD               	addwfc	postdec2,f,c
  1136  000D20  EF64  F006         	goto	l1968
  1137  000D24                     l1011:
  1138  000D24  0012               	return		;funcret
  1139  000D26                     __end_of_vfpfcnvrt:
  1140                           	callstack 0
  1141                           
  1142 ;; *************** function _dtoa *****************
  1143 ;; Defined at:
  1144 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1147 ;;		 -> NULL(0), 
  1148 ;;  d               8   29[COMRAM] long long 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  n               8   53[COMRAM] long long 
  1151 ;;  i               2   61[COMRAM] int 
  1152 ;;  s               2   51[COMRAM] int 
  1153 ;;  w               2   49[COMRAM] int 
  1154 ;;  p               2   47[COMRAM] int 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  2   27[COMRAM] int 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1164 ;;      Params:        10       0       0       0
  1165 ;;      Locals:        18       0       0       0
  1166 ;;      Temps:          8       0       0       0
  1167 ;;      Totals:        36       0       0       0
  1168 ;;Total ram usage:       36 bytes
  1169 ;; Hardware stack levels used: 1
  1170 ;; Hardware stack levels required when called: 4
  1171 ;; This function calls:
  1172 ;;		___aodiv
  1173 ;;		___aomod
  1174 ;;		_abs
  1175 ;;		_pad
  1176 ;; This function is called by:
  1177 ;;		_vfpfcnvrt
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text4
  1182  000890                     __ptext4:
  1183                           	callstack 0
  1184  000890                     _dtoa:
  1185                           	callstack 23
  1186  000890                     
  1187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1188  000890  C01E  F036         	movff	dtoa@d,dtoa@n
  1189  000894  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1190  000898  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1191  00089C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1192  0008A0  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1193  0008A4  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1194  0008A8  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1195  0008AC  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1196  0008B0                     
  1197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1198  0008B0  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1199  0008B2  EF5D  F004         	goto	u1241
  1200  0008B6  EF60  F004         	goto	u1240
  1201  0008BA                     u1241:
  1202  0008BA  0E01               	movlw	1
  1203  0008BC  EF61  F004         	goto	u1250
  1204  0008C0                     u1240:
  1205  0008C0  0E00               	movlw	0
  1206  0008C2                     u1250:
  1207  0008C2  6E34               	movwf	dtoa@s^0,c
  1208  0008C4  6A35               	clrf	(dtoa@s+1)^0,c
  1209                           
  1210                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1211  0008C6  5034               	movf	dtoa@s^0,w,c
  1212  0008C8  1035               	iorwf	(dtoa@s+1)^0,w,c
  1213  0008CA  B4D8               	btfsc	status,2,c
  1214  0008CC  EF6A  F004         	goto	u1261
  1215  0008D0  EF6C  F004         	goto	u1260
  1216  0008D4                     u1261:
  1217  0008D4  EF7C  F004         	goto	l1888
  1218  0008D8                     u1260:
  1219  0008D8                     
  1220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1221  0008D8  1E3D               	comf	(dtoa@n+7)^0,f,c
  1222  0008DA  1E3C               	comf	(dtoa@n+6)^0,f,c
  1223  0008DC  1E3B               	comf	(dtoa@n+5)^0,f,c
  1224  0008DE  1E3A               	comf	(dtoa@n+4)^0,f,c
  1225  0008E0  1E39               	comf	(dtoa@n+3)^0,f,c
  1226  0008E2  1E38               	comf	(dtoa@n+2)^0,f,c
  1227  0008E4  1E37               	comf	(dtoa@n+1)^0,f,c
  1228  0008E6  6C36               	negf	dtoa@n^0,c
  1229  0008E8  0E00               	movlw	0
  1230  0008EA  2237               	addwfc	(dtoa@n+1)^0,f,c
  1231  0008EC  2238               	addwfc	(dtoa@n+2)^0,f,c
  1232  0008EE  2239               	addwfc	(dtoa@n+3)^0,f,c
  1233  0008F0  223A               	addwfc	(dtoa@n+4)^0,f,c
  1234  0008F2  223B               	addwfc	(dtoa@n+5)^0,f,c
  1235  0008F4  223C               	addwfc	(dtoa@n+6)^0,f,c
  1236  0008F6  223D               	addwfc	(dtoa@n+7)^0,f,c
  1237  0008F8                     l1888:
  1238                           
  1239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1240  0008F8  0100               	movlb	0	; () banked
  1241  0008FA  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1242  0008FC  EF82  F004         	goto	u1271
  1243  000900  EF84  F004         	goto	u1270
  1244  000904                     u1271:
  1245  000904  EF85  F004         	goto	l1892
  1246  000908                     u1270:
  1247  000908                     
  1248                           ; BSR set to: 0
  1249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1250  000908  9366               	bcf	_flags& (0+255),1,b
  1251  00090A                     l1892:
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1255  00090A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1256  00090C  EF92  F004         	goto	u1280
  1257  000910  5165               	movf	(_prec+1)& (0+255),w,b
  1258  000912  E106               	bnz	u1281
  1259  000914  0564               	decf	_prec& (0+255),w,b
  1260  000916  B0D8               	btfsc	status,0,c
  1261  000918  EF90  F004         	goto	u1281
  1262  00091C  EF92  F004         	goto	u1280
  1263  000920                     u1281:
  1264  000920  EF98  F004         	goto	l984
  1265  000924                     u1280:
  1266  000924                     
  1267                           ; BSR set to: 0
  1268  000924  0E00               	movlw	0
  1269  000926  6E31               	movwf	(dtoa@p+1)^0,c
  1270  000928  0E01               	movlw	1
  1271  00092A  6E30               	movwf	dtoa@p^0,c
  1272  00092C  EF9C  F004         	goto	l986
  1273  000930                     l984:
  1274                           
  1275                           ; BSR set to: 0
  1276  000930  C064  F030         	movff	_prec,dtoa@p
  1277  000934  C065  F031         	movff	_prec+1,dtoa@p+1
  1278  000938                     l986:
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1282  000938  C062  F032         	movff	_width,dtoa@w
  1283  00093C  C063  F033         	movff	_width+1,dtoa@w+1
  1284  000940                     
  1285                           ; BSR set to: 0
  1286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1287  000940  5034               	movf	dtoa@s^0,w,c
  1288  000942  1035               	iorwf	(dtoa@s+1)^0,w,c
  1289  000944  A4D8               	btfss	status,2,c
  1290  000946  EFA7  F004         	goto	u1291
  1291  00094A  EFA9  F004         	goto	u1290
  1292  00094E                     u1291:
  1293  00094E  EFB0  F004         	goto	l1900
  1294  000952                     u1290:
  1295  000952                     
  1296                           ; BSR set to: 0
  1297  000952  A566               	btfss	_flags& (0+255),2,b
  1298  000954  EFAE  F004         	goto	u1301
  1299  000958  EFB0  F004         	goto	u1300
  1300  00095C                     u1301:
  1301  00095C  EFB3  F004         	goto	l1902
  1302  000960                     u1300:
  1303  000960                     l1900:
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1307  000960  0632               	decf	dtoa@w^0,f,c
  1308  000962  A0D8               	btfss	status,0,c
  1309  000964  0633               	decf	(dtoa@w+1)^0,f,c
  1310  000966                     l1902:
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1314  000966  0E00               	movlw	0
  1315  000968  6E3F               	movwf	(dtoa@i+1)^0,c
  1316  00096A  0E1F               	movlw	31
  1317  00096C  6E3E               	movwf	dtoa@i^0,c
  1318  00096E                     
  1319                           ; BSR set to: 0
  1320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1321  00096E  0E00               	movlw	0
  1322  000970  6F87               	movwf	(_dbuf+31)& (0+255),b
  1323                           
  1324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1325  000972  EF37  F005         	goto	l1916
  1326  000976                     l1906:
  1327                           
  1328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1329  000976  063E               	decf	dtoa@i^0,f,c
  1330  000978  A0D8               	btfss	status,0,c
  1331  00097A  063F               	decf	(dtoa@i+1)^0,f,c
  1332  00097C                     
  1333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1334  00097C  0E68               	movlw	low _dbuf
  1335  00097E  243E               	addwf	dtoa@i^0,w,c
  1336  000980  6ED9               	movwf	fsr2l,c
  1337  000982  0E00               	movlw	high _dbuf
  1338  000984  203F               	addwfc	(dtoa@i+1)^0,w,c
  1339  000986  6EDA               	movwf	fsr2h,c
  1340  000988  C036  F001         	movff	dtoa@n,___aomod@dividend
  1341  00098C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1342  000990  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1343  000994  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1344  000998  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1345  00099C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1346  0009A0  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1347  0009A4  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1348  0009A8  0E0A               	movlw	10
  1349  0009AA  6E09               	movwf	___aomod@divisor^0,c
  1350  0009AC  0E00               	movlw	0
  1351  0009AE  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1352  0009B0  0E00               	movlw	0
  1353  0009B2  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1354  0009B4  0E00               	movlw	0
  1355  0009B6  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1356  0009B8  0E00               	movlw	0
  1357  0009BA  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1358  0009BC  0E00               	movlw	0
  1359  0009BE  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1360  0009C0  0E00               	movlw	0
  1361  0009C2  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1362  0009C4  0E00               	movlw	0
  1363  0009C6  6E10               	movwf	(___aomod@divisor+7)^0,c
  1364  0009C8  EC57  F007         	call	___aomod	;wreg free
  1365  0009CC  C001  F026         	movff	?___aomod,??_dtoa
  1366  0009D0  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1367  0009D4  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1368  0009D8  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1369  0009DC  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1370  0009E0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1371  0009E4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1372  0009E8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1373  0009EC  C026  F013         	movff	??_dtoa,abs@a
  1374  0009F0  C028  F014         	movff	??_dtoa+2,abs@a+1
  1375  0009F4  EC81  F00A         	call	_abs	;wreg free
  1376  0009F8  5013               	movf	?_abs^0,w,c
  1377  0009FA  0F30               	addlw	48
  1378  0009FC  6EDF               	movwf	indf2,c
  1379  0009FE                     
  1380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  1381  0009FE  0630               	decf	dtoa@p^0,f,c
  1382  000A00  A0D8               	btfss	status,0,c
  1383  000A02  0631               	decf	(dtoa@p+1)^0,f,c
  1384  000A04                     
  1385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  1386  000A04  0632               	decf	dtoa@w^0,f,c
  1387  000A06  A0D8               	btfss	status,0,c
  1388  000A08  0633               	decf	(dtoa@w+1)^0,f,c
  1389  000A0A                     
  1390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1391  000A0A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1392  000A0E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1393  000A12  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1394  000A16  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1395  000A1A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1396  000A1E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1397  000A22  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1398  000A26  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1399  000A2A  0E0A               	movlw	10
  1400  000A2C  6E09               	movwf	___aodiv@divisor^0,c
  1401  000A2E  0E00               	movlw	0
  1402  000A30  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1403  000A32  0E00               	movlw	0
  1404  000A34  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1405  000A36  0E00               	movlw	0
  1406  000A38  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1407  000A3A  0E00               	movlw	0
  1408  000A3C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1409  000A3E  0E00               	movlw	0
  1410  000A40  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1411  000A42  0E00               	movlw	0
  1412  000A44  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1413  000A46  0E00               	movlw	0
  1414  000A48  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1415  000A4A  EC93  F006         	call	___aodiv	;wreg free
  1416  000A4E  C001  F036         	movff	?___aodiv,dtoa@n
  1417  000A52  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1418  000A56  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1419  000A5A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1420  000A5E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1421  000A62  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1422  000A66  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1423  000A6A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1424  000A6E                     l1916:
  1425                           
  1426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1427  000A6E  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1428  000A70  EF42  F005         	goto	u1311
  1429  000A74  503F               	movf	(dtoa@i+1)^0,w,c
  1430  000A76  E108               	bnz	u1310
  1431  000A78  043E               	decf	dtoa@i^0,w,c
  1432  000A7A  A0D8               	btfss	status,0,c
  1433  000A7C  EF42  F005         	goto	u1311
  1434  000A80  EF44  F005         	goto	u1310
  1435  000A84                     u1311:
  1436  000A84  EF75  F005         	goto	l1926
  1437  000A88                     u1310:
  1438  000A88  5036               	movf	dtoa@n^0,w,c
  1439  000A8A  1037               	iorwf	(dtoa@n+1)^0,w,c
  1440  000A8C  1038               	iorwf	(dtoa@n+2)^0,w,c
  1441  000A8E  1039               	iorwf	(dtoa@n+3)^0,w,c
  1442  000A90  103A               	iorwf	(dtoa@n+4)^0,w,c
  1443  000A92  103B               	iorwf	(dtoa@n+5)^0,w,c
  1444  000A94  103C               	iorwf	(dtoa@n+6)^0,w,c
  1445  000A96  103D               	iorwf	(dtoa@n+7)^0,w,c
  1446  000A98  A4D8               	btfss	status,2,c
  1447  000A9A  EF51  F005         	goto	u1321
  1448  000A9E  EF53  F005         	goto	u1320
  1449  000AA2                     u1321:
  1450  000AA2  EFBB  F004         	goto	l1906
  1451  000AA6                     u1320:
  1452  000AA6  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1453  000AA8  EF60  F005         	goto	u1330
  1454  000AAC  5031               	movf	(dtoa@p+1)^0,w,c
  1455  000AAE  E106               	bnz	u1331
  1456  000AB0  0430               	decf	dtoa@p^0,w,c
  1457  000AB2  B0D8               	btfsc	status,0,c
  1458  000AB4  EF5E  F005         	goto	u1331
  1459  000AB8  EF60  F005         	goto	u1330
  1460  000ABC                     u1331:
  1461  000ABC  EFBB  F004         	goto	l1906
  1462  000AC0                     u1330:
  1463  000AC0  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1464  000AC2  EF6B  F005         	goto	u1341
  1465  000AC6  5033               	movf	(dtoa@w+1)^0,w,c
  1466  000AC8  E108               	bnz	u1340
  1467  000ACA  0432               	decf	dtoa@w^0,w,c
  1468  000ACC  A0D8               	btfss	status,0,c
  1469  000ACE  EF6B  F005         	goto	u1341
  1470  000AD2  EF6D  F005         	goto	u1340
  1471  000AD6                     u1341:
  1472  000AD6  EF75  F005         	goto	l1926
  1473  000ADA                     u1340:
  1474  000ADA  0100               	movlb	0	; () banked
  1475  000ADC  B366               	btfsc	_flags& (0+255),1,b
  1476  000ADE  EF73  F005         	goto	u1351
  1477  000AE2  EF75  F005         	goto	u1350
  1478  000AE6                     u1351:
  1479  000AE6  EFBB  F004         	goto	l1906
  1480  000AEA                     u1350:
  1481  000AEA                     l1926:
  1482                           
  1483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1484  000AEA  5034               	movf	dtoa@s^0,w,c
  1485  000AEC  1035               	iorwf	(dtoa@s+1)^0,w,c
  1486  000AEE  A4D8               	btfss	status,2,c
  1487  000AF0  EF7C  F005         	goto	u1361
  1488  000AF4  EF7E  F005         	goto	u1360
  1489  000AF8                     u1361:
  1490  000AF8  EF86  F005         	goto	l1930
  1491  000AFC                     u1360:
  1492  000AFC  0100               	movlb	0	; () banked
  1493  000AFE  A566               	btfss	_flags& (0+255),2,b
  1494  000B00  EF84  F005         	goto	u1371
  1495  000B04  EF86  F005         	goto	u1370
  1496  000B08                     u1371:
  1497  000B08  EFA4  F005         	goto	l1940
  1498  000B0C                     u1370:
  1499  000B0C                     l1930:
  1500                           
  1501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  1502  000B0C  063E               	decf	dtoa@i^0,f,c
  1503  000B0E  A0D8               	btfss	status,0,c
  1504  000B10  063F               	decf	(dtoa@i+1)^0,f,c
  1505  000B12                     
  1506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1507  000B12  5034               	movf	dtoa@s^0,w,c
  1508  000B14  1035               	iorwf	(dtoa@s+1)^0,w,c
  1509  000B16  A4D8               	btfss	status,2,c
  1510  000B18  EF90  F005         	goto	u1381
  1511  000B1C  EF92  F005         	goto	u1380
  1512  000B20                     u1381:
  1513  000B20  EF98  F005         	goto	l1936
  1514  000B24                     u1380:
  1515  000B24  0E00               	movlw	0
  1516  000B26  6E2F               	movwf	(_dtoa$759+1)^0,c
  1517  000B28  0E2B               	movlw	43
  1518  000B2A  6E2E               	movwf	_dtoa$759^0,c
  1519  000B2C  EF9C  F005         	goto	l1938
  1520  000B30                     l1936:
  1521  000B30  0E00               	movlw	0
  1522  000B32  6E2F               	movwf	(_dtoa$759+1)^0,c
  1523  000B34  0E2D               	movlw	45
  1524  000B36  6E2E               	movwf	_dtoa$759^0,c
  1525  000B38                     l1938:
  1526  000B38  0E68               	movlw	low _dbuf
  1527  000B3A  243E               	addwf	dtoa@i^0,w,c
  1528  000B3C  6ED9               	movwf	fsr2l,c
  1529  000B3E  0E00               	movlw	high _dbuf
  1530  000B40  203F               	addwfc	(dtoa@i+1)^0,w,c
  1531  000B42  6EDA               	movwf	fsr2h,c
  1532  000B44  C02E  FFDF         	movff	_dtoa$759,indf2
  1533  000B48                     l1940:
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1536  000B48  C01C  F011         	movff	dtoa@fp,pad@fp
  1537  000B4C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1538  000B50  0E68               	movlw	low _dbuf
  1539  000B52  243E               	addwf	dtoa@i^0,w,c
  1540  000B54  6E13               	movwf	pad@buf^0,c
  1541  000B56  0E00               	movlw	high _dbuf
  1542  000B58  203F               	addwfc	(dtoa@i+1)^0,w,c
  1543  000B5A  6E14               	movwf	(pad@buf+1)^0,c
  1544  000B5C  C032  F015         	movff	dtoa@w,pad@p
  1545  000B60  C033  F016         	movff	dtoa@w+1,pad@p+1
  1546  000B64  EC72  F008         	call	_pad	;wreg free
  1547  000B68  C011  F01C         	movff	?_pad,?_dtoa
  1548  000B6C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1549  000B70  0012               	return		;funcret
  1550  000B72                     __end_of_dtoa:
  1551                           	callstack 0
  1552                           
  1553 ;; *************** function _pad *****************
  1554 ;; Defined at:
  1555 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1558 ;;		 -> NULL(0), 
  1559 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1560 ;;		 -> dbuf(32), 
  1561 ;;  p               2   20[COMRAM] int 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  w               2   25[COMRAM] int 
  1564 ;;  i               2   23[COMRAM] int 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  2   16[COMRAM] int 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1574 ;;      Params:         6       0       0       0
  1575 ;;      Locals:         4       0       0       0
  1576 ;;      Temps:          1       0       0       0
  1577 ;;      Totals:        11       0       0       0
  1578 ;;Total ram usage:       11 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; Hardware stack levels required when called: 3
  1581 ;; This function calls:
  1582 ;;		_fputc
  1583 ;;		_fputs
  1584 ;;		_strlen
  1585 ;; This function is called by:
  1586 ;;		_dtoa
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text5
  1591  0010E4                     __ptext5:
  1592                           	callstack 0
  1593  0010E4                     _pad:
  1594                           	callstack 23
  1595  0010E4                     
  1596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1597  0010E4  0100               	movlb	0	; () banked
  1598  0010E6  A166               	btfss	_flags& (0+255),0,b
  1599  0010E8  EF78  F008         	goto	u1191
  1600  0010EC  EF7A  F008         	goto	u1190
  1601  0010F0                     u1191:
  1602  0010F0  EF84  F008         	goto	l1860
  1603  0010F4                     u1190:
  1604  0010F4                     
  1605                           ; BSR set to: 0
  1606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1607  0010F4  C013  F00A         	movff	pad@buf,fputs@s
  1608  0010F8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1609  0010FC  C011  F00C         	movff	pad@fp,fputs@fp
  1610  001100  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1611  001104  EC5F  F00A         	call	_fputs	;wreg free
  1612  001108                     l1860:
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1615  001108  BE16               	btfsc	(pad@p+1)^0,7,c
  1616  00110A  EF89  F008         	goto	u1201
  1617  00110E  EF8B  F008         	goto	u1200
  1618  001112                     u1201:
  1619  001112  EF91  F008         	goto	l1864
  1620  001116                     u1200:
  1621  001116  C015  F01A         	movff	pad@p,pad@w
  1622  00111A  C016  F01B         	movff	pad@p+1,pad@w+1
  1623  00111E  EF95  F008         	goto	l973
  1624  001122                     l1864:
  1625  001122  0E00               	movlw	0
  1626  001124  6E1B               	movwf	(pad@w+1)^0,c
  1627  001126  0E00               	movlw	0
  1628  001128  6E1A               	movwf	pad@w^0,c
  1629  00112A                     l973:
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1632  00112A  0E00               	movlw	0
  1633  00112C  6E19               	movwf	(pad@i+1)^0,c
  1634  00112E  0E00               	movlw	0
  1635  001130  6E18               	movwf	pad@i^0,c
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1638  001132  EFA7  F008         	goto	l1870
  1639  001136                     l1866:
  1640                           
  1641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1642  001136  0E00               	movlw	0
  1643  001138  6E02               	movwf	(fputc@c+1)^0,c
  1644  00113A  0E20               	movlw	32
  1645  00113C  6E01               	movwf	fputc@c^0,c
  1646  00113E  C011  F003         	movff	pad@fp,fputc@fp
  1647  001142  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1648  001146  EC29  F009         	call	_fputc	;wreg free
  1649  00114A                     
  1650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1651  00114A  4A18               	infsnz	pad@i^0,f,c
  1652  00114C  2A19               	incf	(pad@i+1)^0,f,c
  1653  00114E                     l1870:
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1656  00114E  501A               	movf	pad@w^0,w,c
  1657  001150  5C18               	subwf	pad@i^0,w,c
  1658  001152  5019               	movf	(pad@i+1)^0,w,c
  1659  001154  0A80               	xorlw	128
  1660  001156  6E17               	movwf	??_pad^0,c
  1661  001158  501B               	movf	(pad@w+1)^0,w,c
  1662  00115A  0A80               	xorlw	128
  1663  00115C  5817               	subwfb	??_pad^0,w,c
  1664  00115E  A0D8               	btfss	status,0,c
  1665  001160  EFB4  F008         	goto	u1211
  1666  001164  EFB6  F008         	goto	u1210
  1667  001168                     u1211:
  1668  001168  EF9B  F008         	goto	l1866
  1669  00116C                     u1210:
  1670  00116C                     
  1671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1672  00116C  0100               	movlb	0	; () banked
  1673  00116E  B166               	btfsc	_flags& (0+255),0,b
  1674  001170  EFBC  F008         	goto	u1221
  1675  001174  EFBE  F008         	goto	u1220
  1676  001178                     u1221:
  1677  001178  EFC8  F008         	goto	l1874
  1678  00117C                     u1220:
  1679  00117C                     
  1680                           ; BSR set to: 0
  1681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1682  00117C  C013  F00A         	movff	pad@buf,fputs@s
  1683  001180  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1684  001184  C011  F00C         	movff	pad@fp,fputs@fp
  1685  001188  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1686  00118C  EC5F  F00A         	call	_fputs	;wreg free
  1687  001190                     l1874:
  1688                           
  1689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1690  001190  C013  F001         	movff	pad@buf,strlen@s
  1691  001194  C014  F002         	movff	pad@buf+1,strlen@s+1
  1692  001198  ECBC  F00A         	call	_strlen	;wreg free
  1693  00119C  501A               	movf	pad@w^0,w,c
  1694  00119E  2401               	addwf	?_strlen^0,w,c
  1695  0011A0  6E11               	movwf	?_pad^0,c
  1696  0011A2  501B               	movf	(pad@w+1)^0,w,c
  1697  0011A4  2002               	addwfc	(?_strlen+1)^0,w,c
  1698  0011A6  6E12               	movwf	(?_pad+1)^0,c
  1699  0011A8  0012               	return		;funcret
  1700  0011AA                     __end_of_pad:
  1701                           	callstack 0
  1702                           
  1703 ;; *************** function _strlen *****************
  1704 ;; Defined at:
  1705 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1708 ;;		 -> dbuf(32), 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1711 ;;		 -> dbuf(32), 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  2    0[COMRAM] unsigned int 
  1714 ;; Registers used:
  1715 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1721 ;;      Params:         2       0       0       0
  1722 ;;      Locals:         2       0       0       0
  1723 ;;      Temps:          0       0       0       0
  1724 ;;      Totals:         4       0       0       0
  1725 ;;Total ram usage:        4 bytes
  1726 ;; Hardware stack levels used: 1
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_pad
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text6
  1735  001578                     __ptext6:
  1736                           	callstack 0
  1737  001578                     _strlen:
  1738                           	callstack 25
  1739  001578  C001  F003         	movff	strlen@s,strlen@a
  1740  00157C  C002  F004         	movff	strlen@s+1,strlen@a+1
  1741  001580  EFC4  F00A         	goto	l1770
  1742  001584                     l1768:
  1743  001584  4A01               	infsnz	strlen@s^0,f,c
  1744  001586  2A02               	incf	(strlen@s+1)^0,f,c
  1745  001588                     l1770:
  1746  001588  C001  FFD9         	movff	strlen@s,fsr2l
  1747  00158C  C002  FFDA         	movff	strlen@s+1,fsr2h
  1748  001590  50DF               	movf	indf2,w,c
  1749  001592  A4D8               	btfss	status,2,c
  1750  001594  EFCE  F00A         	goto	u1051
  1751  001598  EFD0  F00A         	goto	u1050
  1752  00159C                     u1051:
  1753  00159C  EFC2  F00A         	goto	l1768
  1754  0015A0                     u1050:
  1755  0015A0  5003               	movf	strlen@a^0,w,c
  1756  0015A2  5C01               	subwf	strlen@s^0,w,c
  1757  0015A4  6E01               	movwf	?_strlen^0,c
  1758  0015A6  5004               	movf	(strlen@a+1)^0,w,c
  1759  0015A8  5802               	subwfb	(strlen@s+1)^0,w,c
  1760  0015AA  6E02               	movwf	(?_strlen+1)^0,c
  1761  0015AC  0012               	return		;funcret
  1762  0015AE                     __end_of_strlen:
  1763                           	callstack 0
  1764                           
  1765 ;; *************** function _fputs *****************
  1766 ;; Defined at:
  1767 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1770 ;;		 -> dbuf(32), 
  1771 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1772 ;;		 -> NULL(0), 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  i               2   14[COMRAM] int 
  1775 ;;  c               1   13[COMRAM] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  2    9[COMRAM] int 
  1778 ;; Registers used:
  1779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1785 ;;      Params:         4       0       0       0
  1786 ;;      Locals:         3       0       0       0
  1787 ;;      Temps:          0       0       0       0
  1788 ;;      Totals:         7       0       0       0
  1789 ;;Total ram usage:        7 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 2
  1792 ;; This function calls:
  1793 ;;		_fputc
  1794 ;; This function is called by:
  1795 ;;		_pad
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text7
  1800  0014BE                     __ptext7:
  1801                           	callstack 0
  1802  0014BE                     _fputs:
  1803                           	callstack 23
  1804  0014BE  0E00               	movlw	0
  1805  0014C0  6E10               	movwf	(fputs@i+1)^0,c
  1806  0014C2  0E00               	movlw	0
  1807  0014C4  6E0F               	movwf	fputs@i^0,c
  1808  0014C6  EF70  F00A         	goto	l1764
  1809  0014CA                     l1760:
  1810  0014CA  C00E  F001         	movff	fputs@c,fputc@c
  1811  0014CE  6A02               	clrf	(fputc@c+1)^0,c
  1812  0014D0  C00C  F003         	movff	fputs@fp,fputc@fp
  1813  0014D4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1814  0014D8  EC29  F009         	call	_fputc	;wreg free
  1815  0014DC  4A0F               	infsnz	fputs@i^0,f,c
  1816  0014DE  2A10               	incf	(fputs@i+1)^0,f,c
  1817  0014E0                     l1764:
  1818  0014E0  500F               	movf	fputs@i^0,w,c
  1819  0014E2  240A               	addwf	fputs@s^0,w,c
  1820  0014E4  6ED9               	movwf	fsr2l,c
  1821  0014E6  5010               	movf	(fputs@i+1)^0,w,c
  1822  0014E8  200B               	addwfc	(fputs@s+1)^0,w,c
  1823  0014EA  6EDA               	movwf	fsr2h,c
  1824  0014EC  50DF               	movf	indf2,w,c
  1825  0014EE  6E0E               	movwf	fputs@c^0,c
  1826  0014F0  500E               	movf	fputs@c^0,w,c
  1827  0014F2  A4D8               	btfss	status,2,c
  1828  0014F4  EF7E  F00A         	goto	u1041
  1829  0014F8  EF80  F00A         	goto	u1040
  1830  0014FC                     u1041:
  1831  0014FC  EF65  F00A         	goto	l1760
  1832  001500                     u1040:
  1833  001500  0012               	return		;funcret
  1834  001502                     __end_of_fputs:
  1835                           	callstack 0
  1836                           
  1837 ;; *************** function _fputc *****************
  1838 ;; Defined at:
  1839 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  c               2    0[COMRAM] int 
  1842 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1843 ;;		 -> NULL(0), 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  2    0[COMRAM] int 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1855 ;;      Params:         4       0       0       0
  1856 ;;      Locals:         0       0       0       0
  1857 ;;      Temps:          5       0       0       0
  1858 ;;      Totals:         9       0       0       0
  1859 ;;Total ram usage:        9 bytes
  1860 ;; Hardware stack levels used: 1
  1861 ;; Hardware stack levels required when called: 1
  1862 ;; This function calls:
  1863 ;;		_putch
  1864 ;; This function is called by:
  1865 ;;		_pad
  1866 ;;		_vfpfcnvrt
  1867 ;;		_fputs
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text8
  1872  001252                     __ptext8:
  1873                           	callstack 0
  1874  001252                     _fputc:
  1875                           	callstack 26
  1876  001252  5003               	movf	fputc@fp^0,w,c
  1877  001254  1004               	iorwf	(fputc@fp+1)^0,w,c
  1878  001256  B4D8               	btfsc	status,2,c
  1879  001258  EF30  F009         	goto	u1001
  1880  00125C  EF32  F009         	goto	u1000
  1881  001260                     u1001:
  1882  001260  EF3B  F009         	goto	l1748
  1883  001264                     u1000:
  1884  001264  5003               	movf	fputc@fp^0,w,c
  1885  001266  1004               	iorwf	(fputc@fp+1)^0,w,c
  1886  001268  A4D8               	btfss	status,2,c
  1887  00126A  EF39  F009         	goto	u1011
  1888  00126E  EF3B  F009         	goto	u1010
  1889  001272                     u1011:
  1890  001272  EF40  F009         	goto	l1750
  1891  001276                     u1010:
  1892  001276                     l1748:
  1893  001276  5001               	movf	fputc@c^0,w,c
  1894  001278  EC92  F00B         	call	_putch
  1895  00127C  EF73  F009         	goto	l1037
  1896  001280                     l1750:
  1897  001280  EE20 F004          	lfsr	2,4
  1898  001284  5003               	movf	fputc@fp^0,w,c
  1899  001286  26D9               	addwf	fsr2l,f,c
  1900  001288  5004               	movf	(fputc@fp+1)^0,w,c
  1901  00128A  22DA               	addwfc	fsr2h,f,c
  1902  00128C  50DE               	movf	postinc2,w,c
  1903  00128E  10DE               	iorwf	postinc2,w,c
  1904  001290  B4D8               	btfsc	status,2,c
  1905  001292  EF4D  F009         	goto	u1021
  1906  001296  EF4F  F009         	goto	u1020
  1907  00129A                     u1021:
  1908  00129A  EF6A  F009         	goto	l1754
  1909  00129E                     u1020:
  1910  00129E  EE20 F004          	lfsr	2,4
  1911  0012A2  5003               	movf	fputc@fp^0,w,c
  1912  0012A4  26D9               	addwf	fsr2l,f,c
  1913  0012A6  5004               	movf	(fputc@fp+1)^0,w,c
  1914  0012A8  22DA               	addwfc	fsr2h,f,c
  1915  0012AA  EE10 F002          	lfsr	1,2
  1916  0012AE  5003               	movf	fputc@fp^0,w,c
  1917  0012B0  26E1               	addwf	fsr1l,f,c
  1918  0012B2  5004               	movf	(fputc@fp+1)^0,w,c
  1919  0012B4  22E2               	addwfc	fsr1h,f,c
  1920  0012B6  50DE               	movf	postinc2,w,c
  1921  0012B8  5CE6               	subwf	postinc1,w,c
  1922  0012BA  50E6               	movf	postinc1,w,c
  1923  0012BC  0A80               	xorlw	128
  1924  0012BE  6E09               	movwf	(??_fputc+4)^0,c
  1925  0012C0  50DE               	movf	postinc2,w,c
  1926  0012C2  0A80               	xorlw	128
  1927  0012C4  5809               	subwfb	(??_fputc+4)^0,w,c
  1928  0012C6  B0D8               	btfsc	status,0,c
  1929  0012C8  EF68  F009         	goto	u1031
  1930  0012CC  EF6A  F009         	goto	u1030
  1931  0012D0                     u1031:
  1932  0012D0  EF73  F009         	goto	l1037
  1933  0012D4                     u1030:
  1934  0012D4                     l1754:
  1935  0012D4  EE20 F002          	lfsr	2,2
  1936  0012D8  5003               	movf	fputc@fp^0,w,c
  1937  0012DA  26D9               	addwf	fsr2l,f,c
  1938  0012DC  5004               	movf	(fputc@fp+1)^0,w,c
  1939  0012DE  22DA               	addwfc	fsr2h,f,c
  1940  0012E0  2ADE               	incf	postinc2,f,c
  1941  0012E2  0E00               	movlw	0
  1942  0012E4  22DD               	addwfc	postdec2,f,c
  1943  0012E6                     l1037:
  1944  0012E6  0012               	return		;funcret
  1945  0012E8                     __end_of_fputc:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _putch *****************
  1949 ;; Defined at:
  1950 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  c               1    wreg     unsigned char 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  c               1    0[COMRAM] unsigned char 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1964 ;;      Params:         0       0       0       0
  1965 ;;      Locals:         0       0       0       0
  1966 ;;      Temps:          0       0       0       0
  1967 ;;      Totals:         0       0       0       0
  1968 ;;Total ram usage:        0 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; This function calls:
  1971 ;;		Nothing
  1972 ;; This function is called by:
  1973 ;;		_fputc
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text9
  1978  001724                     __ptext9:
  1979                           	callstack 0
  1980  001724                     _putch:
  1981                           	callstack 26
  1982  001724  0012               	return		;funcret
  1983  001726                     __end_of_putch:
  1984                           	callstack 0
  1985                           
  1986 ;; *************** function _abs *****************
  1987 ;; Defined at:
  1988 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  a               2   18[COMRAM] int 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;		None
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  2   18[COMRAM] int 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2002 ;;      Params:         2       0       0       0
  2003 ;;      Locals:         0       0       0       0
  2004 ;;      Temps:          2       0       0       0
  2005 ;;      Totals:         4       0       0       0
  2006 ;;Total ram usage:        4 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_dtoa
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text10
  2016  001502                     __ptext10:
  2017                           	callstack 0
  2018  001502                     _abs:
  2019                           	callstack 26
  2020  001502  BE14               	btfsc	(abs@a+1)^0,7,c
  2021  001504  EF8E  F00A         	goto	u1230
  2022  001508  5014               	movf	(abs@a+1)^0,w,c
  2023  00150A  E106               	bnz	u1231
  2024  00150C  0413               	decf	abs@a^0,w,c
  2025  00150E  B0D8               	btfsc	status,0,c
  2026  001510  EF8C  F00A         	goto	u1231
  2027  001514  EF8E  F00A         	goto	u1230
  2028  001518                     u1231:
  2029  001518  EF9C  F00A         	goto	l1022
  2030  00151C                     u1230:
  2031  00151C  C013  F015         	movff	abs@a,??_abs
  2032  001520  C014  F016         	movff	abs@a+1,??_abs+1
  2033  001524  1E15               	comf	??_abs^0,f,c
  2034  001526  1E16               	comf	(??_abs+1)^0,f,c
  2035  001528  4A15               	infsnz	??_abs^0,f,c
  2036  00152A  2A16               	incf	(??_abs+1)^0,f,c
  2037  00152C  C015  F013         	movff	??_abs,?_abs
  2038  001530  C016  F014         	movff	??_abs+1,?_abs+1
  2039  001534  EFA0  F00A         	goto	l1025
  2040  001538                     l1022:
  2041  001538  C013  F013         	movff	abs@a,?_abs
  2042  00153C  C014  F014         	movff	abs@a+1,?_abs+1
  2043  001540                     l1025:
  2044  001540  0012               	return		;funcret
  2045  001542                     __end_of_abs:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function ___aomod *****************
  2049 ;; Defined at:
  2050 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  dividend        8    0[COMRAM] long long 
  2053 ;;  divisor         8    8[COMRAM] long long 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  sign            1   17[COMRAM] unsigned char 
  2056 ;;  counter         1   16[COMRAM] unsigned char 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  8    0[COMRAM] long long 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2066 ;;      Params:        16       0       0       0
  2067 ;;      Locals:         2       0       0       0
  2068 ;;      Temps:          0       0       0       0
  2069 ;;      Totals:        18       0       0       0
  2070 ;;Total ram usage:       18 bytes
  2071 ;; Hardware stack levels used: 1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_dtoa
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text11
  2080  000EAE                     __ptext11:
  2081                           	callstack 0
  2082  000EAE                     ___aomod:
  2083                           	callstack 26
  2084  000EAE  0E00               	movlw	0
  2085  000EB0  6E12               	movwf	___aomod@sign^0,c
  2086  000EB2  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2087  000EB4  EF60  F007         	goto	u1130
  2088  000EB8  EF5E  F007         	goto	u1131
  2089  000EBC                     u1131:
  2090  000EBC  EF72  F007         	goto	l1828
  2091  000EC0                     u1130:
  2092  000EC0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2093  000EC2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2094  000EC4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2095  000EC6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2096  000EC8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2097  000ECA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2098  000ECC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2099  000ECE  6C01               	negf	___aomod@dividend^0,c
  2100  000ED0  0E00               	movlw	0
  2101  000ED2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2102  000ED4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2103  000ED6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2104  000ED8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2105  000EDA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2106  000EDC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2107  000EDE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2108  000EE0  0E01               	movlw	1
  2109  000EE2  6E12               	movwf	___aomod@sign^0,c
  2110  000EE4                     l1828:
  2111  000EE4  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2112  000EE6  EF79  F007         	goto	u1140
  2113  000EEA  EF77  F007         	goto	u1141
  2114  000EEE                     u1141:
  2115  000EEE  EF89  F007         	goto	l1832
  2116  000EF2                     u1140:
  2117  000EF2  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2118  000EF4  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2119  000EF6  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2120  000EF8  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2121  000EFA  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2122  000EFC  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2123  000EFE  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2124  000F00  6C09               	negf	___aomod@divisor^0,c
  2125  000F02  0E00               	movlw	0
  2126  000F04  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2127  000F06  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2128  000F08  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2129  000F0A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2130  000F0C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2131  000F0E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2132  000F10  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2133  000F12                     l1832:
  2134  000F12  5009               	movf	___aomod@divisor^0,w,c
  2135  000F14  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2136  000F16  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2137  000F18  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2138  000F1A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2139  000F1C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2140  000F1E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2141  000F20  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2142  000F22  B4D8               	btfsc	status,2,c
  2143  000F24  EF96  F007         	goto	u1151
  2144  000F28  EF98  F007         	goto	u1150
  2145  000F2C                     u1151:
  2146  000F2C  EFE0  F007         	goto	l1848
  2147  000F30                     u1150:
  2148  000F30  0E01               	movlw	1
  2149  000F32  6E11               	movwf	___aomod@counter^0,c
  2150  000F34  EFA6  F007         	goto	l1838
  2151  000F38                     l1836:
  2152  000F38  90D8               	bcf	status,0,c
  2153  000F3A  3609               	rlcf	___aomod@divisor^0,f,c
  2154  000F3C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2155  000F3E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2156  000F40  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2157  000F42  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2158  000F44  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2159  000F46  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2160  000F48  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2161  000F4A  2A11               	incf	___aomod@counter^0,f,c
  2162  000F4C                     l1838:
  2163  000F4C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2164  000F4E  EFAB  F007         	goto	u1161
  2165  000F52  EFAD  F007         	goto	u1160
  2166  000F56                     u1161:
  2167  000F56  EF9C  F007         	goto	l1836
  2168  000F5A                     u1160:
  2169  000F5A                     l1840:
  2170  000F5A  5009               	movf	___aomod@divisor^0,w,c
  2171  000F5C  5C01               	subwf	___aomod@dividend^0,w,c
  2172  000F5E  500A               	movf	(___aomod@divisor+1)^0,w,c
  2173  000F60  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2174  000F62  500B               	movf	(___aomod@divisor+2)^0,w,c
  2175  000F64  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2176  000F66  500C               	movf	(___aomod@divisor+3)^0,w,c
  2177  000F68  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2178  000F6A  500D               	movf	(___aomod@divisor+4)^0,w,c
  2179  000F6C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2180  000F6E  500E               	movf	(___aomod@divisor+5)^0,w,c
  2181  000F70  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2182  000F72  500F               	movf	(___aomod@divisor+6)^0,w,c
  2183  000F74  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2184  000F76  5010               	movf	(___aomod@divisor+7)^0,w,c
  2185  000F78  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2186  000F7A  A0D8               	btfss	status,0,c
  2187  000F7C  EFC2  F007         	goto	u1171
  2188  000F80  EFC4  F007         	goto	u1170
  2189  000F84                     u1171:
  2190  000F84  EFD4  F007         	goto	l1844
  2191  000F88                     u1170:
  2192  000F88  5009               	movf	___aomod@divisor^0,w,c
  2193  000F8A  5E01               	subwf	___aomod@dividend^0,f,c
  2194  000F8C  500A               	movf	(___aomod@divisor+1)^0,w,c
  2195  000F8E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2196  000F90  500B               	movf	(___aomod@divisor+2)^0,w,c
  2197  000F92  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2198  000F94  500C               	movf	(___aomod@divisor+3)^0,w,c
  2199  000F96  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2200  000F98  500D               	movf	(___aomod@divisor+4)^0,w,c
  2201  000F9A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2202  000F9C  500E               	movf	(___aomod@divisor+5)^0,w,c
  2203  000F9E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2204  000FA0  500F               	movf	(___aomod@divisor+6)^0,w,c
  2205  000FA2  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2206  000FA4  5010               	movf	(___aomod@divisor+7)^0,w,c
  2207  000FA6  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2208  000FA8                     l1844:
  2209  000FA8  90D8               	bcf	status,0,c
  2210  000FAA  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2211  000FAC  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2212  000FAE  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2213  000FB0  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2214  000FB2  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2215  000FB4  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2216  000FB6  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2217  000FB8  3209               	rrcf	___aomod@divisor^0,f,c
  2218  000FBA  2E11               	decfsz	___aomod@counter^0,f,c
  2219  000FBC  EFAD  F007         	goto	l1840
  2220  000FC0                     l1848:
  2221  000FC0  5012               	movf	___aomod@sign^0,w,c
  2222  000FC2  B4D8               	btfsc	status,2,c
  2223  000FC4  EFE6  F007         	goto	u1181
  2224  000FC8  EFE8  F007         	goto	u1180
  2225  000FCC                     u1181:
  2226  000FCC  EFF8  F007         	goto	l1852
  2227  000FD0                     u1180:
  2228  000FD0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2229  000FD2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2230  000FD4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2231  000FD6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2232  000FD8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2233  000FDA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2234  000FDC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2235  000FDE  6C01               	negf	___aomod@dividend^0,c
  2236  000FE0  0E00               	movlw	0
  2237  000FE2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2238  000FE4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2239  000FE6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2240  000FE8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2241  000FEA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2242  000FEC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2243  000FEE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2244  000FF0                     l1852:
  2245  000FF0  C001  F001         	movff	___aomod@dividend,?___aomod
  2246  000FF4  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2247  000FF8  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2248  000FFC  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2249  001000  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2250  001004  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2251  001008  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2252  00100C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2253  001010  0012               	return		;funcret
  2254  001012                     __end_of___aomod:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function ___aodiv *****************
  2258 ;; Defined at:
  2259 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  dividend        8    0[COMRAM] long long 
  2262 ;;  divisor         8    8[COMRAM] long long 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  quotient        8   18[COMRAM] long long 
  2265 ;;  sign            1   17[COMRAM] unsigned char 
  2266 ;;  counter         1   16[COMRAM] unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  8    0[COMRAM] long long 
  2269 ;; Registers used:
  2270 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2276 ;;      Params:        16       0       0       0
  2277 ;;      Locals:        10       0       0       0
  2278 ;;      Temps:          0       0       0       0
  2279 ;;      Totals:        26       0       0       0
  2280 ;;Total ram usage:       26 bytes
  2281 ;; Hardware stack levels used: 1
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_dtoa
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text12
  2290  000D26                     __ptext12:
  2291                           	callstack 0
  2292  000D26                     ___aodiv:
  2293                           	callstack 26
  2294  000D26  0E00               	movlw	0
  2295  000D28  6E12               	movwf	___aodiv@sign^0,c
  2296  000D2A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2297  000D2C  EF9C  F006         	goto	u1060
  2298  000D30  EF9A  F006         	goto	u1061
  2299  000D34                     u1061:
  2300  000D34  EFAE  F006         	goto	l1784
  2301  000D38                     u1060:
  2302  000D38  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2303  000D3A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2304  000D3C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2305  000D3E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2306  000D40  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2307  000D42  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2308  000D44  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2309  000D46  6C09               	negf	___aodiv@divisor^0,c
  2310  000D48  0E00               	movlw	0
  2311  000D4A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2312  000D4C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2313  000D4E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2314  000D50  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2315  000D52  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2316  000D54  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2317  000D56  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2318  000D58  0E01               	movlw	1
  2319  000D5A  6E12               	movwf	___aodiv@sign^0,c
  2320  000D5C                     l1784:
  2321  000D5C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2322  000D5E  EFB5  F006         	goto	u1070
  2323  000D62  EFB3  F006         	goto	u1071
  2324  000D66                     u1071:
  2325  000D66  EFC7  F006         	goto	l1790
  2326  000D6A                     u1070:
  2327  000D6A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2328  000D6C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2329  000D6E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2330  000D70  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2331  000D72  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2332  000D74  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2333  000D76  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2334  000D78  6C01               	negf	___aodiv@dividend^0,c
  2335  000D7A  0E00               	movlw	0
  2336  000D7C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2337  000D7E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2338  000D80  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2339  000D82  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2340  000D84  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2341  000D86  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2342  000D88  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2343  000D8A  0E01               	movlw	1
  2344  000D8C  1A12               	xorwf	___aodiv@sign^0,f,c
  2345  000D8E                     l1790:
  2346  000D8E  EE20  F013         	lfsr	2,___aodiv@quotient
  2347  000D92  0E07               	movlw	7
  2348  000D94                     u1081:
  2349  000D94  6ADE               	clrf	postinc2,c
  2350  000D96  06E8               	decf	wreg,f,c
  2351  000D98  E2FD               	bc	u1081
  2352  000D9A  5009               	movf	___aodiv@divisor^0,w,c
  2353  000D9C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2354  000D9E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2355  000DA0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2356  000DA2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2357  000DA4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2358  000DA6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2359  000DA8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2360  000DAA  B4D8               	btfsc	status,2,c
  2361  000DAC  EFDA  F006         	goto	u1091
  2362  000DB0  EFDC  F006         	goto	u1090
  2363  000DB4                     u1091:
  2364  000DB4  EF2E  F007         	goto	l1812
  2365  000DB8                     u1090:
  2366  000DB8  0E01               	movlw	1
  2367  000DBA  6E11               	movwf	___aodiv@counter^0,c
  2368  000DBC  EFEA  F006         	goto	l1798
  2369  000DC0                     l1796:
  2370  000DC0  90D8               	bcf	status,0,c
  2371  000DC2  3609               	rlcf	___aodiv@divisor^0,f,c
  2372  000DC4  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2373  000DC6  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2374  000DC8  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2375  000DCA  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2376  000DCC  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2377  000DCE  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2378  000DD0  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2379  000DD2  2A11               	incf	___aodiv@counter^0,f,c
  2380  000DD4                     l1798:
  2381  000DD4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2382  000DD6  EFEF  F006         	goto	u1101
  2383  000DDA  EFF1  F006         	goto	u1100
  2384  000DDE                     u1101:
  2385  000DDE  EFE0  F006         	goto	l1796
  2386  000DE2                     u1100:
  2387  000DE2                     l1800:
  2388  000DE2  90D8               	bcf	status,0,c
  2389  000DE4  3613               	rlcf	___aodiv@quotient^0,f,c
  2390  000DE6  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2391  000DE8  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2392  000DEA  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2393  000DEC  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2394  000DEE  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2395  000DF0  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2396  000DF2  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2397  000DF4  5009               	movf	___aodiv@divisor^0,w,c
  2398  000DF6  5C01               	subwf	___aodiv@dividend^0,w,c
  2399  000DF8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2400  000DFA  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2401  000DFC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2402  000DFE  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2403  000E00  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2404  000E02  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2405  000E04  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2406  000E06  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2407  000E08  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2408  000E0A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2409  000E0C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2410  000E0E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2411  000E10  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2412  000E12  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2413  000E14  A0D8               	btfss	status,0,c
  2414  000E16  EF0F  F007         	goto	u1111
  2415  000E1A  EF11  F007         	goto	u1110
  2416  000E1E                     u1111:
  2417  000E1E  EF22  F007         	goto	l1808
  2418  000E22                     u1110:
  2419  000E22  5009               	movf	___aodiv@divisor^0,w,c
  2420  000E24  5E01               	subwf	___aodiv@dividend^0,f,c
  2421  000E26  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2422  000E28  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2423  000E2A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2424  000E2C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2425  000E2E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2426  000E30  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2427  000E32  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2428  000E34  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2429  000E36  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2430  000E38  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2431  000E3A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2432  000E3C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2433  000E3E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2434  000E40  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2435  000E42  8013               	bsf	___aodiv@quotient^0,0,c
  2436  000E44                     l1808:
  2437  000E44  90D8               	bcf	status,0,c
  2438  000E46  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2439  000E48  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2440  000E4A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2441  000E4C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2442  000E4E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2443  000E50  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2444  000E52  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2445  000E54  3209               	rrcf	___aodiv@divisor^0,f,c
  2446  000E56  2E11               	decfsz	___aodiv@counter^0,f,c
  2447  000E58  EFF1  F006         	goto	l1800
  2448  000E5C                     l1812:
  2449  000E5C  5012               	movf	___aodiv@sign^0,w,c
  2450  000E5E  B4D8               	btfsc	status,2,c
  2451  000E60  EF34  F007         	goto	u1121
  2452  000E64  EF36  F007         	goto	u1120
  2453  000E68                     u1121:
  2454  000E68  EF46  F007         	goto	l1816
  2455  000E6C                     u1120:
  2456  000E6C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2457  000E6E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2458  000E70  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2459  000E72  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2460  000E74  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2461  000E76  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2462  000E78  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2463  000E7A  6C13               	negf	___aodiv@quotient^0,c
  2464  000E7C  0E00               	movlw	0
  2465  000E7E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2466  000E80  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2467  000E82  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2468  000E84  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2469  000E86  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2470  000E88  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2471  000E8A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2472  000E8C                     l1816:
  2473  000E8C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2474  000E90  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2475  000E94  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2476  000E98  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2477  000E9C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2478  000EA0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2479  000EA4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2480  000EA8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2481  000EAC  0012               	return		;funcret
  2482  000EAE                     __end_of___aodiv:
  2483                           	callstack 0
  2484                           
  2485 ;; *************** function _pinMode *****************
  2486 ;; Defined at:
  2487 ;;		line 61 in file "pins.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  pin             1    wreg     unsigned char 
  2490 ;;  mode            1   39[COMRAM] unsigned char 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  pin             1   44[COMRAM] unsigned char 
  2493 ;;  bit_val         1   45[COMRAM] unsigned char 
  2494 ;;  port            1   43[COMRAM] enum E6026
  2495 ;;  port_num        1   42[COMRAM] unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  1    wreg      void 
  2498 ;; Registers used:
  2499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2505 ;;      Params:         1       0       0       0
  2506 ;;      Locals:         4       0       0       0
  2507 ;;      Temps:          2       0       0       0
  2508 ;;      Totals:         7       0       0       0
  2509 ;;Total ram usage:        7 bytes
  2510 ;; Hardware stack levels used: 1
  2511 ;; Hardware stack levels required when called: 2
  2512 ;; This function calls:
  2513 ;;		_clearBit
  2514 ;;		_convertToBit
  2515 ;;		_convertToPort
  2516 ;;		_pinToIndex
  2517 ;;		_setBit
  2518 ;; This function is called by:
  2519 ;;		_main
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text13
  2524  00030A                     __ptext13:
  2525                           	callstack 0
  2526  00030A                     _pinMode:
  2527                           	callstack 28
  2528                           
  2529                           ;incstack = 0
  2530                           ;pinMode@pin stored from wreg
  2531  00030A  6E2D               	movwf	pinMode@pin^0,c
  2532  00030C                     
  2533                           ;pins.c: 62:      if (pin == 11 ||
  2534  00030C  0E0B               	movlw	11
  2535  00030E  182D               	xorwf	pinMode@pin^0,w,c
  2536  000310  B4D8               	btfsc	status,2,c
  2537  000312  EF8D  F001         	goto	u1501
  2538  000316  EF8F  F001         	goto	u1500
  2539  00031A                     u1501:
  2540  00031A  EF47  F004         	goto	l141
  2541  00031E                     u1500:
  2542  00031E  0E0C               	movlw	12
  2543  000320  182D               	xorwf	pinMode@pin^0,w,c
  2544  000322  B4D8               	btfsc	status,2,c
  2545  000324  EF96  F001         	goto	u1511
  2546  000328  EF98  F001         	goto	u1510
  2547  00032C                     u1511:
  2548  00032C  EF47  F004         	goto	l141
  2549  000330                     u1510:
  2550  000330  0E1F               	movlw	31
  2551  000332  182D               	xorwf	pinMode@pin^0,w,c
  2552  000334  B4D8               	btfsc	status,2,c
  2553  000336  EF9F  F001         	goto	u1521
  2554  00033A  EFA1  F001         	goto	u1520
  2555  00033E                     u1521:
  2556  00033E  EF47  F004         	goto	l141
  2557  000342                     u1520:
  2558  000342  0E20               	movlw	32
  2559  000344  182D               	xorwf	pinMode@pin^0,w,c
  2560  000346  B4D8               	btfsc	status,2,c
  2561  000348  EFA8  F001         	goto	u1531
  2562  00034C  EFAA  F001         	goto	u1530
  2563  000350                     u1531:
  2564  000350  EF47  F004         	goto	l141
  2565  000354                     u1530:
  2566  000354  502D               	movf	pinMode@pin^0,w,c
  2567  000356  B4D8               	btfsc	status,2,c
  2568  000358  EFB0  F001         	goto	u1541
  2569  00035C  EFB2  F001         	goto	u1540
  2570  000360                     u1541:
  2571  000360  EF47  F004         	goto	l141
  2572  000364                     u1540:
  2573  000364  0E28               	movlw	40
  2574  000366  642D               	cpfsgt	pinMode@pin^0,c
  2575  000368  EFB8  F001         	goto	u1551
  2576  00036C  EFBA  F001         	goto	u1550
  2577  000370                     u1551:
  2578  000370  EFBC  F001         	goto	l2054
  2579  000374                     u1550:
  2580  000374  EF47  F004         	goto	l141
  2581  000378                     l2054:
  2582                           
  2583                           ;pins.c: 68:      if(mode != ANALOG_INPUT && mode != INPUT && mode != INPUT_PULLUP && mo
      +                          de != OUTPUT) return;
  2584  000378  5028               	movf	pinMode@mode^0,w,c
  2585  00037A  B4D8               	btfsc	status,2,c
  2586  00037C  EFC2  F001         	goto	u1561
  2587  000380  EFC4  F001         	goto	u1560
  2588  000384                     u1561:
  2589  000384  EFE0  F001         	goto	l2064
  2590  000388                     u1560:
  2591  000388  0428               	decf	pinMode@mode^0,w,c
  2592  00038A  B4D8               	btfsc	status,2,c
  2593  00038C  EFCA  F001         	goto	u1571
  2594  000390  EFCC  F001         	goto	u1570
  2595  000394                     u1571:
  2596  000394  EFE0  F001         	goto	l2064
  2597  000398                     u1570:
  2598  000398  0E02               	movlw	2
  2599  00039A  1828               	xorwf	pinMode@mode^0,w,c
  2600  00039C  B4D8               	btfsc	status,2,c
  2601  00039E  EFD3  F001         	goto	u1581
  2602  0003A2  EFD5  F001         	goto	u1580
  2603  0003A6                     u1581:
  2604  0003A6  EFE0  F001         	goto	l2064
  2605  0003AA                     u1580:
  2606  0003AA  0E03               	movlw	3
  2607  0003AC  1828               	xorwf	pinMode@mode^0,w,c
  2608  0003AE  B4D8               	btfsc	status,2,c
  2609  0003B0  EFDC  F001         	goto	u1591
  2610  0003B4  EFDE  F001         	goto	u1590
  2611  0003B8                     u1591:
  2612  0003B8  EFE0  F001         	goto	l2064
  2613  0003BC                     u1590:
  2614  0003BC  EF47  F004         	goto	l141
  2615  0003C0                     l2064:
  2616                           
  2617                           ;pins.c: 70:      uint8_t port_num = pinToIndex(pin);
  2618  0003C0  502D               	movf	pinMode@pin^0,w,c
  2619  0003C2  EC37  F00A         	call	_pinToIndex
  2620  0003C6  6E2B               	movwf	pinMode@port_num^0,c
  2621  0003C8                     
  2622                           ;pins.c: 71:      enum ports port = convertToPort(port_num);
  2623  0003C8  502B               	movf	pinMode@port_num^0,w,c
  2624  0003CA  ECBF  F009         	call	_convertToPort
  2625  0003CE  6E2C               	movwf	pinMode@port^0,c
  2626  0003D0                     
  2627                           ;pins.c: 72:      uint8_t bit_val = convertToBit(port_num);
  2628  0003D0  502B               	movf	pinMode@port_num^0,w,c
  2629  0003D2  EC74  F009         	call	_convertToBit
  2630  0003D6  6E2E               	movwf	pinMode@bit_val^0,c
  2631  0003D8                     
  2632                           ;pins.c: 74:      if(mode == ANALOG_INPUT){
  2633  0003D8  5028               	movf	pinMode@mode^0,w,c
  2634  0003DA  A4D8               	btfss	status,2,c
  2635  0003DC  EFF2  F001         	goto	u1601
  2636  0003E0  EFF4  F001         	goto	u1600
  2637  0003E4                     u1601:
  2638  0003E4  EF71  F002         	goto	l2088
  2639  0003E8                     u1600:
  2640  0003E8  EF50  F002         	goto	l2086
  2641  0003EC                     l2074:
  2642                           
  2643                           ;pins.c: 77:                  setBit(&TRISA, bit_val);
  2644  0003EC  0E92               	movlw	146
  2645  0003EE  6E04               	movwf	setBit@p^0,c
  2646  0003F0  0E0F               	movlw	15
  2647  0003F2  6E05               	movwf	(setBit@p+1)^0,c
  2648  0003F4  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2649  0003F8  EC7C  F00B         	call	_setBit	;wreg free
  2650                           
  2651                           ;pins.c: 78:                  setBit(&ANSELA, bit_val);
  2652  0003FC  0E38               	movlw	56
  2653  0003FE  6E04               	movwf	setBit@p^0,c
  2654  000400  0E0F               	movlw	15
  2655  000402  6E05               	movwf	(setBit@p+1)^0,c
  2656  000404  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2657  000408  EC7C  F00B         	call	_setBit	;wreg free
  2658                           
  2659                           ;pins.c: 79:                  break;
  2660  00040C  EF47  F004         	goto	l141
  2661  000410                     l2076:
  2662                           
  2663                           ;pins.c: 81:                  setBit(&TRISB, bit_val);
  2664  000410  0E93               	movlw	147
  2665  000412  6E04               	movwf	setBit@p^0,c
  2666  000414  0E0F               	movlw	15
  2667  000416  6E05               	movwf	(setBit@p+1)^0,c
  2668  000418  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2669  00041C  EC7C  F00B         	call	_setBit	;wreg free
  2670                           
  2671                           ;pins.c: 82:                  setBit(&ANSELB, bit_val);
  2672  000420  0E39               	movlw	57
  2673  000422  6E04               	movwf	setBit@p^0,c
  2674  000424  0E0F               	movlw	15
  2675  000426  6E05               	movwf	(setBit@p+1)^0,c
  2676  000428  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2677  00042C  EC7C  F00B         	call	_setBit	;wreg free
  2678                           
  2679                           ;pins.c: 83:                  break;
  2680  000430  EF47  F004         	goto	l141
  2681  000434                     l2078:
  2682                           
  2683                           ;pins.c: 85:                  setBit(&TRISC, bit_val);
  2684  000434  0E94               	movlw	148
  2685  000436  6E04               	movwf	setBit@p^0,c
  2686  000438  0E0F               	movlw	15
  2687  00043A  6E05               	movwf	(setBit@p+1)^0,c
  2688  00043C  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2689  000440  EC7C  F00B         	call	_setBit	;wreg free
  2690                           
  2691                           ;pins.c: 86:                  setBit(&ANSELC, bit_val);
  2692  000444  0E3A               	movlw	58
  2693  000446  6E04               	movwf	setBit@p^0,c
  2694  000448  0E0F               	movlw	15
  2695  00044A  6E05               	movwf	(setBit@p+1)^0,c
  2696  00044C  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2697  000450  EC7C  F00B         	call	_setBit	;wreg free
  2698                           
  2699                           ;pins.c: 87:                  break;
  2700  000454  EF47  F004         	goto	l141
  2701  000458                     l2080:
  2702                           
  2703                           ;pins.c: 89:                  setBit(&TRISD, bit_val);
  2704  000458  0E95               	movlw	149
  2705  00045A  6E04               	movwf	setBit@p^0,c
  2706  00045C  0E0F               	movlw	15
  2707  00045E  6E05               	movwf	(setBit@p+1)^0,c
  2708  000460  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2709  000464  EC7C  F00B         	call	_setBit	;wreg free
  2710                           
  2711                           ;pins.c: 90:                  setBit(&ANSELD, bit_val);
  2712  000468  0E3B               	movlw	59
  2713  00046A  6E04               	movwf	setBit@p^0,c
  2714  00046C  0E0F               	movlw	15
  2715  00046E  6E05               	movwf	(setBit@p+1)^0,c
  2716  000470  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2717  000474  EC7C  F00B         	call	_setBit	;wreg free
  2718                           
  2719                           ;pins.c: 91:                  break;
  2720  000478  EF47  F004         	goto	l141
  2721  00047C                     l2082:
  2722                           
  2723                           ;pins.c: 93:                  setBit(&TRISE, bit_val);
  2724  00047C  0E96               	movlw	150
  2725  00047E  6E04               	movwf	setBit@p^0,c
  2726  000480  0E0F               	movlw	15
  2727  000482  6E05               	movwf	(setBit@p+1)^0,c
  2728  000484  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2729  000488  EC7C  F00B         	call	_setBit	;wreg free
  2730                           
  2731                           ;pins.c: 94:                  setBit(&ANSELE, bit_val);
  2732  00048C  0E3C               	movlw	60
  2733  00048E  6E04               	movwf	setBit@p^0,c
  2734  000490  0E0F               	movlw	15
  2735  000492  6E05               	movwf	(setBit@p+1)^0,c
  2736  000494  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2737  000498  EC7C  F00B         	call	_setBit	;wreg free
  2738                           
  2739                           ;pins.c: 95:                  break;
  2740  00049C  EF47  F004         	goto	l141
  2741  0004A0                     l2086:
  2742  0004A0  502C               	movf	pinMode@port^0,w,c
  2743  0004A2  6E29               	movwf	??_pinMode^0,c
  2744  0004A4  6A2A               	clrf	(??_pinMode+1)^0,c
  2745                           
  2746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2747                           ; Switch size 1, requested type "simple"
  2748                           ; Number of cases is 1, Range of values is 0 to 0
  2749                           ; switch strategies available:
  2750                           ; Name         Instructions Cycles
  2751                           ; simple_byte            4     3 (average)
  2752                           ;	Chosen strategy is simple_byte
  2753  0004A6  502A               	movf	(??_pinMode+1)^0,w,c
  2754  0004A8  0A00               	xorlw	0	; case 0
  2755  0004AA  B4D8               	btfsc	status,2,c
  2756  0004AC  EF5A  F002         	goto	l2402
  2757  0004B0  EF47  F004         	goto	l141
  2758  0004B4                     l2402:
  2759                           
  2760                           ; Switch size 1, requested type "simple"
  2761                           ; Number of cases is 5, Range of values is 0 to 4
  2762                           ; switch strategies available:
  2763                           ; Name         Instructions Cycles
  2764                           ; simple_byte           16     9 (average)
  2765                           ;	Chosen strategy is simple_byte
  2766  0004B4  5029               	movf	??_pinMode^0,w,c
  2767  0004B6  0A00               	xorlw	0	; case 0
  2768  0004B8  B4D8               	btfsc	status,2,c
  2769  0004BA  EFF6  F001         	goto	l2074
  2770  0004BE  0A01               	xorlw	1	; case 1
  2771  0004C0  B4D8               	btfsc	status,2,c
  2772  0004C2  EF08  F002         	goto	l2076
  2773  0004C6  0A03               	xorlw	3	; case 2
  2774  0004C8  B4D8               	btfsc	status,2,c
  2775  0004CA  EF1A  F002         	goto	l2078
  2776  0004CE  0A01               	xorlw	1	; case 3
  2777  0004D0  B4D8               	btfsc	status,2,c
  2778  0004D2  EF2C  F002         	goto	l2080
  2779  0004D6  0A07               	xorlw	7	; case 4
  2780  0004D8  B4D8               	btfsc	status,2,c
  2781  0004DA  EF3E  F002         	goto	l2082
  2782  0004DE  EF47  F004         	goto	l141
  2783  0004E2                     l2088:
  2784  0004E2  0428               	decf	pinMode@mode^0,w,c
  2785  0004E4  A4D8               	btfss	status,2,c
  2786  0004E6  EF77  F002         	goto	u1611
  2787  0004EA  EF79  F002         	goto	u1610
  2788  0004EE                     u1611:
  2789  0004EE  EF1E  F003         	goto	l2106
  2790  0004F2                     u1610:
  2791  0004F2  EFFD  F002         	goto	l2104
  2792  0004F6                     l2092:
  2793                           
  2794                           ;pins.c: 103:                  setBit(&TRISA, bit_val);
  2795  0004F6  0E92               	movlw	146
  2796  0004F8  6E04               	movwf	setBit@p^0,c
  2797  0004FA  0E0F               	movlw	15
  2798  0004FC  6E05               	movwf	(setBit@p+1)^0,c
  2799  0004FE  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2800  000502  EC7C  F00B         	call	_setBit	;wreg free
  2801                           
  2802                           ;pins.c: 104:                  clearBit(&LATA, bit_val);
  2803  000506  0E89               	movlw	137
  2804  000508  6E04               	movwf	clearBit@p^0,c
  2805  00050A  0E0F               	movlw	15
  2806  00050C  6E05               	movwf	(clearBit@p+1)^0,c
  2807  00050E  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2808  000512  EC64  F00B         	call	_clearBit	;wreg free
  2809                           
  2810                           ;pins.c: 105:                  clearBit(&ANSELA, bit_val);
  2811  000516  0E38               	movlw	56
  2812  000518  6E04               	movwf	clearBit@p^0,c
  2813  00051A  0E0F               	movlw	15
  2814  00051C  6E05               	movwf	(clearBit@p+1)^0,c
  2815  00051E  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2816  000522  EC64  F00B         	call	_clearBit	;wreg free
  2817                           
  2818                           ;pins.c: 106:                  break;
  2819  000526  EF47  F004         	goto	l141
  2820  00052A                     l2094:
  2821                           
  2822                           ;pins.c: 108:                  setBit(&TRISB, bit_val);
  2823  00052A  0E93               	movlw	147
  2824  00052C  6E04               	movwf	setBit@p^0,c
  2825  00052E  0E0F               	movlw	15
  2826  000530  6E05               	movwf	(setBit@p+1)^0,c
  2827  000532  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2828  000536  EC7C  F00B         	call	_setBit	;wreg free
  2829                           
  2830                           ;pins.c: 109:                  clearBit(&LATB, bit_val);
  2831  00053A  0E8A               	movlw	138
  2832  00053C  6E04               	movwf	clearBit@p^0,c
  2833  00053E  0E0F               	movlw	15
  2834  000540  6E05               	movwf	(clearBit@p+1)^0,c
  2835  000542  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2836  000546  EC64  F00B         	call	_clearBit	;wreg free
  2837                           
  2838                           ;pins.c: 110:                  clearBit(&ANSELB, bit_val);
  2839  00054A  0E39               	movlw	57
  2840  00054C  6E04               	movwf	clearBit@p^0,c
  2841  00054E  0E0F               	movlw	15
  2842  000550  6E05               	movwf	(clearBit@p+1)^0,c
  2843  000552  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2844  000556  EC64  F00B         	call	_clearBit	;wreg free
  2845                           
  2846                           ;pins.c: 111:                  break;
  2847  00055A  EF47  F004         	goto	l141
  2848  00055E                     l2096:
  2849                           
  2850                           ;pins.c: 113:                  setBit(&TRISC, bit_val);
  2851  00055E  0E94               	movlw	148
  2852  000560  6E04               	movwf	setBit@p^0,c
  2853  000562  0E0F               	movlw	15
  2854  000564  6E05               	movwf	(setBit@p+1)^0,c
  2855  000566  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2856  00056A  EC7C  F00B         	call	_setBit	;wreg free
  2857                           
  2858                           ;pins.c: 114:                  clearBit(&LATC, bit_val);
  2859  00056E  0E8B               	movlw	139
  2860  000570  6E04               	movwf	clearBit@p^0,c
  2861  000572  0E0F               	movlw	15
  2862  000574  6E05               	movwf	(clearBit@p+1)^0,c
  2863  000576  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2864  00057A  EC64  F00B         	call	_clearBit	;wreg free
  2865                           
  2866                           ;pins.c: 115:                  clearBit(&ANSELC, bit_val);
  2867  00057E  0E3A               	movlw	58
  2868  000580  6E04               	movwf	clearBit@p^0,c
  2869  000582  0E0F               	movlw	15
  2870  000584  6E05               	movwf	(clearBit@p+1)^0,c
  2871  000586  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2872  00058A  EC64  F00B         	call	_clearBit	;wreg free
  2873                           
  2874                           ;pins.c: 116:                  break;
  2875  00058E  EF47  F004         	goto	l141
  2876  000592                     l2098:
  2877                           
  2878                           ;pins.c: 118:                  setBit(&TRISD, bit_val);
  2879  000592  0E95               	movlw	149
  2880  000594  6E04               	movwf	setBit@p^0,c
  2881  000596  0E0F               	movlw	15
  2882  000598  6E05               	movwf	(setBit@p+1)^0,c
  2883  00059A  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2884  00059E  EC7C  F00B         	call	_setBit	;wreg free
  2885                           
  2886                           ;pins.c: 119:                  clearBit(&LATD, bit_val);
  2887  0005A2  0E8C               	movlw	140
  2888  0005A4  6E04               	movwf	clearBit@p^0,c
  2889  0005A6  0E0F               	movlw	15
  2890  0005A8  6E05               	movwf	(clearBit@p+1)^0,c
  2891  0005AA  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2892  0005AE  EC64  F00B         	call	_clearBit	;wreg free
  2893                           
  2894                           ;pins.c: 120:                  clearBit(&ANSELD, bit_val);
  2895  0005B2  0E3B               	movlw	59
  2896  0005B4  6E04               	movwf	clearBit@p^0,c
  2897  0005B6  0E0F               	movlw	15
  2898  0005B8  6E05               	movwf	(clearBit@p+1)^0,c
  2899  0005BA  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2900  0005BE  EC64  F00B         	call	_clearBit	;wreg free
  2901                           
  2902                           ;pins.c: 121:                  break;
  2903  0005C2  EF47  F004         	goto	l141
  2904  0005C6                     l2100:
  2905                           
  2906                           ;pins.c: 123:                  setBit(&TRISE, bit_val);
  2907  0005C6  0E96               	movlw	150
  2908  0005C8  6E04               	movwf	setBit@p^0,c
  2909  0005CA  0E0F               	movlw	15
  2910  0005CC  6E05               	movwf	(setBit@p+1)^0,c
  2911  0005CE  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2912  0005D2  EC7C  F00B         	call	_setBit	;wreg free
  2913                           
  2914                           ;pins.c: 124:                  clearBit(&LATE, bit_val);
  2915  0005D6  0E8D               	movlw	141
  2916  0005D8  6E04               	movwf	clearBit@p^0,c
  2917  0005DA  0E0F               	movlw	15
  2918  0005DC  6E05               	movwf	(clearBit@p+1)^0,c
  2919  0005DE  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2920  0005E2  EC64  F00B         	call	_clearBit	;wreg free
  2921                           
  2922                           ;pins.c: 125:                  clearBit(&ANSELE, bit_val);
  2923  0005E6  0E3C               	movlw	60
  2924  0005E8  6E04               	movwf	clearBit@p^0,c
  2925  0005EA  0E0F               	movlw	15
  2926  0005EC  6E05               	movwf	(clearBit@p+1)^0,c
  2927  0005EE  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2928  0005F2  EC64  F00B         	call	_clearBit	;wreg free
  2929                           
  2930                           ;pins.c: 126:                  break;
  2931  0005F6  EF47  F004         	goto	l141
  2932  0005FA                     l2104:
  2933  0005FA  502C               	movf	pinMode@port^0,w,c
  2934  0005FC  6E29               	movwf	??_pinMode^0,c
  2935  0005FE  6A2A               	clrf	(??_pinMode+1)^0,c
  2936                           
  2937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2938                           ; Switch size 1, requested type "simple"
  2939                           ; Number of cases is 1, Range of values is 0 to 0
  2940                           ; switch strategies available:
  2941                           ; Name         Instructions Cycles
  2942                           ; simple_byte            4     3 (average)
  2943                           ;	Chosen strategy is simple_byte
  2944  000600  502A               	movf	(??_pinMode+1)^0,w,c
  2945  000602  0A00               	xorlw	0	; case 0
  2946  000604  B4D8               	btfsc	status,2,c
  2947  000606  EF07  F003         	goto	l2404
  2948  00060A  EF47  F004         	goto	l141
  2949  00060E                     l2404:
  2950                           
  2951                           ; Switch size 1, requested type "simple"
  2952                           ; Number of cases is 5, Range of values is 0 to 4
  2953                           ; switch strategies available:
  2954                           ; Name         Instructions Cycles
  2955                           ; simple_byte           16     9 (average)
  2956                           ;	Chosen strategy is simple_byte
  2957  00060E  5029               	movf	??_pinMode^0,w,c
  2958  000610  0A00               	xorlw	0	; case 0
  2959  000612  B4D8               	btfsc	status,2,c
  2960  000614  EF7B  F002         	goto	l2092
  2961  000618  0A01               	xorlw	1	; case 1
  2962  00061A  B4D8               	btfsc	status,2,c
  2963  00061C  EF95  F002         	goto	l2094
  2964  000620  0A03               	xorlw	3	; case 2
  2965  000622  B4D8               	btfsc	status,2,c
  2966  000624  EFAF  F002         	goto	l2096
  2967  000628  0A01               	xorlw	1	; case 3
  2968  00062A  B4D8               	btfsc	status,2,c
  2969  00062C  EFC9  F002         	goto	l2098
  2970  000630  0A07               	xorlw	7	; case 4
  2971  000632  B4D8               	btfsc	status,2,c
  2972  000634  EFE3  F002         	goto	l2100
  2973  000638  EF47  F004         	goto	l141
  2974  00063C                     l2106:
  2975  00063C  0E02               	movlw	2
  2976  00063E  1828               	xorwf	pinMode@mode^0,w,c
  2977  000640  A4D8               	btfss	status,2,c
  2978  000642  EF25  F003         	goto	u1621
  2979  000646  EF27  F003         	goto	u1620
  2980  00064A                     u1621:
  2981  00064A  EF26  F004         	goto	l2136
  2982  00064E                     u1620:
  2983  00064E  EFAB  F003         	goto	l2122
  2984  000652                     l2110:
  2985                           
  2986                           ;pins.c: 134:                  setBit(&TRISA, bit_val);
  2987  000652  0E92               	movlw	146
  2988  000654  6E04               	movwf	setBit@p^0,c
  2989  000656  0E0F               	movlw	15
  2990  000658  6E05               	movwf	(setBit@p+1)^0,c
  2991  00065A  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2992  00065E  EC7C  F00B         	call	_setBit	;wreg free
  2993                           
  2994                           ;pins.c: 135:                  setBit(&LATA, bit_val);
  2995  000662  0E89               	movlw	137
  2996  000664  6E04               	movwf	setBit@p^0,c
  2997  000666  0E0F               	movlw	15
  2998  000668  6E05               	movwf	(setBit@p+1)^0,c
  2999  00066A  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3000  00066E  EC7C  F00B         	call	_setBit	;wreg free
  3001                           
  3002                           ;pins.c: 136:                  clearBit(&ANSELA, bit_val);
  3003  000672  0E38               	movlw	56
  3004  000674  6E04               	movwf	clearBit@p^0,c
  3005  000676  0E0F               	movlw	15
  3006  000678  6E05               	movwf	(clearBit@p+1)^0,c
  3007  00067A  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3008  00067E  EC64  F00B         	call	_clearBit	;wreg free
  3009                           
  3010                           ;pins.c: 137:                  break;
  3011  000682  EF47  F004         	goto	l141
  3012  000686                     l2112:
  3013                           
  3014                           ;pins.c: 139:                  setBit(&TRISB, bit_val);
  3015  000686  0E93               	movlw	147
  3016  000688  6E04               	movwf	setBit@p^0,c
  3017  00068A  0E0F               	movlw	15
  3018  00068C  6E05               	movwf	(setBit@p+1)^0,c
  3019  00068E  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3020  000692  EC7C  F00B         	call	_setBit	;wreg free
  3021                           
  3022                           ;pins.c: 140:                  setBit(&LATB, bit_val);
  3023  000696  0E8A               	movlw	138
  3024  000698  6E04               	movwf	setBit@p^0,c
  3025  00069A  0E0F               	movlw	15
  3026  00069C  6E05               	movwf	(setBit@p+1)^0,c
  3027  00069E  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3028  0006A2  EC7C  F00B         	call	_setBit	;wreg free
  3029                           
  3030                           ;pins.c: 141:                  clearBit(&ANSELB, bit_val);
  3031  0006A6  0E39               	movlw	57
  3032  0006A8  6E04               	movwf	clearBit@p^0,c
  3033  0006AA  0E0F               	movlw	15
  3034  0006AC  6E05               	movwf	(clearBit@p+1)^0,c
  3035  0006AE  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3036  0006B2  EC64  F00B         	call	_clearBit	;wreg free
  3037                           
  3038                           ;pins.c: 142:                  break;
  3039  0006B6  EF47  F004         	goto	l141
  3040  0006BA                     l2114:
  3041                           
  3042                           ;pins.c: 144:                  setBit(&TRISC, bit_val);
  3043  0006BA  0E94               	movlw	148
  3044  0006BC  6E04               	movwf	setBit@p^0,c
  3045  0006BE  0E0F               	movlw	15
  3046  0006C0  6E05               	movwf	(setBit@p+1)^0,c
  3047  0006C2  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3048  0006C6  EC7C  F00B         	call	_setBit	;wreg free
  3049                           
  3050                           ;pins.c: 145:                  setBit(&LATC, bit_val);
  3051  0006CA  0E8B               	movlw	139
  3052  0006CC  6E04               	movwf	setBit@p^0,c
  3053  0006CE  0E0F               	movlw	15
  3054  0006D0  6E05               	movwf	(setBit@p+1)^0,c
  3055  0006D2  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3056  0006D6  EC7C  F00B         	call	_setBit	;wreg free
  3057                           
  3058                           ;pins.c: 146:                  clearBit(&ANSELC, bit_val);
  3059  0006DA  0E3A               	movlw	58
  3060  0006DC  6E04               	movwf	clearBit@p^0,c
  3061  0006DE  0E0F               	movlw	15
  3062  0006E0  6E05               	movwf	(clearBit@p+1)^0,c
  3063  0006E2  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3064  0006E6  EC64  F00B         	call	_clearBit	;wreg free
  3065                           
  3066                           ;pins.c: 147:                  break;
  3067  0006EA  EF47  F004         	goto	l141
  3068  0006EE                     l2116:
  3069                           
  3070                           ;pins.c: 149:                  setBit(&TRISD, bit_val);
  3071  0006EE  0E95               	movlw	149
  3072  0006F0  6E04               	movwf	setBit@p^0,c
  3073  0006F2  0E0F               	movlw	15
  3074  0006F4  6E05               	movwf	(setBit@p+1)^0,c
  3075  0006F6  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3076  0006FA  EC7C  F00B         	call	_setBit	;wreg free
  3077                           
  3078                           ;pins.c: 150:                  setBit(&LATD, bit_val);
  3079  0006FE  0E8C               	movlw	140
  3080  000700  6E04               	movwf	setBit@p^0,c
  3081  000702  0E0F               	movlw	15
  3082  000704  6E05               	movwf	(setBit@p+1)^0,c
  3083  000706  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3084  00070A  EC7C  F00B         	call	_setBit	;wreg free
  3085                           
  3086                           ;pins.c: 151:                  clearBit(&ANSELD, bit_val);
  3087  00070E  0E3B               	movlw	59
  3088  000710  6E04               	movwf	clearBit@p^0,c
  3089  000712  0E0F               	movlw	15
  3090  000714  6E05               	movwf	(clearBit@p+1)^0,c
  3091  000716  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3092  00071A  EC64  F00B         	call	_clearBit	;wreg free
  3093                           
  3094                           ;pins.c: 152:                  break;
  3095  00071E  EF47  F004         	goto	l141
  3096  000722                     l2118:
  3097                           
  3098                           ;pins.c: 154:                  setBit(&TRISE, bit_val);
  3099  000722  0E96               	movlw	150
  3100  000724  6E04               	movwf	setBit@p^0,c
  3101  000726  0E0F               	movlw	15
  3102  000728  6E05               	movwf	(setBit@p+1)^0,c
  3103  00072A  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3104  00072E  EC7C  F00B         	call	_setBit	;wreg free
  3105                           
  3106                           ;pins.c: 155:                  setBit(&LATE, bit_val);
  3107  000732  0E8D               	movlw	141
  3108  000734  6E04               	movwf	setBit@p^0,c
  3109  000736  0E0F               	movlw	15
  3110  000738  6E05               	movwf	(setBit@p+1)^0,c
  3111  00073A  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3112  00073E  EC7C  F00B         	call	_setBit	;wreg free
  3113                           
  3114                           ;pins.c: 156:                  clearBit(&ANSELE, bit_val);
  3115  000742  0E3C               	movlw	60
  3116  000744  6E04               	movwf	clearBit@p^0,c
  3117  000746  0E0F               	movlw	15
  3118  000748  6E05               	movwf	(clearBit@p+1)^0,c
  3119  00074A  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3120  00074E  EC64  F00B         	call	_clearBit	;wreg free
  3121                           
  3122                           ;pins.c: 157:                  break;
  3123  000752  EF47  F004         	goto	l141
  3124  000756                     l2122:
  3125  000756  502C               	movf	pinMode@port^0,w,c
  3126  000758  6E29               	movwf	??_pinMode^0,c
  3127  00075A  6A2A               	clrf	(??_pinMode+1)^0,c
  3128                           
  3129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3130                           ; Switch size 1, requested type "simple"
  3131                           ; Number of cases is 1, Range of values is 0 to 0
  3132                           ; switch strategies available:
  3133                           ; Name         Instructions Cycles
  3134                           ; simple_byte            4     3 (average)
  3135                           ;	Chosen strategy is simple_byte
  3136  00075C  502A               	movf	(??_pinMode+1)^0,w,c
  3137  00075E  0A00               	xorlw	0	; case 0
  3138  000760  B4D8               	btfsc	status,2,c
  3139  000762  EFB5  F003         	goto	l2406
  3140  000766  EF47  F004         	goto	l141
  3141  00076A                     l2406:
  3142                           
  3143                           ; Switch size 1, requested type "simple"
  3144                           ; Number of cases is 5, Range of values is 0 to 4
  3145                           ; switch strategies available:
  3146                           ; Name         Instructions Cycles
  3147                           ; simple_byte           16     9 (average)
  3148                           ;	Chosen strategy is simple_byte
  3149  00076A  5029               	movf	??_pinMode^0,w,c
  3150  00076C  0A00               	xorlw	0	; case 0
  3151  00076E  B4D8               	btfsc	status,2,c
  3152  000770  EF29  F003         	goto	l2110
  3153  000774  0A01               	xorlw	1	; case 1
  3154  000776  B4D8               	btfsc	status,2,c
  3155  000778  EF43  F003         	goto	l2112
  3156  00077C  0A03               	xorlw	3	; case 2
  3157  00077E  B4D8               	btfsc	status,2,c
  3158  000780  EF5D  F003         	goto	l2114
  3159  000784  0A01               	xorlw	1	; case 3
  3160  000786  B4D8               	btfsc	status,2,c
  3161  000788  EF77  F003         	goto	l2116
  3162  00078C  0A07               	xorlw	7	; case 4
  3163  00078E  B4D8               	btfsc	status,2,c
  3164  000790  EF91  F003         	goto	l2118
  3165  000794  EF47  F004         	goto	l141
  3166  000798                     l2124:
  3167                           
  3168                           ;pins.c: 165:                  clearBit(&TRISA, bit_val);
  3169  000798  0E92               	movlw	146
  3170  00079A  6E04               	movwf	clearBit@p^0,c
  3171  00079C  0E0F               	movlw	15
  3172  00079E  6E05               	movwf	(clearBit@p+1)^0,c
  3173  0007A0  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3174  0007A4  EC64  F00B         	call	_clearBit	;wreg free
  3175                           
  3176                           ;pins.c: 166:                  clearBit(&ANSELA, bit_val);
  3177  0007A8  0E38               	movlw	56
  3178  0007AA  6E04               	movwf	clearBit@p^0,c
  3179  0007AC  0E0F               	movlw	15
  3180  0007AE  6E05               	movwf	(clearBit@p+1)^0,c
  3181  0007B0  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3182  0007B4  EC64  F00B         	call	_clearBit	;wreg free
  3183                           
  3184                           ;pins.c: 167:                  break;
  3185  0007B8  EF47  F004         	goto	l141
  3186  0007BC                     l2126:
  3187                           
  3188                           ;pins.c: 169:                  clearBit(&TRISB, bit_val);
  3189  0007BC  0E93               	movlw	147
  3190  0007BE  6E04               	movwf	clearBit@p^0,c
  3191  0007C0  0E0F               	movlw	15
  3192  0007C2  6E05               	movwf	(clearBit@p+1)^0,c
  3193  0007C4  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3194  0007C8  EC64  F00B         	call	_clearBit	;wreg free
  3195                           
  3196                           ;pins.c: 170:                  clearBit(&ANSELB, bit_val);
  3197  0007CC  0E39               	movlw	57
  3198  0007CE  6E04               	movwf	clearBit@p^0,c
  3199  0007D0  0E0F               	movlw	15
  3200  0007D2  6E05               	movwf	(clearBit@p+1)^0,c
  3201  0007D4  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3202  0007D8  EC64  F00B         	call	_clearBit	;wreg free
  3203                           
  3204                           ;pins.c: 171:                  break;
  3205  0007DC  EF47  F004         	goto	l141
  3206  0007E0                     l2128:
  3207                           
  3208                           ;pins.c: 173:                  clearBit(&TRISC, bit_val);
  3209  0007E0  0E94               	movlw	148
  3210  0007E2  6E04               	movwf	clearBit@p^0,c
  3211  0007E4  0E0F               	movlw	15
  3212  0007E6  6E05               	movwf	(clearBit@p+1)^0,c
  3213  0007E8  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3214  0007EC  EC64  F00B         	call	_clearBit	;wreg free
  3215                           
  3216                           ;pins.c: 174:                  clearBit(&ANSELC, bit_val);
  3217  0007F0  0E3A               	movlw	58
  3218  0007F2  6E04               	movwf	clearBit@p^0,c
  3219  0007F4  0E0F               	movlw	15
  3220  0007F6  6E05               	movwf	(clearBit@p+1)^0,c
  3221  0007F8  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3222  0007FC  EC64  F00B         	call	_clearBit	;wreg free
  3223                           
  3224                           ;pins.c: 175:                  break;
  3225  000800  EF47  F004         	goto	l141
  3226  000804                     l2130:
  3227                           
  3228                           ;pins.c: 177:                  clearBit(&TRISD, bit_val);
  3229  000804  0E95               	movlw	149
  3230  000806  6E04               	movwf	clearBit@p^0,c
  3231  000808  0E0F               	movlw	15
  3232  00080A  6E05               	movwf	(clearBit@p+1)^0,c
  3233  00080C  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3234  000810  EC64  F00B         	call	_clearBit	;wreg free
  3235                           
  3236                           ;pins.c: 178:                  clearBit(&ANSELD, bit_val);
  3237  000814  0E3B               	movlw	59
  3238  000816  6E04               	movwf	clearBit@p^0,c
  3239  000818  0E0F               	movlw	15
  3240  00081A  6E05               	movwf	(clearBit@p+1)^0,c
  3241  00081C  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3242  000820  EC64  F00B         	call	_clearBit	;wreg free
  3243                           
  3244                           ;pins.c: 179:                  break;
  3245  000824  EF47  F004         	goto	l141
  3246  000828                     l2132:
  3247                           
  3248                           ;pins.c: 181:                  clearBit(&TRISA, bit_val);
  3249  000828  0E92               	movlw	146
  3250  00082A  6E04               	movwf	clearBit@p^0,c
  3251  00082C  0E0F               	movlw	15
  3252  00082E  6E05               	movwf	(clearBit@p+1)^0,c
  3253  000830  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3254  000834  EC64  F00B         	call	_clearBit	;wreg free
  3255                           
  3256                           ;pins.c: 182:                  clearBit(&ANSELE, bit_val);
  3257  000838  0E3C               	movlw	60
  3258  00083A  6E04               	movwf	clearBit@p^0,c
  3259  00083C  0E0F               	movlw	15
  3260  00083E  6E05               	movwf	(clearBit@p+1)^0,c
  3261  000840  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3262  000844  EC64  F00B         	call	_clearBit	;wreg free
  3263                           
  3264                           ;pins.c: 183:                  break;
  3265  000848  EF47  F004         	goto	l141
  3266  00084C                     l2136:
  3267  00084C  502C               	movf	pinMode@port^0,w,c
  3268  00084E  6E29               	movwf	??_pinMode^0,c
  3269  000850  6A2A               	clrf	(??_pinMode+1)^0,c
  3270                           
  3271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3272                           ; Switch size 1, requested type "simple"
  3273                           ; Number of cases is 1, Range of values is 0 to 0
  3274                           ; switch strategies available:
  3275                           ; Name         Instructions Cycles
  3276                           ; simple_byte            4     3 (average)
  3277                           ;	Chosen strategy is simple_byte
  3278  000852  502A               	movf	(??_pinMode+1)^0,w,c
  3279  000854  0A00               	xorlw	0	; case 0
  3280  000856  B4D8               	btfsc	status,2,c
  3281  000858  EF30  F004         	goto	l2408
  3282  00085C  EF47  F004         	goto	l141
  3283  000860                     l2408:
  3284                           
  3285                           ; Switch size 1, requested type "simple"
  3286                           ; Number of cases is 5, Range of values is 0 to 4
  3287                           ; switch strategies available:
  3288                           ; Name         Instructions Cycles
  3289                           ; simple_byte           16     9 (average)
  3290                           ;	Chosen strategy is simple_byte
  3291  000860  5029               	movf	??_pinMode^0,w,c
  3292  000862  0A00               	xorlw	0	; case 0
  3293  000864  B4D8               	btfsc	status,2,c
  3294  000866  EFCC  F003         	goto	l2124
  3295  00086A  0A01               	xorlw	1	; case 1
  3296  00086C  B4D8               	btfsc	status,2,c
  3297  00086E  EFDE  F003         	goto	l2126
  3298  000872  0A03               	xorlw	3	; case 2
  3299  000874  B4D8               	btfsc	status,2,c
  3300  000876  EFF0  F003         	goto	l2128
  3301  00087A  0A01               	xorlw	1	; case 3
  3302  00087C  B4D8               	btfsc	status,2,c
  3303  00087E  EF02  F004         	goto	l2130
  3304  000882  0A07               	xorlw	7	; case 4
  3305  000884  B4D8               	btfsc	status,2,c
  3306  000886  EF14  F004         	goto	l2132
  3307  00088A  EF47  F004         	goto	l141
  3308  00088E                     l141:
  3309  00088E  0012               	return		;funcret
  3310  000890                     __end_of_pinMode:
  3311                           	callstack 0
  3312                           
  3313 ;; *************** function _setBit *****************
  3314 ;; Defined at:
  3315 ;;		line 30 in file "mylib.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  p               2    3[COMRAM] PTR volatile unsigned ch
  3318 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  3319 ;;		 -> LATA(1), ANSELE(1), TRISE(1), ANSELD(1), 
  3320 ;;		 -> TRISD(1), ANSELC(1), TRISC(1), ANSELB(1), 
  3321 ;;		 -> TRISB(1), ANSELA(1), TRISA(1), 
  3322 ;;  b               1    5[COMRAM] unsigned char 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;		None
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      void 
  3327 ;; Registers used:
  3328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3334 ;;      Params:         3       0       0       0
  3335 ;;      Locals:         0       0       0       0
  3336 ;;      Temps:          1       0       0       0
  3337 ;;      Totals:         4       0       0       0
  3338 ;;Total ram usage:        4 bytes
  3339 ;; Hardware stack levels used: 1
  3340 ;; Hardware stack levels required when called: 1
  3341 ;; This function calls:
  3342 ;;		_bitValue
  3343 ;; This function is called by:
  3344 ;;		_pinMode
  3345 ;;		_digitalWrite
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text14
  3350  0016F8                     __ptext14:
  3351                           	callstack 0
  3352  0016F8                     _setBit:
  3353                           	callstack 28
  3354  0016F8                     
  3355                           ;mylib.c: 31:      *p |= bitValue(b);
  3356  0016F8  5006               	movf	setBit@b^0,w,c
  3357  0016FA  EC55  F00B         	call	_bitValue
  3358  0016FE  6E07               	movwf	??_setBit^0,c
  3359  001700  C004  FFD9         	movff	setBit@p,fsr2l
  3360  001704  C005  FFDA         	movff	setBit@p+1,fsr2h
  3361  001708  5007               	movf	??_setBit^0,w,c
  3362  00170A  12DF               	iorwf	indf2,f,c
  3363  00170C  0012               	return		;funcret
  3364  00170E                     __end_of_setBit:
  3365                           	callstack 0
  3366                           
  3367 ;; *************** function _clearBit *****************
  3368 ;; Defined at:
  3369 ;;		line 34 in file "mylib.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  p               2    3[COMRAM] PTR volatile unsigned ch
  3372 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  3373 ;;		 -> LATA(1), ANSELE(1), ANSELD(1), TRISD(1), 
  3374 ;;		 -> ANSELC(1), TRISC(1), ANSELB(1), TRISB(1), 
  3375 ;;		 -> ANSELA(1), TRISA(1), 
  3376 ;;  b               1    5[COMRAM] unsigned char 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;		None
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      void 
  3381 ;; Registers used:
  3382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3388 ;;      Params:         3       0       0       0
  3389 ;;      Locals:         0       0       0       0
  3390 ;;      Temps:          1       0       0       0
  3391 ;;      Totals:         4       0       0       0
  3392 ;;Total ram usage:        4 bytes
  3393 ;; Hardware stack levels used: 1
  3394 ;; Hardware stack levels required when called: 1
  3395 ;; This function calls:
  3396 ;;		_bitValue
  3397 ;; This function is called by:
  3398 ;;		_pinMode
  3399 ;;		_digitalWrite
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text15
  3404  0016C8                     __ptext15:
  3405                           	callstack 0
  3406  0016C8                     _clearBit:
  3407                           	callstack 28
  3408  0016C8                     
  3409                           ;mylib.c: 35:      *p |= ~bitValue(b);
  3410  0016C8  5006               	movf	clearBit@b^0,w,c
  3411  0016CA  EC55  F00B         	call	_bitValue
  3412  0016CE  0AFF               	xorlw	255
  3413  0016D0  6E07               	movwf	??_clearBit^0,c
  3414  0016D2  C004  FFD9         	movff	clearBit@p,fsr2l
  3415  0016D6  C005  FFDA         	movff	clearBit@p+1,fsr2h
  3416  0016DA  5007               	movf	??_clearBit^0,w,c
  3417  0016DC  12DF               	iorwf	indf2,f,c
  3418  0016DE  0012               	return		;funcret
  3419  0016E0                     __end_of_clearBit:
  3420                           	callstack 0
  3421                           
  3422 ;; *************** function _digitalRead *****************
  3423 ;; Defined at:
  3424 ;;		line 190 in file "pins.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  pin             1    wreg     unsigned char 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  pin             1   41[COMRAM] unsigned char 
  3429 ;;  bit_val         1   45[COMRAM] unsigned char 
  3430 ;;  value           1   44[COMRAM] enum E6032
  3431 ;;  port_num        1   43[COMRAM] unsigned char 
  3432 ;;  port            1   42[COMRAM] enum E6026
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      enum E6339
  3435 ;; Registers used:
  3436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3442 ;;      Params:         0       0       0       0
  3443 ;;      Locals:         5       0       0       0
  3444 ;;      Temps:          2       0       0       0
  3445 ;;      Totals:         7       0       0       0
  3446 ;;Total ram usage:        7 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 1
  3449 ;; This function calls:
  3450 ;;		_convertToBit
  3451 ;;		_convertToPort
  3452 ;;		_pinToIndex
  3453 ;;		_readBit
  3454 ;; This function is called by:
  3455 ;;		_main
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           	psect	text16
  3460  001012                     __ptext16:
  3461                           	callstack 0
  3462  001012                     _digitalRead:
  3463                           	callstack 29
  3464                           
  3465                           ;incstack = 0
  3466                           ;digitalRead@pin stored from wreg
  3467  001012  6E2A               	movwf	digitalRead@pin^0,c
  3468  001014                     
  3469                           ;pins.c: 191:      uint8_t port_num = pinToIndex(pin);
  3470  001014  502A               	movf	digitalRead@pin^0,w,c
  3471  001016  EC37  F00A         	call	_pinToIndex
  3472  00101A  6E2C               	movwf	digitalRead@port_num^0,c
  3473  00101C                     
  3474                           ;pins.c: 192:      enum ports port = convertToPort(port_num);
  3475  00101C  502C               	movf	digitalRead@port_num^0,w,c
  3476  00101E  ECBF  F009         	call	_convertToPort
  3477  001022  6E2B               	movwf	digitalRead@port^0,c
  3478  001024                     
  3479                           ;pins.c: 193:      uint8_t bit_val = convertToBit(port_num);
  3480  001024  502C               	movf	digitalRead@port_num^0,w,c
  3481  001026  EC74  F009         	call	_convertToBit
  3482  00102A  6E2E               	movwf	digitalRead@bit_val^0,c
  3483                           
  3484                           ;pins.c: 194:      enum values value;;pins.c: 196:      switch(port) {
  3485  00102C  EF4F  F008         	goto	l2172
  3486  001030                     l2160:
  3487                           
  3488                           ;pins.c: 198:              value = readBit(&PORTA, bit_val);
  3489  001030  0E80               	movlw	128
  3490  001032  6E01               	movwf	readBit@p^0,c
  3491  001034  0E0F               	movlw	15
  3492  001036  6E02               	movwf	(readBit@p+1)^0,c
  3493  001038  C02E  F003         	movff	digitalRead@bit_val,readBit@b
  3494  00103C  EC20  F00B         	call	_readBit	;wreg free
  3495  001040  6E2D               	movwf	digitalRead@value^0,c
  3496                           
  3497                           ;pins.c: 199:              break;
  3498  001042  EF70  F008         	goto	l2174
  3499  001046                     l2162:
  3500                           
  3501                           ;pins.c: 201:              value = readBit(&PORTB, bit_val);
  3502  001046  0E81               	movlw	129
  3503  001048  6E01               	movwf	readBit@p^0,c
  3504  00104A  0E0F               	movlw	15
  3505  00104C  6E02               	movwf	(readBit@p+1)^0,c
  3506  00104E  C02E  F003         	movff	digitalRead@bit_val,readBit@b
  3507  001052  EC20  F00B         	call	_readBit	;wreg free
  3508  001056  6E2D               	movwf	digitalRead@value^0,c
  3509                           
  3510                           ;pins.c: 202:              break;
  3511  001058  EF70  F008         	goto	l2174
  3512  00105C                     l2164:
  3513                           
  3514                           ;pins.c: 204:              value = readBit(&PORTC, bit_val);
  3515  00105C  0E82               	movlw	130
  3516  00105E  6E01               	movwf	readBit@p^0,c
  3517  001060  0E0F               	movlw	15
  3518  001062  6E02               	movwf	(readBit@p+1)^0,c
  3519  001064  C02E  F003         	movff	digitalRead@bit_val,readBit@b
  3520  001068  EC20  F00B         	call	_readBit	;wreg free
  3521  00106C  6E2D               	movwf	digitalRead@value^0,c
  3522                           
  3523                           ;pins.c: 205:              break;
  3524  00106E  EF70  F008         	goto	l2174
  3525  001072                     l2166:
  3526                           
  3527                           ;pins.c: 207:              value = readBit(&PORTD, bit_val);
  3528  001072  0E83               	movlw	131
  3529  001074  6E01               	movwf	readBit@p^0,c
  3530  001076  0E0F               	movlw	15
  3531  001078  6E02               	movwf	(readBit@p+1)^0,c
  3532  00107A  C02E  F003         	movff	digitalRead@bit_val,readBit@b
  3533  00107E  EC20  F00B         	call	_readBit	;wreg free
  3534  001082  6E2D               	movwf	digitalRead@value^0,c
  3535                           
  3536                           ;pins.c: 208:              break;
  3537  001084  EF70  F008         	goto	l2174
  3538  001088                     l2168:
  3539                           
  3540                           ;pins.c: 210:              value = readBit(&PORTE, bit_val);
  3541  001088  0E84               	movlw	132
  3542  00108A  6E01               	movwf	readBit@p^0,c
  3543  00108C  0E0F               	movlw	15
  3544  00108E  6E02               	movwf	(readBit@p+1)^0,c
  3545  001090  C02E  F003         	movff	digitalRead@bit_val,readBit@b
  3546  001094  EC20  F00B         	call	_readBit	;wreg free
  3547  001098  6E2D               	movwf	digitalRead@value^0,c
  3548                           
  3549                           ;pins.c: 211:              break;
  3550  00109A  EF70  F008         	goto	l2174
  3551  00109E                     l2172:
  3552  00109E  502B               	movf	digitalRead@port^0,w,c
  3553  0010A0  6E28               	movwf	??_digitalRead^0,c
  3554  0010A2  6A29               	clrf	(??_digitalRead+1)^0,c
  3555                           
  3556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3557                           ; Switch size 1, requested type "simple"
  3558                           ; Number of cases is 1, Range of values is 0 to 0
  3559                           ; switch strategies available:
  3560                           ; Name         Instructions Cycles
  3561                           ; simple_byte            4     3 (average)
  3562                           ;	Chosen strategy is simple_byte
  3563  0010A4  5029               	movf	(??_digitalRead+1)^0,w,c
  3564  0010A6  0A00               	xorlw	0	; case 0
  3565  0010A8  B4D8               	btfsc	status,2,c
  3566  0010AA  EF59  F008         	goto	l2410
  3567  0010AE  EF70  F008         	goto	l2174
  3568  0010B2                     l2410:
  3569                           
  3570                           ; Switch size 1, requested type "simple"
  3571                           ; Number of cases is 5, Range of values is 0 to 4
  3572                           ; switch strategies available:
  3573                           ; Name         Instructions Cycles
  3574                           ; simple_byte           16     9 (average)
  3575                           ;	Chosen strategy is simple_byte
  3576  0010B2  5028               	movf	??_digitalRead^0,w,c
  3577  0010B4  0A00               	xorlw	0	; case 0
  3578  0010B6  B4D8               	btfsc	status,2,c
  3579  0010B8  EF18  F008         	goto	l2160
  3580  0010BC  0A01               	xorlw	1	; case 1
  3581  0010BE  B4D8               	btfsc	status,2,c
  3582  0010C0  EF23  F008         	goto	l2162
  3583  0010C4  0A03               	xorlw	3	; case 2
  3584  0010C6  B4D8               	btfsc	status,2,c
  3585  0010C8  EF2E  F008         	goto	l2164
  3586  0010CC  0A01               	xorlw	1	; case 3
  3587  0010CE  B4D8               	btfsc	status,2,c
  3588  0010D0  EF39  F008         	goto	l2166
  3589  0010D4  0A07               	xorlw	7	; case 4
  3590  0010D6  B4D8               	btfsc	status,2,c
  3591  0010D8  EF44  F008         	goto	l2168
  3592  0010DC  EF70  F008         	goto	l2174
  3593  0010E0                     l2174:
  3594                           
  3595                           ;pins.c: 215:      return value;
  3596  0010E0  502D               	movf	digitalRead@value^0,w,c
  3597  0010E2  0012               	return		;funcret
  3598  0010E4                     __end_of_digitalRead:
  3599                           	callstack 0
  3600                           
  3601 ;; *************** function _readBit *****************
  3602 ;; Defined at:
  3603 ;;		line 37 in file "mylib.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  p               2    0[COMRAM] PTR volatile unsigned ch
  3606 ;;		 -> PORTE(1), PORTD(1), PORTC(1), PORTB(1), 
  3607 ;;		 -> PORTA(1), ANSELE(1), ANSELD(1), ANSELC(1), 
  3608 ;;		 -> ANSELB(1), ANSELA(1), 
  3609 ;;  b               1    2[COMRAM] unsigned char 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;		None
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      unsigned char 
  3614 ;; Registers used:
  3615 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3621 ;;      Params:         3       0       0       0
  3622 ;;      Locals:         0       0       0       0
  3623 ;;      Temps:          2       0       0       0
  3624 ;;      Totals:         5       0       0       0
  3625 ;;Total ram usage:        5 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; This function calls:
  3628 ;;		Nothing
  3629 ;; This function is called by:
  3630 ;;		_digitalRead
  3631 ;;		_isAnalog
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text17
  3636  001640                     __ptext17:
  3637                           	callstack 0
  3638  001640                     _readBit:
  3639                           	callstack 29
  3640  001640                     
  3641                           ;mylib.c: 38:     return (*p >> b) & 0x01;
  3642  001640  C003  F004         	movff	readBit@b,??_readBit
  3643  001644  C001  FFD9         	movff	readBit@p,fsr2l
  3644  001648  C002  FFDA         	movff	readBit@p+1,fsr2h
  3645  00164C  50DF               	movf	indf2,w,c
  3646  00164E  6E05               	movwf	(??_readBit+1)^0,c
  3647  001650  2A04               	incf	??_readBit^0,f,c
  3648  001652  EF2D  F00B         	goto	u1434
  3649  001656                     u1435:
  3650  001656  90D8               	bcf	status,0,c
  3651  001658  3205               	rrcf	(??_readBit+1)^0,f,c
  3652  00165A                     u1434:
  3653  00165A  2E04               	decfsz	??_readBit^0,f,c
  3654  00165C  EF2B  F00B         	goto	u1435
  3655  001660  5005               	movf	(??_readBit+1)^0,w,c
  3656  001662  0B01               	andlw	1
  3657  001664  0012               	return		;funcret
  3658  001666                     __end_of_readBit:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function _pinToIndex *****************
  3662 ;; Defined at:
  3663 ;;		line 10 in file "pins.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  pin             1    wreg     unsigned char 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  pin             1   37[COMRAM] unsigned char 
  3668 ;;  pins           36    1[COMRAM] unsigned char [36]
  3669 ;;  i               1   38[COMRAM] unsigned char 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      unsigned char 
  3672 ;; Registers used:
  3673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3679 ;;      Params:         0       0       0       0
  3680 ;;      Locals:        38       0       0       0
  3681 ;;      Temps:          1       0       0       0
  3682 ;;      Totals:        39       0       0       0
  3683 ;;Total ram usage:       39 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; This function calls:
  3686 ;;		Nothing
  3687 ;; This function is called by:
  3688 ;;		_pinMode
  3689 ;;		_digitalRead
  3690 ;;		_digitalWrite
  3691 ;;		_analogRead
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text18
  3696  00146E                     __ptext18:
  3697                           	callstack 0
  3698  00146E                     _pinToIndex:
  3699                           	callstack 29
  3700                           
  3701                           ;incstack = 0
  3702                           ;pinToIndex@pin stored from wreg
  3703  00146E  6E26               	movwf	pinToIndex@pin^0,c
  3704  001470                     
  3705                           ;pins.c: 11:     uint8_t pins[36] = {2, 3, 4, 5, 6, 7, 14, 13,
  3706  001470  EE20  F088         	lfsr	2,pinToIndex@F6037
  3707  001474  EE10  F002         	lfsr	1,pinToIndex@pins
  3708  001478  0E23               	movlw	35
  3709  00147A                     u1441:
  3710  00147A  CFDB FFE3          	movff	plusw2,plusw1
  3711  00147E  06E8               	decf	wreg,f,c
  3712  001480  E2FC               	bc	u1441
  3713  001482                     
  3714                           ;pins.c: 16:     uint8_t i;;pins.c: 17:     for(i=0; i<36; i++){
  3715  001482  0E00               	movlw	0
  3716  001484  6E27               	movwf	pinToIndex@i^0,c
  3717  001486                     l2006:
  3718                           
  3719                           ;pins.c: 18:         if (pins[i] == pin){
  3720  001486  0E02               	movlw	low pinToIndex@pins
  3721  001488  2427               	addwf	pinToIndex@i^0,w,c
  3722  00148A  6ED9               	movwf	fsr2l,c
  3723  00148C  6ADA               	clrf	fsr2h,c
  3724  00148E  0E00               	movlw	high pinToIndex@pins
  3725  001490  22DA               	addwfc	fsr2h,f,c
  3726  001492  5026               	movf	pinToIndex@pin^0,w,c
  3727  001494  18DE               	xorwf	postinc2,w,c
  3728  001496  A4D8               	btfss	status,2,c
  3729  001498  EF50  F00A         	goto	u1451
  3730  00149C  EF52  F00A         	goto	u1450
  3731  0014A0                     u1451:
  3732  0014A0  EF54  F00A         	goto	l2010
  3733  0014A4                     u1450:
  3734  0014A4  EF5D  F00A         	goto	l2014
  3735  0014A8                     l2010:
  3736                           
  3737                           ;pins.c: 21:     }
  3738  0014A8  2A27               	incf	pinToIndex@i^0,f,c
  3739  0014AA  0E23               	movlw	35
  3740  0014AC  6427               	cpfsgt	pinToIndex@i^0,c
  3741  0014AE  EF5B  F00A         	goto	u1461
  3742  0014B2  EF5D  F00A         	goto	u1460
  3743  0014B6                     u1461:
  3744  0014B6  EF43  F00A         	goto	l2006
  3745  0014BA                     u1460:
  3746  0014BA                     l2014:
  3747                           
  3748                           ;pins.c: 22:     return i;
  3749  0014BA  5027               	movf	pinToIndex@i^0,w,c
  3750  0014BC  0012               	return		;funcret
  3751  0014BE                     __end_of_pinToIndex:
  3752                           	callstack 0
  3753                           
  3754 ;; *************** function _convertToPort *****************
  3755 ;; Defined at:
  3756 ;;		line 25 in file "pins.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  i               1    wreg     unsigned char 
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;  i               1    0[COMRAM] unsigned char 
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  1    wreg      enum E6026
  3763 ;; Registers used:
  3764 ;;		wreg, status,2, status,0
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3770 ;;      Params:         0       0       0       0
  3771 ;;      Locals:         1       0       0       0
  3772 ;;      Temps:          0       0       0       0
  3773 ;;      Totals:         1       0       0       0
  3774 ;;Total ram usage:        1 bytes
  3775 ;; Hardware stack levels used: 1
  3776 ;; This function calls:
  3777 ;;		Nothing
  3778 ;; This function is called by:
  3779 ;;		_pinMode
  3780 ;;		_digitalRead
  3781 ;;		_digitalWrite
  3782 ;;		_analogRead
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text19
  3787  00137E                     __ptext19:
  3788                           	callstack 0
  3789  00137E                     _convertToPort:
  3790                           	callstack 29
  3791                           
  3792                           ;incstack = 0
  3793                           ;convertToPort@i stored from wreg
  3794  00137E  6E01               	movwf	convertToPort@i^0,c
  3795  001380                     
  3796                           ;pins.c: 26:     if(i >= 0 && i <= 7) {
  3797  001380  0E08               	movlw	8
  3798  001382  6001               	cpfslt	convertToPort@i^0,c
  3799  001384  EFC6  F009         	goto	u491
  3800  001388  EFC8  F009         	goto	u490
  3801  00138C                     u491:
  3802  00138C  EFCB  F009         	goto	l1342
  3803  001390                     u490:
  3804  001390                     
  3805                           ;pins.c: 27:         return A;
  3806  001390  0E00               	movlw	0
  3807  001392  EF05  F00A         	goto	l117
  3808  001396                     l1342:
  3809  001396  0E07               	movlw	7
  3810  001398  6401               	cpfsgt	convertToPort@i^0,c
  3811  00139A  EFD1  F009         	goto	u501
  3812  00139E  EFD3  F009         	goto	u500
  3813  0013A2                     u501:
  3814  0013A2  EFDE  F009         	goto	l1352
  3815  0013A6                     u500:
  3816  0013A6  0E10               	movlw	16
  3817  0013A8  6001               	cpfslt	convertToPort@i^0,c
  3818  0013AA  EFD9  F009         	goto	u511
  3819  0013AE  EFDB  F009         	goto	u510
  3820  0013B2                     u511:
  3821  0013B2  EFDE  F009         	goto	l1352
  3822  0013B6                     u510:
  3823  0013B6                     
  3824                           ;pins.c: 30:         return B;
  3825  0013B6  0E01               	movlw	1
  3826  0013B8  EF05  F00A         	goto	l117
  3827  0013BC                     l1352:
  3828  0013BC  0E0F               	movlw	15
  3829  0013BE  6401               	cpfsgt	convertToPort@i^0,c
  3830  0013C0  EFE4  F009         	goto	u521
  3831  0013C4  EFE6  F009         	goto	u520
  3832  0013C8                     u521:
  3833  0013C8  EFF1  F009         	goto	l1362
  3834  0013CC                     u520:
  3835  0013CC  0E18               	movlw	24
  3836  0013CE  6001               	cpfslt	convertToPort@i^0,c
  3837  0013D0  EFEC  F009         	goto	u531
  3838  0013D4  EFEE  F009         	goto	u530
  3839  0013D8                     u531:
  3840  0013D8  EFF1  F009         	goto	l1362
  3841  0013DC                     u530:
  3842  0013DC                     
  3843                           ;pins.c: 33:        return C;
  3844  0013DC  0E02               	movlw	2
  3845  0013DE  EF05  F00A         	goto	l117
  3846  0013E2                     l1362:
  3847  0013E2  0E17               	movlw	23
  3848  0013E4  6401               	cpfsgt	convertToPort@i^0,c
  3849  0013E6  EFF7  F009         	goto	u541
  3850  0013EA  EFF9  F009         	goto	u540
  3851  0013EE                     u541:
  3852  0013EE  EF04  F00A         	goto	l1372
  3853  0013F2                     u540:
  3854  0013F2  0E20               	movlw	32
  3855  0013F4  6001               	cpfslt	convertToPort@i^0,c
  3856  0013F6  EFFF  F009         	goto	u551
  3857  0013FA  EF01  F00A         	goto	u550
  3858  0013FE                     u551:
  3859  0013FE  EF04  F00A         	goto	l1372
  3860  001402                     u550:
  3861  001402                     
  3862                           ;pins.c: 36:         return D;
  3863  001402  0E03               	movlw	3
  3864  001404  EF05  F00A         	goto	l117
  3865  001408                     l1372:
  3866                           
  3867                           ;pins.c: 39:         return E;
  3868  001408  0E04               	movlw	4
  3869  00140A                     l117:
  3870  00140A  0012               	return		;funcret
  3871  00140C                     __end_of_convertToPort:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function _convertToBit *****************
  3875 ;; Defined at:
  3876 ;;		line 43 in file "pins.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  i               1    wreg     unsigned char 
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  i               1    0[COMRAM] unsigned char 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      unsigned char 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2, status,0
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3890 ;;      Params:         0       0       0       0
  3891 ;;      Locals:         1       0       0       0
  3892 ;;      Temps:          0       0       0       0
  3893 ;;      Totals:         1       0       0       0
  3894 ;;Total ram usage:        1 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_pinMode
  3900 ;;		_digitalRead
  3901 ;;		_digitalWrite
  3902 ;;		_analogRead
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           	psect	text20
  3907  0012E8                     __ptext20:
  3908                           	callstack 0
  3909  0012E8                     _convertToBit:
  3910                           	callstack 29
  3911                           
  3912                           ;incstack = 0
  3913                           ;convertToBit@i stored from wreg
  3914  0012E8  6E01               	movwf	convertToBit@i^0,c
  3915  0012EA                     
  3916                           ;pins.c: 44:     if(i >= 0 && i <= 7) {
  3917  0012EA  0E08               	movlw	8
  3918  0012EC  6001               	cpfslt	convertToBit@i^0,c
  3919  0012EE  EF7B  F009         	goto	u561
  3920  0012F2  EF7D  F009         	goto	u560
  3921  0012F6                     u561:
  3922  0012F6  EF80  F009         	goto	l1384
  3923  0012FA                     u560:
  3924  0012FA                     
  3925                           ;pins.c: 45:         return i;
  3926  0012FA  5001               	movf	convertToBit@i^0,w,c
  3927  0012FC  EFBE  F009         	goto	l128
  3928  001300                     l1384:
  3929  001300  0E07               	movlw	7
  3930  001302  6401               	cpfsgt	convertToBit@i^0,c
  3931  001304  EF86  F009         	goto	u571
  3932  001308  EF88  F009         	goto	u570
  3933  00130C                     u571:
  3934  00130C  EF94  F009         	goto	l1394
  3935  001310                     u570:
  3936  001310  0E10               	movlw	16
  3937  001312  6001               	cpfslt	convertToBit@i^0,c
  3938  001314  EF8E  F009         	goto	u581
  3939  001318  EF90  F009         	goto	u580
  3940  00131C                     u581:
  3941  00131C  EF94  F009         	goto	l1394
  3942  001320                     u580:
  3943  001320                     
  3944                           ;pins.c: 48:         return i-8;
  3945  001320  5001               	movf	convertToBit@i^0,w,c
  3946  001322  0FF8               	addlw	248
  3947  001324  EFBE  F009         	goto	l128
  3948  001328                     l1394:
  3949  001328  0E0F               	movlw	15
  3950  00132A  6401               	cpfsgt	convertToBit@i^0,c
  3951  00132C  EF9A  F009         	goto	u591
  3952  001330  EF9C  F009         	goto	u590
  3953  001334                     u591:
  3954  001334  EFA8  F009         	goto	l1404
  3955  001338                     u590:
  3956  001338  0E18               	movlw	24
  3957  00133A  6001               	cpfslt	convertToBit@i^0,c
  3958  00133C  EFA2  F009         	goto	u601
  3959  001340  EFA4  F009         	goto	u600
  3960  001344                     u601:
  3961  001344  EFA8  F009         	goto	l1404
  3962  001348                     u600:
  3963  001348                     
  3964                           ;pins.c: 51:         return i-16;
  3965  001348  5001               	movf	convertToBit@i^0,w,c
  3966  00134A  0FF0               	addlw	240
  3967  00134C  EFBE  F009         	goto	l128
  3968  001350                     l1404:
  3969  001350  0E17               	movlw	23
  3970  001352  6401               	cpfsgt	convertToBit@i^0,c
  3971  001354  EFAE  F009         	goto	u611
  3972  001358  EFB0  F009         	goto	u610
  3973  00135C                     u611:
  3974  00135C  EFBC  F009         	goto	l1414
  3975  001360                     u610:
  3976  001360  0E20               	movlw	32
  3977  001362  6001               	cpfslt	convertToBit@i^0,c
  3978  001364  EFB6  F009         	goto	u621
  3979  001368  EFB8  F009         	goto	u620
  3980  00136C                     u621:
  3981  00136C  EFBC  F009         	goto	l1414
  3982  001370                     u620:
  3983  001370                     
  3984                           ;pins.c: 54:         return i-24;
  3985  001370  5001               	movf	convertToBit@i^0,w,c
  3986  001372  0FE8               	addlw	232
  3987  001374  EFBE  F009         	goto	l128
  3988  001378                     l1414:
  3989                           
  3990                           ;pins.c: 57:         return i-32;
  3991  001378  5001               	movf	convertToBit@i^0,w,c
  3992  00137A  0FE0               	addlw	224
  3993  00137C                     l128:
  3994  00137C  0012               	return		;funcret
  3995  00137E                     __end_of_convertToBit:
  3996                           	callstack 0
  3997                           
  3998 ;; *************** function _delay *****************
  3999 ;; Defined at:
  4000 ;;		line 7 in file "mydelays.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  ms              4    0[COMRAM] unsigned long 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4014 ;;      Params:         4       0       0       0
  4015 ;;      Locals:         0       0       0       0
  4016 ;;      Temps:          1       0       0       0
  4017 ;;      Totals:         5       0       0       0
  4018 ;;Total ram usage:        5 bytes
  4019 ;; Hardware stack levels used: 1
  4020 ;; This function calls:
  4021 ;;		Nothing
  4022 ;; This function is called by:
  4023 ;;		_main
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text21
  4028  0015AE                     __ptext21:
  4029                           	callstack 0
  4030  0015AE                     _delay:
  4031                           	callstack 30
  4032  0015AE                     
  4033                           ;mydelays.c: 8:     while(ms > 0)
  4034  0015AE  EFE6  F00A         	goto	l2188
  4035  0015B2                     l2184:
  4036                           
  4037                           ;mydelays.c: 9:    {;mydelays.c: 10:        _delay((unsigned long)((1)*(16000000/4000.0)
      +                          ));
  4038  0015B2  0E06               	movlw	6
  4039  0015B4  6E05               	movwf	??_delay^0,c
  4040  0015B6  0E30               	movlw	48
  4041  0015B8                     u1837:
  4042  0015B8  2EE8               	decfsz	wreg,f,c
  4043  0015BA  D7FE               	bra	u1837
  4044  0015BC  2E05               	decfsz	??_delay^0,f,c
  4045  0015BE  D7FC               	bra	u1837
  4046  0015C0  D000               	nop2	
  4047  0015C2                     
  4048                           ;mydelays.c: 11:       ms--;
  4049  0015C2  0601               	decf	delay@ms^0,f,c
  4050  0015C4  0E00               	movlw	0
  4051  0015C6  5A02               	subwfb	(delay@ms+1)^0,f,c
  4052  0015C8  5A03               	subwfb	(delay@ms+2)^0,f,c
  4053  0015CA  5A04               	subwfb	(delay@ms+3)^0,f,c
  4054  0015CC                     l2188:
  4055                           
  4056                           ;mydelays.c: 8:     while(ms > 0)
  4057  0015CC  5001               	movf	delay@ms^0,w,c
  4058  0015CE  1002               	iorwf	(delay@ms+1)^0,w,c
  4059  0015D0  1003               	iorwf	(delay@ms+2)^0,w,c
  4060  0015D2  1004               	iorwf	(delay@ms+3)^0,w,c
  4061  0015D4  A4D8               	btfss	status,2,c
  4062  0015D6  EFEF  F00A         	goto	u1631
  4063  0015DA  EFF1  F00A         	goto	u1630
  4064  0015DE                     u1631:
  4065  0015DE  EFD9  F00A         	goto	l2184
  4066  0015E2                     u1630:
  4067  0015E2  0012               	return		;funcret
  4068  0015E4                     __end_of_delay:
  4069                           	callstack 0
  4070                           
  4071 ;; *************** function _bitWrite *****************
  4072 ;; Defined at:
  4073 ;;		line 19 in file "mylib.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  number          2    7[COMRAM] PTR unsigned char 
  4076 ;;		 -> main@a(1), 
  4077 ;;  b               1    9[COMRAM] unsigned char 
  4078 ;;  val             1   10[COMRAM] unsigned char 
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4090 ;;      Params:         4       0       0       0
  4091 ;;      Locals:         0       0       0       0
  4092 ;;      Temps:          0       0       0       0
  4093 ;;      Totals:         4       0       0       0
  4094 ;;Total ram usage:        4 bytes
  4095 ;; Hardware stack levels used: 1
  4096 ;; Hardware stack levels required when called: 2
  4097 ;; This function calls:
  4098 ;;		_bitClear
  4099 ;;		_bitSet
  4100 ;; This function is called by:
  4101 ;;		_main
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text22
  4106  0015E4                     __ptext22:
  4107                           	callstack 0
  4108  0015E4                     _bitWrite:
  4109                           	callstack 28
  4110  0015E4                     
  4111                           ;mylib.c: 20:     val ? bitSet(number, b) : bitClear(number, b);
  4112  0015E4  500B               	movf	bitWrite@val^0,w,c
  4113  0015E6  B4D8               	btfsc	status,2,c
  4114  0015E8  EFF8  F00A         	goto	u1491
  4115  0015EC  EFFA  F00A         	goto	u1490
  4116  0015F0                     u1491:
  4117  0015F0  EF04  F00B         	goto	l2034
  4118  0015F4                     u1490:
  4119  0015F4  C008  F004         	movff	bitWrite@number,bitSet@number
  4120  0015F8  C009  F005         	movff	bitWrite@number+1,bitSet@number+1
  4121  0015FC  C00A  F006         	movff	bitWrite@b,bitSet@b
  4122  001600  EC87  F00B         	call	_bitSet	;wreg free
  4123  001604  EF0C  F00B         	goto	l19
  4124  001608                     l2034:
  4125  001608  C008  F004         	movff	bitWrite@number,bitClear@number
  4126  00160C  C009  F005         	movff	bitWrite@number+1,bitClear@number+1
  4127  001610  C00A  F006         	movff	bitWrite@b,bitClear@b
  4128  001614  EC70  F00B         	call	_bitClear	;wreg free
  4129  001618                     l19:
  4130  001618  0012               	return		;funcret
  4131  00161A                     __end_of_bitWrite:
  4132                           	callstack 0
  4133                           
  4134 ;; *************** function _bitSet *****************
  4135 ;; Defined at:
  4136 ;;		line 15 in file "mylib.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  number          2    3[COMRAM] PTR unsigned char 
  4139 ;;		 -> main@a(1), 
  4140 ;;  b               1    5[COMRAM] unsigned char 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;		None
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4152 ;;      Params:         3       0       0       0
  4153 ;;      Locals:         0       0       0       0
  4154 ;;      Temps:          1       0       0       0
  4155 ;;      Totals:         4       0       0       0
  4156 ;;Total ram usage:        4 bytes
  4157 ;; Hardware stack levels used: 1
  4158 ;; Hardware stack levels required when called: 1
  4159 ;; This function calls:
  4160 ;;		_bitValue
  4161 ;; This function is called by:
  4162 ;;		_bitWrite
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text23
  4167  00170E                     __ptext23:
  4168                           	callstack 0
  4169  00170E                     _bitSet:
  4170                           	callstack 28
  4171  00170E                     
  4172                           ;mylib.c: 16:     *number |= bitValue(b);
  4173  00170E  5006               	movf	bitSet@b^0,w,c
  4174  001710  EC55  F00B         	call	_bitValue
  4175  001714  6E07               	movwf	??_bitSet^0,c
  4176  001716  C004  FFD9         	movff	bitSet@number,fsr2l
  4177  00171A  C005  FFDA         	movff	bitSet@number+1,fsr2h
  4178  00171E  5007               	movf	??_bitSet^0,w,c
  4179  001720  12DF               	iorwf	indf2,f,c
  4180  001722  0012               	return		;funcret
  4181  001724                     __end_of_bitSet:
  4182                           	callstack 0
  4183                           
  4184 ;; *************** function _bitClear *****************
  4185 ;; Defined at:
  4186 ;;		line 7 in file "mylib.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  number          2    3[COMRAM] PTR unsigned char 
  4189 ;;		 -> main@a(1), 
  4190 ;;  b               1    5[COMRAM] unsigned char 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4202 ;;      Params:         3       0       0       0
  4203 ;;      Locals:         0       0       0       0
  4204 ;;      Temps:          1       0       0       0
  4205 ;;      Totals:         4       0       0       0
  4206 ;;Total ram usage:        4 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; Hardware stack levels required when called: 1
  4209 ;; This function calls:
  4210 ;;		_bitValue
  4211 ;; This function is called by:
  4212 ;;		_bitWrite
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           	psect	text24
  4217  0016E0                     __ptext24:
  4218                           	callstack 0
  4219  0016E0                     _bitClear:
  4220                           	callstack 28
  4221  0016E0                     
  4222                           ;mylib.c: 8:     *number &= ~bitValue(b);
  4223  0016E0  5006               	movf	bitClear@b^0,w,c
  4224  0016E2  EC55  F00B         	call	_bitValue
  4225  0016E6  0AFF               	xorlw	255
  4226  0016E8  6E07               	movwf	??_bitClear^0,c
  4227  0016EA  C004  FFD9         	movff	bitClear@number,fsr2l
  4228  0016EE  C005  FFDA         	movff	bitClear@number+1,fsr2h
  4229  0016F2  5007               	movf	??_bitClear^0,w,c
  4230  0016F4  16DF               	andwf	indf2,f,c
  4231  0016F6  0012               	return		;funcret
  4232  0016F8                     __end_of_bitClear:
  4233                           	callstack 0
  4234                           
  4235 ;; *************** function _bitValue *****************
  4236 ;; Defined at:
  4237 ;;		line 3 in file "mylib.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  b               1    wreg     unsigned char 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  b               1    2[COMRAM] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      unsigned char 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4251 ;;      Params:         0       0       0       0
  4252 ;;      Locals:         1       0       0       0
  4253 ;;      Temps:          2       0       0       0
  4254 ;;      Totals:         3       0       0       0
  4255 ;;Total ram usage:        3 bytes
  4256 ;; Hardware stack levels used: 1
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		_bitClear
  4261 ;;		_bitSet
  4262 ;;		_setBit
  4263 ;;		_clearBit
  4264 ;;		_main
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text25
  4269  0016AA                     __ptext25:
  4270                           	callstack 0
  4271  0016AA                     _bitValue:
  4272                           	callstack 28
  4273                           
  4274                           ;incstack = 0
  4275                           ;bitValue@b stored from wreg
  4276  0016AA  6E03               	movwf	bitValue@b^0,c
  4277  0016AC                     
  4278                           ;mylib.c: 4:     return 1 << b;
  4279  0016AC  C003  F001         	movff	bitValue@b,??_bitValue
  4280  0016B0  0E01               	movlw	1
  4281  0016B2  6E02               	movwf	(??_bitValue+1)^0,c
  4282  0016B4  2A01               	incf	??_bitValue^0,f,c
  4283  0016B6  EF5F  F00B         	goto	u404
  4284  0016BA                     u405:
  4285  0016BA  90D8               	bcf	status,0,c
  4286  0016BC  3602               	rlcf	(??_bitValue+1)^0,f,c
  4287  0016BE                     u404:
  4288  0016BE  2E01               	decfsz	??_bitValue^0,f,c
  4289  0016C0  EF5D  F00B         	goto	u405
  4290  0016C4  5002               	movf	(??_bitValue+1)^0,w,c
  4291  0016C6  0012               	return		;funcret
  4292  0016C8                     __end_of_bitValue:
  4293                           	callstack 0
  4294                           
  4295 ;; *************** function _bitRead *****************
  4296 ;; Defined at:
  4297 ;;		line 11 in file "mylib.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  number          1    wreg     unsigned char 
  4300 ;;  b               1    0[COMRAM] unsigned char 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  number          1    3[COMRAM] unsigned char 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      unsigned char 
  4305 ;; Registers used:
  4306 ;;		wreg, status,2, status,0
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4312 ;;      Params:         1       0       0       0
  4313 ;;      Locals:         1       0       0       0
  4314 ;;      Temps:          2       0       0       0
  4315 ;;      Totals:         4       0       0       0
  4316 ;;Total ram usage:        4 bytes
  4317 ;; Hardware stack levels used: 1
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_main
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text26
  4326  00168A                     __ptext26:
  4327                           	callstack 0
  4328  00168A                     _bitRead:
  4329                           	callstack 30
  4330                           
  4331                           ;incstack = 0
  4332                           ;bitRead@number stored from wreg
  4333  00168A  6E04               	movwf	bitRead@number^0,c
  4334  00168C                     
  4335                           ;mylib.c: 12:     return (number >> b) & 0x01;
  4336  00168C  C001  F002         	movff	bitRead@b,??_bitRead
  4337  001690  C004  F003         	movff	bitRead@number,??_bitRead+1
  4338  001694  2A02               	incf	??_bitRead^0,f,c
  4339  001696  EF4F  F00B         	goto	u1484
  4340  00169A                     u1485:
  4341  00169A  90D8               	bcf	status,0,c
  4342  00169C  3203               	rrcf	(??_bitRead+1)^0,f,c
  4343  00169E                     u1484:
  4344  00169E  2E02               	decfsz	??_bitRead^0,f,c
  4345  0016A0  EF4D  F00B         	goto	u1485
  4346  0016A4  5003               	movf	(??_bitRead+1)^0,w,c
  4347  0016A6  0B01               	andlw	1
  4348  0016A8  0012               	return		;funcret
  4349  0016AA                     __end_of_bitRead:
  4350                           	callstack 0
  4351                           
  4352                           	psect	rparam
  4353  0000                     
  4354                           	psect	idloc
  4355                           
  4356                           ;Config register IDLOC0 @ 0x200000
  4357                           ;	unspecified, using default values
  4358  200000                     	org	2097152
  4359  200000  FF                 	db	255
  4360                           
  4361                           ;Config register IDLOC1 @ 0x200001
  4362                           ;	unspecified, using default values
  4363  200001                     	org	2097153
  4364  200001  FF                 	db	255
  4365                           
  4366                           ;Config register IDLOC2 @ 0x200002
  4367                           ;	unspecified, using default values
  4368  200002                     	org	2097154
  4369  200002  FF                 	db	255
  4370                           
  4371                           ;Config register IDLOC3 @ 0x200003
  4372                           ;	unspecified, using default values
  4373  200003                     	org	2097155
  4374  200003  FF                 	db	255
  4375                           
  4376                           ;Config register IDLOC4 @ 0x200004
  4377                           ;	unspecified, using default values
  4378  200004                     	org	2097156
  4379  200004  FF                 	db	255
  4380                           
  4381                           ;Config register IDLOC5 @ 0x200005
  4382                           ;	unspecified, using default values
  4383  200005                     	org	2097157
  4384  200005  FF                 	db	255
  4385                           
  4386                           ;Config register IDLOC6 @ 0x200006
  4387                           ;	unspecified, using default values
  4388  200006                     	org	2097158
  4389  200006  FF                 	db	255
  4390                           
  4391                           ;Config register IDLOC7 @ 0x200007
  4392                           ;	unspecified, using default values
  4393  200007                     	org	2097159
  4394  200007  FF                 	db	255
  4395                           
  4396                           	psect	config
  4397                           
  4398                           ; Padding undefined space
  4399  300000                     	org	3145728
  4400  300000  FF                 	db	255
  4401                           
  4402                           ;Config register CONFIG1H @ 0x300001
  4403                           ;	unspecified, using default values
  4404                           ;	Oscillator Selection bits
  4405                           ;	FOSC = 0x5, unprogrammed default
  4406                           ;	4X PLL Enable
  4407                           ;	PLLCFG = 0x0, unprogrammed default
  4408                           ;	Primary clock enable bit
  4409                           ;	PRICLKEN = 0x1, unprogrammed default
  4410                           ;	Fail-Safe Clock Monitor Enable bit
  4411                           ;	FCMEN = 0x0, unprogrammed default
  4412                           ;	Internal/External Oscillator Switchover bit
  4413                           ;	IESO = 0x0, unprogrammed default
  4414  300001                     	org	3145729
  4415  300001  25                 	db	37
  4416                           
  4417                           ;Config register CONFIG2L @ 0x300002
  4418                           ;	unspecified, using default values
  4419                           ;	Power-up Timer Enable bit
  4420                           ;	PWRTEN = 0x1, unprogrammed default
  4421                           ;	Brown-out Reset Enable bits
  4422                           ;	BOREN = 0x3, unprogrammed default
  4423                           ;	Brown Out Reset Voltage bits
  4424                           ;	BORV = 0x3, unprogrammed default
  4425  300002                     	org	3145730
  4426  300002  1F                 	db	31
  4427                           
  4428                           ;Config register CONFIG2H @ 0x300003
  4429                           ;	unspecified, using default values
  4430                           ;	Watchdog Timer Enable bits
  4431                           ;	WDTEN = 0x3, unprogrammed default
  4432                           ;	Watchdog Timer Postscale Select bits
  4433                           ;	WDTPS = 0xF, unprogrammed default
  4434  300003                     	org	3145731
  4435  300003  3F                 	db	63
  4436                           
  4437                           ; Padding undefined space
  4438  300004                     	org	3145732
  4439  300004  FF                 	db	255
  4440                           
  4441                           ;Config register CONFIG3H @ 0x300005
  4442                           ;	unspecified, using default values
  4443                           ;	CCP2 MUX bit
  4444                           ;	CCP2MX = 0x1, unprogrammed default
  4445                           ;	PORTB A/D Enable bit
  4446                           ;	PBADEN = 0x1, unprogrammed default
  4447                           ;	P3A/CCP3 Mux bit
  4448                           ;	CCP3MX = 0x1, unprogrammed default
  4449                           ;	HFINTOSC Fast Start-up
  4450                           ;	HFOFST = 0x1, unprogrammed default
  4451                           ;	Timer3 Clock input mux bit
  4452                           ;	T3CMX = 0x1, unprogrammed default
  4453                           ;	ECCP2 B output mux bit
  4454                           ;	P2BMX = 0x1, unprogrammed default
  4455                           ;	MCLR Pin Enable bit
  4456                           ;	MCLRE = 0x1, unprogrammed default
  4457  300005                     	org	3145733
  4458  300005  BF                 	db	191
  4459                           
  4460                           ;Config register CONFIG4L @ 0x300006
  4461                           ;	unspecified, using default values
  4462                           ;	Stack Full/Underflow Reset Enable bit
  4463                           ;	STVREN = 0x1, unprogrammed default
  4464                           ;	Single-Supply ICSP Enable bit
  4465                           ;	LVP = 0x1, unprogrammed default
  4466                           ;	Extended Instruction Set Enable bit
  4467                           ;	XINST = 0x0, unprogrammed default
  4468                           ;	Background Debug
  4469                           ;	DEBUG = 0x1, unprogrammed default
  4470  300006                     	org	3145734
  4471  300006  85                 	db	133
  4472                           
  4473                           ; Padding undefined space
  4474  300007                     	org	3145735
  4475  300007  FF                 	db	255
  4476                           
  4477                           ;Config register CONFIG5L @ 0x300008
  4478                           ;	unspecified, using default values
  4479                           ;	Code Protection Block 0
  4480                           ;	CP0 = 0x1, unprogrammed default
  4481                           ;	Code Protection Block 1
  4482                           ;	CP1 = 0x1, unprogrammed default
  4483  300008                     	org	3145736
  4484  300008  03                 	db	3
  4485                           
  4486                           ;Config register CONFIG5H @ 0x300009
  4487                           ;	unspecified, using default values
  4488                           ;	Boot Block Code Protection bit
  4489                           ;	CPB = 0x1, unprogrammed default
  4490                           ;	Data EEPROM Code Protection bit
  4491                           ;	CPD = 0x1, unprogrammed default
  4492  300009                     	org	3145737
  4493  300009  C0                 	db	192
  4494                           
  4495                           ;Config register CONFIG6L @ 0x30000A
  4496                           ;	unspecified, using default values
  4497                           ;	Write Protection Block 0
  4498                           ;	WRT0 = 0x1, unprogrammed default
  4499                           ;	Write Protection Block 1
  4500                           ;	WRT1 = 0x1, unprogramm  4501  30000A                     	org	3145738
  4502  30000A  03                 	db	3
  4503                           
  4504                           ;Config register CONFIG6H @ 0x30000B
  4505                           ;	unspecified, using default values
  4506                           ;	Configuration Register Write Protection bit
  4507                           ;	WRTC = 0x1, unprogrammed default
  4508                           ;	Boot Block Write Protection bit
  4509                           ;	WRTB = 0x1, unprogrammed default
  4510                           ;	Data EEPROM Write Protection bit
  4511                           ;	WRTD = 0x1, unprogrammed default
  4512  30000B                     	org	3145739
  4513  30000B  E0                 	db	224
  4514                           
  4515                           ;Config register CONFIG7L @ 0x30000C
  4516                           ;	unspecified, using default values
  4517                           ;	Table Read Protection Block 0
  4518                           ;	EBTR0 = 0x1, unprogrammed default
  4519                           ;	Table Read Protection Block 1
  4520                           ;	EBTR1 = 0x1, unprogrammed default
  4521  30000C                     	org	3145740
  4522  30000C  03                 	db	3
  4523                           
  4524                           ;Config register CONFIG7H @ 0x30000D
  4525                           ;	unspecified, using default values
  4526                           ;	Boot Block Table Read Protection bit
  4527                           ;	EBTRB = 0x1, unprogrammed default
  4528  30000D                     	org	3145741
  4529  30000D  40                 	db	64
  4530                           tosu	equ	0xFFF
  4531                           tosh	equ	0xFFE
  4532                           tosl	equ	0xFFD
  4533                           stkptr	equ	0xFFC
  4534                           pclatu	equ	0xFFB
  4535                           pclath	equ	0xFFA
  4536                           pcl	equ	0xFF9
  4537                           tblptru	equ	0xFF8
  4538                           tblptrh	equ	0xFF7
  4539                           tblptrl	equ	0xFF6
  4540                           tablat	equ	0xFF5
  4541                           prodh	equ	0xFF4
  4542                           prodl	equ	0xFF3
  4543                           indf0	equ	0xFEF
  4544                           postinc0	equ	0xFEE
  4545                           postdec0	equ	0xFED
  4546                           preinc0	equ	0xFEC
  4547                           plusw0	equ	0xFEB
  4548                           fsr0h	equ	0xFEA
  4549                           fsr0l	equ	0xFE9
  4550                           wreg	equ	0xFE8
  4551                           indf1	equ	0xFE7
  4552                           postinc1	equ	0xFE6
  4553                           postdec1	equ	0xFE5
  4554                           preinc1	equ	0xFE4
  4555                           plusw1	equ	0xFE3
  4556                           fsr1h	equ	0xFE2
  4557                           fsr1l	equ	0xFE1
  4558                           bsr	equ	0xFE0
  4559                           indf2	equ	0xFDF
  4560                           postinc2	equ	0xFDE
  4561                           postdec2	equ	0xFDD
  4562                           preinc2	equ	0xFDC
  4563                           plusw2	equ	0xFDB
  4564                           fsr2h	equ	0xFDA
  4565                           fsr2l	equ	0xFD9
  4566                           status	equ	0xFD8

Data Sizes:
    Strings     7
    Constant    0
    Data        36
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160      5      81
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S695_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    readBit@p	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTE(SFR_1[1]), PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), 
		 -> PORTA(SFR_1[1]), ANSELE(SFR[1]), ANSELD(SFR[1]), ANSELC(SFR[1]), 
		 -> ANSELB(SFR[1]), ANSELA(SFR[1]), 

    clearBit@p	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATE(SFR_1[1]), LATD(SFR_1[1]), LATC(SFR_1[1]), LATB(SFR_1[1]), 
		 -> LATA(SFR_1[1]), ANSELE(SFR[1]), ANSELD(SFR[1]), TRISD(SFR_1[1]), 
		 -> ANSELC(SFR[1]), TRISC(SFR_1[1]), ANSELB(SFR[1]), TRISB(SFR_1[1]), 
		 -> ANSELA(SFR[1]), TRISA(SFR_1[1]), 

    setBit@p	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATE(SFR_1[1]), LATD(SFR_1[1]), LATC(SFR_1[1]), LATB(SFR_1[1]), 
		 -> LATA(SFR_1[1]), ANSELE(SFR[1]), TRISE(SFR_1[1]), ANSELD(SFR[1]), 
		 -> TRISD(SFR_1[1]), ANSELC(SFR[1]), TRISC(SFR_1[1]), ANSELB(SFR[1]), 
		 -> TRISB(SFR_1[1]), ANSELA(SFR[1]), TRISA(SFR_1[1]), 

    bitWrite@number	PTR unsigned char  size(2) Largest target is 1
		 -> main@a(COMRAM[1]), 

    bitSet@number	PTR unsigned char  size(2) Largest target is 1
		 -> main@a(COMRAM[1]), 

    bitClear@number	PTR unsigned char  size(2) Largest target is 1
		 -> main@a(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _pinMode->_pinToIndex
    _setBit->_bitValue
    _clearBit->_bitValue
    _digitalRead->_pinToIndex
    _bitWrite->_bitClear
    _bitWrite->_bitSet
    _bitSet->_bitValue
    _bitClear->_bitValue

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5   20875
                                             93 COMRAM     2     2      0
                                              0 BANK0      5     0      5
                            _bitRead
                           _bitValue
                           _bitWrite
                              _delay
                        _digitalRead
                            _pinMode
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6265
                                             87 COMRAM     6     2      4
                            _bitRead (ARG)
                           _bitValue (ARG)
                        _digitalRead (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5907
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5553
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4226
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2577
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1169
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     768
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _pinMode                                              7     6      1   11354
                                             39 COMRAM     7     6      1
                           _clearBit
                       _convertToBit
                      _convertToPort
                         _pinToIndex
                             _setBit
 ---------------------------------------------------------------------------------
 (2) _setBit                                               4     1      3    4619
                                              3 COMRAM     4     1      3
                           _bitValue
 ---------------------------------------------------------------------------------
 (2) _clearBit                                             4     1      3    4619
                                              3 COMRAM     4     1      3
                           _bitValue
 ---------------------------------------------------------------------------------
 (1) _digitalRead                                          7     7      0    2213
                                             39 COMRAM     7     7      0
                       _convertToBit
                      _convertToPort
                         _pinToIndex
                            _readBit
 ---------------------------------------------------------------------------------
 (2) _readBit                                              5     2      3    1564
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _pinToIndex                                          39    39      0     136
                                              0 COMRAM    39    39      0
 ---------------------------------------------------------------------------------
 (2) _convertToPort                                        1     1      0     105
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _convertToBit                                         1     1      0     180
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay                                                5     1      4      99
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _bitWrite                                             4     0      4     760
                                              7 COMRAM     4     0      4
                           _bitClear
                             _bitSet
 ---------------------------------------------------------------------------------
 (2) _bitSet                                               4     1      3     211
                                              3 COMRAM     4     1      3
                           _bitValue
 ---------------------------------------------------------------------------------
 (2) _bitClear                                             4     1      3     211
                                              3 COMRAM     4     1      3
                           _bitValue
 ---------------------------------------------------------------------------------
 (3) _bitValue                                             3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _bitRead                                              4     3      1     120
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _bitRead
   _bitValue
   _bitWrite
     _bitClear
       _bitValue
     _bitSet
       _bitValue
   _delay
   _digitalRead
     _convertToBit
     _convertToPort
     _pinToIndex
     _readBit
   _pinMode
     _clearBit
       _bitValue
     _convertToBit
     _convertToPort
     _pinToIndex
     _setBit
       _bitValue
   _printf
     _bitRead (ARG)
     _bitValue (ARG)
     _digitalRead (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      5      51       4       50.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B0       8        0.0%
DATA                 0      0      B0      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu May 06 14:43:12 2021

                      l3 16C6                        l6 16F6                        l9 16A8  
                     l12 1722                       l31 16DE                       l34 1664  
                     l19 1618                       l28 170C                       l53 124E  
                    l113 14BC                      l117 140A                      l141 088E  
                    l128 137C                      l250 15E2                      l191 10E2  
                    l382 0EAC                      l395 1010                      l946 163E  
                    l973 112A                      l976 116C                      l984 0930  
                    l978 11A8                      l986 0938                      u404 16BE  
                    u500 13A6                      u405 16BA                      u501 13A2  
                    u510 13B6                      u511 13B2                      u600 1348  
                    u520 13CC                      u601 1344                      u521 13C8  
                    u610 1360                      u530 13DC                      u611 135C  
                    u531 13D8                      u620 1370                      u540 13F2  
                    u621 136C                      u541 13EE                      u550 1402  
                    u551 13FE                      u560 12FA                      u561 12F6  
                    u570 1310                      u490 1390                      u571 130C  
                    u491 138C                      u580 1320                      u581 131C  
                    u590 1338                      u591 1334                      _abs 1502  
                    _pad 10E4                      wreg 000FE8                     l1011 0D24  
                   l1004 0B70                     l1022 1538                     l2000 1482  
                   l1025 1540                     l1017 1464                     l2010 14A8  
                   l1018 146C                     ?_abs 0013                     l2012 14AA  
                   l2100 05C6                     l2020 1414                     l1037 12E6  
                   l1045 1500                     l2030 15E4                     l2014 14BA  
                   l2006 1486                     l2110 0652                     l1054 15AC  
                   l2022 1422                     l2032 15F4                     l2112 0686  
                   l2104 05FA                     l1048 1724                     l2024 1448  
                   l2026 168C                     l2034 1608                     l2130 0804  
                   l2114 06BA                     l2122 0756                     l2106 063C  
                   l2050 0354                     l2042 030C                     l2018 140C  
                   l1404 1350                     l2132 0828                     l2124 0798  
                   l2116 06EE                     l2060 03AA                     l2052 0364  
                   l2044 031E                     l2036 161A                     l2220 11DC  
                   l1406 1360                     l1414 1378                     l1342 1396  
                   l1334 1380                     l2126 07BC                     l2118 0722  
                   l2070 03D8                     l2054 0378                     l2046 0330  
                   l2038 1622                     l2230 123A                     l2222 11EE  
                   l2214 11AA                     l1256 16AC                     l1408 1370  
                   l1344 13A6                     l1352 13BC                     l1336 1390  
                   l2160 1030                     l2128 07E0                     l2136 084C  
                   l2080 0458                     l2056 0388                     l2064 03C0  
                   l2048 0342                     l2224 120C                     l2216 11C4  
                   l1354 13CC                     l1362 13E2                     l1346 13B6  
                   l2410 10B2                     l2162 1046                     l2154 1014  
                   l2402 04B4                     l2082 047C                     l2074 03EC  
                   l2066 03C8                     l2058 0398                     l2226 1216  
                   l2218 11C8                     l1364 13F2                     l1372 1408  
                   l1356 13DC                     l2164 105C                     l2172 109E  
                   l2156 101C                     l2404 060E                     l2092 04F6  
                   l2076 0410                     l2068 03D0                     l2228 1220  
                   l2182 15AE                     l1366 1402                     l2166 1072  
                   l2174 10E0                     l2158 1024                     l2406 076A  
                   l2094 052A                     l2078 0434                     l2086 04A0  
                   l2184 15B2                     l1384 1300                     l1376 12EA  
                   l2168 1088                     l2408 0860                     l2096 055E  
                   l2088 04E2                     l1800 0DE2                     l2186 15C2  
                   l1386 1310                     l1394 1328                     l1378 12FA  
                   l2098 0592                     l1810 0E56                     l1802 0DF4  
                   l2188 15CC                     l1396 1338                     l1388 1320  
                   l1804 0E22                     l1812 0E5C                     l1820 0EAE  
                   l1900 0960                     l1398 1348                     l1814 0E6C  
                   l1806 0E42                     l1830 0EF2                     l1822 0EB2  
                   l1750 1280                     l1910 09FE                     l1902 0966  
                   l1816 0E8C                     l1808 0E44                     l1840 0F5A  
                   l1832 0F12                     l1824 0EC0                     l1752 129E  
                   l1744 1252                     l1760 14CA                     l1920 0AA6  
                   l1912 0A04                     l1904 096E                     l1850 0FD0  
                   l1842 0F88                     l1834 0F30                     l1826 0EE0  
                   l1754 12D4                     l1746 1264                     l1762 14DC  
                   l1770 1588                     l1930 0B0C                     l1922 0AC0  
                   l1914 0A0A                     l1906 0976                     l1780 0D38  
                   l1852 0FF0                     l1844 0FA8                     l1836 0F38  
                   l1828 0EE4                     l1748 1276                     l1764 14E0  
                   l1772 15A0                     l1860 1108                     l1932 0B12  
                   l1940 0B48                     l1924 0ADA                     l1908 097C  
                   l1916 0A6E                     l1790 0D8E                     l1782 0D58  
                   l1846 0FBA                     l1838 0F4C                     l1758 14BE  
                   l1766 1578                     l1870 114E                     l1862 1116  
                   l1934 0B24                     l1918 0A88                     l1926 0AEA  
                   l1950 0BB6                     l1792 0D9A                     l1784 0D5C  
                   l1776 0D26                     l1848 0FC0                     l1880 151C  
                   l1768 1584                     l1872 117C                     l1864 1122  
                   l1856 10E4                     l1936 0B30                     l1928 0AFC  
                   l1952 0BBA                     l1944 0B72                     l1794 0DB8  
                   l1786 0D6A                     l1778 0D2A                     l1874 1190  
                   l1866 1136                     l1858 10F4                     l1938 0B38  
                   l1890 0908                     l1882 0890                     l1962 0C82  
                   l1954 0BDE                     l1946 0B96                     l1796 0DC0  
                   l1788 0D8A                     l1868 114A                     l1892 090A  
                   l1884 08B0                     l1980 0D12                     l1964 0CA6  
                   l1972 0CD4                     l1956 0C02                     l1948 0BA4  
                   l1990 16F8                     l1798 0DD4                     l1878 1502  
                   l1894 0924                     l1886 08D8                     l1974 0CE2  
                   l1966 0CB4                     l1958 0C4A                     ?_pad 0011  
                   l1992 16C8                     l1896 0940                     l1888 08F8  
                   l1968 0CC8                     l1986 16E0                     l1994 1640  
                   l1898 0952                     l1978 0CEE                     l1988 170E  
                   l1998 1470                     STR_1 0301                     STR_2 0301  
                   STR_3 0305                     STR_4 0305                     u1000 1264  
                   u1001 1260                     u1010 1276                     u1011 1272  
                   u1100 0DE2                     u1020 129E                     u1101 0DDE  
                   u1021 129A                     u1110 0E22                     u1030 12D4  
                   u1111 0E1E                     u1031 12D0                     u1120 0E6C  
                   u1040 1500                     u1200 1116                     u1121 0E68  
                   u1041 14FC                     u1201 1112                     u1130 0EC0  
                   u1050 15A0                     u1210 116C                     u1131 0EBC  
                   u1051 159C                     u1211 1168                     u1060 0D38  
                   u1140 0EF2                     u1220 117C                     u1300 0960  
                   u1061 0D34                     u1141 0EEE                     u1221 1178  
                   u1301 095C                     u1070 0D6A                     u1150 0F30  
                   u1230 151C                     u1310 0A88                     u1071 0D66  
                   u1151 0F2C                     u1231 1518                     u1311 0A84  
                   u1160 0F5A                     u1320 0AA6                     u1240 08C0  
                   u1400 0BDE                     u1081 0D94                     u1161 0F56  
                   u1321 0AA2                     u1241 08BA                     u1401 0BDA  
                   u1090 0DB8                     u1170 0F88                     u1330 0AC0  
                   u1250 08C2                     u1410 0C02                     u1091 0DB4  
                   u1171 0F84                     u1331 0ABC                     u1411 0BFE  
                   u1500 031E                     u1180 0FD0                     u1340 0ADA  
                   u1260 08D8                     u1420 0CA6                     u1501 031A  
                   u1181 0FCC                     u1341 0AD6                     u1261 08D4  
                   u1421 0CA2                     _LATA 000F89                     u1510 0330  
                   u1190 10F4                     u1350 0AEA                     u1270 0908  
                   _LATB 000F8A                     u1511 032C                     u1191 10F0  
                   u1351 0AE6                     u1271 0904                     _LATC 000F8B  
                   u1600 03E8                     u1520 0342                     u1360 0AFC  
                   u1280 0924                     _LATD 000F8C                     u1441 147A  
                   u1601 03E4                     u1521 033E                     u1361 0AF8  
                   u1281 0920                     _LATE 000F8D                     u1450 14A4  
                   u1434 165A                     u1610 04F2                     u1530 0354  
                   u1370 0B0C                     u1290 0952                     u1451 14A0  
                   u1435 1656                     u1611 04EE                     u1531 0350  
                   u1371 0B08                     u1291 094E                     u1460 14BA  
                   u1620 064E                     u1540 0364                     u1380 0B24  
                   u1461 14B6                     u1621 064A                     u1541 0360  
                   u1381 0B20                     u1630 15E2                     u1550 0374  
                   u1390 0B96                     u1470 1464                     u1631 15DE  
                   u1551 0370                     u1391 0B92                     u1471 1460  
                   u1560 0388                     u1561 0384                     u1490 15F4  
                   u1570 0398                     u1491 15F0                     u1571 0394  
                   u1484 169E                     u1580 03AA                     u1485 169A  
                   u1581 03A6                     u1590 03BC                     u1591 03B8  
                   u1837 15B8                     abs@a 0013                     _dbuf 0068  
                   _main 11AA                     _dtoa 0890                     _prec 0064  
                   _nout 0060                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
                   start 0000             ___param_bank 000000            ?_convertToBit 0001  
                  ??_abs 0015                    ??_pad 0017            _convertToPort 137E  
        __end_of___aodiv 0EAE                    ?_main 00AC                    ?_dtoa 001C  
        __end_of___aomod 1012             vfpfcnvrt@fmt 0042                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_bitRead 16AA                    _delay 15AE                    _flags 0066  
        __end_of_readBit 1666                    _fputc 1252                    _fputs 14BE  
        __end_of_pinMode 0890                    pad@fp 0011                    _width 0062  
                  _putch 1724                    main@a 005F                    dtoa@d 001E  
                  dtoa@i 003E                    dtoa@n 0036                    dtoa@p 0030  
                  dtoa@s 0034                    dtoa@w 0032           pinMode@bit_val 002E  
                  tablat 000FF5                    plusw1 000FE3                    plusw2 000FDB  
          pinToIndex@pin 0026                    status 000FD8           ??_convertToBit 0001  
        __initialization 1542             __end_of_main 1252             __end_of_dtoa 0B72  
         ?_convertToPort 0001                   ??_main 005E                   ??_dtoa 0026  
          __activetblptr 000002     __size_of_digitalRead 00D2                   ?_delay 0001  
                 ?_fputc 0001                   ?_fputs 000A                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _ANSELA 000F38                   ?_putch 0001  
                 _ANSELB 000F39                   _ANSELC 000F3A                   _ANSELD 000F3B  
                 _ANSELE 000F3C         __end_of_bitClear 16F8         __end_of_clearBit 16E0  
       __end_of_bitValue 16C8         __end_of_bitWrite 161A             vfprintf@cfmt 0056  
              ??___aodiv 0011                ??___aomod 0011                   _bitSet 170E  
                 clear_0 1568                ??_bitRead 0002                   _setBit 16F8  
                 isa$std 000001                   _printf 161A                   pad@buf 0013  
                 dtoa@fp 001C                   _strlen 1578                ??_readBit 0004  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_pinMode 0029             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
         pinToIndex@pins 0002                   putch@c 0001         __end_of_vfprintf 146E  
             __accesstop 0060  __end_of__initialization 156E            ___rparam_used 000001  
     digitalRead@bit_val 002E              pinMode@mode 0028          pinMode@port_num 002B  
        ??_convertToPort 0001              pinMode@port 002C           __pcstackCOMRAM 0001  
         bitWrite@number 0008             __pidataBANK0 1666            __end_of_delay 15E4  
          __end_of_fputc 12E8            __end_of_fputs 1502              pinToIndex@i 0027  
          __end_of_putch 1726     __end_of_convertToBit 137E                  ??_delay 0005  
                ??_fputc 0005                  ??_fputs 000E                  ??_putch 0001  
             __pbssBANK0 0060                  ?_bitSet 0004                  ?_setBit 0004  
                ?_printf 0058                  ?_strlen 0001            bitRead@number 0004  
              ?_bitClear 0004                ?_clearBit 0004                ?_bitValue 0001  
     __size_of_vfpfcnvrt 01B4                ?_bitWrite 0008                  __Hparam 0000  
                __Lparam 0000           bitClear@number 0004                  ___aodiv 0D26  
                ___aomod 0EAE          __size_of_bitSet 0016                ?_vfprintf 0050  
           __psmallconst 0300                  _bitRead 168A                  __pcinit 1542  
                __ramtop 0300          __size_of_setBit 0016            convertToBit@i 0001  
                __ptext0 11AA                  __ptext1 161A                  __ptext2 140C  
                __ptext3 0B72                  __ptext4 0890                  __ptext5 10E4  
                __ptext6 1578                  __ptext7 14BE                  __ptext8 1252  
                __ptext9 1724          __size_of_printf 0026          __size_of_strlen 0036  
                _readBit 1640             __size_of_abs 0040             __size_of_pad 00C6  
             ??_bitClear 0007                  bitSet@b 0006               _pinToIndex 146E  
                _pinMode 030A                  delay@ms 0001               ??_clearBit 0007  
             ??_bitValue 0001               ??_bitWrite 000C     end_of_initialization 156E  
        pinToIndex@F6037 0088                  fputc@fp 0003            __Lmediumconst 0000  
                fputs@fp 000C           digitalRead@pin 002A                  setBit@b 0006  
                setBit@p 0004        __end_of_vfpfcnvrt 0D26                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 0056            ??_digitalRead 0028  
                strlen@a 0003                  strlen@s 0001    __size_of_convertToBit 0096  
           _convertToBit 12E8              vfpfcnvrt@ap 0044              vfpfcnvrt@fp 0040  
            vfpfcnvrt@ll 0048           __end_of_bitSet 1724           __end_of_setBit 170E  
         __end_of_printf 1640              ?_pinToIndex 0001           __end_of_strlen 15AE  
    start_initialization 1542      __end_of_digitalRead 10E4      digitalRead@port_num 002C  
            __end_of_abs 1542              __end_of_pad 11AA              vfprintf@fmt 0052  
  __end_of_convertToPort 140C                 ??_bitSet 0007              __pdataBANK0 0088  
               ??_setBit 0007                 ??_printf 005C                 ??_strlen 0003  
          __pcstackBANK0 00AC               pinMode@pin 002D         ___aodiv@dividend 0001  
      __size_of_bitClear 0018        __size_of_clearBit 0018        __size_of_bitValue 001E  
      __size_of_bitWrite 0036      __size_of_pinToIndex 0050                 ?___aodiv 0001  
               ?___aomod 0001         ___aodiv@quotient 0013                 ?_bitRead 0001  
            _digitalRead 1012        __size_of_vfprintf 0062              __smallconst 0300  
               ?_readBit 0001                 ?_pinMode 0028                bitClear@b 0006  
         __size_of_delay 0036           __size_of_fputc 0096           __size_of_fputs 0044  
         __size_of_putch 0002             bitSet@number 0004                clearBit@b 0006  
              clearBit@p 0004                bitValue@b 0003                bitWrite@b 000A  
              _vfpfcnvrt 0B72               _ADCON2bits 000FC0                copy_data0 1556  
               __Hrparam 0000               vfprintf@ap 0054                 __Lrparam 0000  
             vfprintf@fp 0050         __size_of___aodiv 0188         __size_of___aomod 0164  
             ?_vfpfcnvrt 0040          ___aodiv@divisor 0009         __size_of_bitRead 0020  
       digitalRead@value 002D          ___aodiv@counter 0011             ??_pinToIndex 0001  
               _bitClear 16E0         __size_of_readBit 0026                 _clearBit 16C8  
               _bitValue 16AA         __size_of_pinMode 0586                 _dtoa$759 002E  
               _bitWrite 15E4                 __ptext10 1502                 __ptext11 0EAE  
               __ptext20 12E8                 __ptext12 0D26                 __ptext21 15AE  
               __ptext13 030A                 __ptext22 15E4                 __ptext14 16F8  
               __ptext23 170E                 __ptext15 16C8                 __ptext24 16E0  
               __ptext16 1012                 __ptext25 16AA                 __ptext17 1640  
               __ptext26 168A                 __ptext18 146E                 __ptext19 137E  
         convertToPort@i 0001            __size_of_main 00A8            __size_of_dtoa 02E2  
               bitRead@b 0001       __end_of_pinToIndex 14BE                 isa$xinst 000000  
               _vfprintf 140C                printf@fmt 0058                 main@argc 00AC  
               main@argv 00AE         ___aomod@dividend 0001                 readBit@b 0003  
               readBit@p 0001              bitWrite@val 000B          digitalRead@port 002B  
               printf@ap 005C          ___aomod@divisor 0009              ??_vfpfcnvrt 0046  
        ___aomod@counter 0011             ?_digitalRead 0001             ___aodiv@sign 0012  
 __size_of_convertToPort 008E             ___aomod@sign 0012  
