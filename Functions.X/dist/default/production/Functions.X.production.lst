

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 08 12:07:55 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,inline
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,inline
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 05/05/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F44K22 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataBANK0
    89  0016D2                     __pidataBANK0:
    90                           	callstack 0
    91                           
    92                           ;initializer for _receive_buffer
    93  0016D2  FF                 	db	255
    94  0016D3  FF                 	db	255
    95  0016D4  FF                 	db	255
    96  0016D5  FF                 	db	255
    97  0016D6  FF                 	db	255
    98  0016D7  FF                 	db	255
    99  0016D8  FF                 	db	255
   100  0016D9  FF                 	db	255
   101  0016DA  FF                 	db	255
   102  0016DB  FF                 	db	255
   103  0016DC  FF                 	db	255
   104  0016DD  FF                 	db	255
   105  0016DE  FF                 	db	255
   106  0016DF  FF                 	db	255
   107  0016E0  FF                 	db	255
   108  0016E1  FF                 	db	255
   109  0016E2  FF                 	db	255
   110  0016E3  FF                 	db	255
   111  0016E4  FF                 	db	255
   112  0016E5  FF                 	db	255
   113  0016E6  FF                 	db	255
   114  0016E7  FF                 	db	255
   115  0016E8  FF                 	db	255
   116  0016E9  FF                 	db	255
   117  0016EA  FF                 	db	255
   118  0016EB  FF                 	db	255
   119  0016EC  FF                 	db	255
   120  0016ED  FF                 	db	255
   121  0016EE  FF                 	db	255
   122  0016EF  FF                 	db	255
   123  0016F0  FF                 	db	255
   124  0016F1  FF                 	db	255
   125  0016F2  FF                 	db	255
   126  0016F3  FF                 	db	255
   127  0016F4  FF                 	db	255
   128  0016F5  FF                 	db	255
   129  0016F6  FF                 	db	255
   130  0016F7  FF                 	db	255
   131  0016F8  FF                 	db	255
   132  0016F9  FF                 	db	255
   133  0016FA  FF                 	db	255
   134  0016FB  FF                 	db	255
   135  0016FC  FF                 	db	255
   136  0016FD  FF                 	db	255
   137  0016FE  FF                 	db	255
   138  0016FF  FF                 	db	255
   139  001700  FF                 	db	255
   140  001701  FF                 	db	255
   141  001702  FF                 	db	255
   142  001703  FF                 	db	255
   143  001704  FF                 	db	255
   144  001705  FF                 	db	255
   145  001706  FF                 	db	255
   146  001707  FF                 	db	255
   147  001708  FF                 	db	255
   148  001709  FF                 	db	255
   149  00170A  FF                 	db	255
   150  00170B  FF                 	db	255
   151  00170C  FF                 	db	255
   152  00170D  FF                 	db	255
   153  00170E  FF                 	db	255
   154  00170F  FF                 	db	255
   155  001710  FF                 	db	255
   156  001711  FF                 	db	255
   157  001712  00                 	db	0
   158  001713  00                 	db	0
   159  001714  00                 	db	0
   160                           
   161                           	psect	idataBANK1
   162  00150E                     __pidataBANK1:
   163                           	callstack 0
   164                           
   165                           ;initializer for pinToIndex@F6050
   166  00150E  02                 	db	2
   167  00150F  03                 	db	3
   168  001510  04                 	db	4
   169  001511  05                 	db	5
   170  001512  06                 	db	6
   171  001513  07                 	db	7
   172  001514  0E                 	db	14
   173  001515  0D                 	db	13
   174  001516  21                 	db	33
   175  001517  22                 	db	34
   176  001518  23                 	db	35
   177  001519  24                 	db	36
   178  00151A  25                 	db	37
   179  00151B  26                 	db	38
   180  00151C  27                 	db	39
   181  00151D  28                 	db	40
   182  00151E  0F                 	db	15
   183  00151F  10                 	db	16
   184  001520  11                 	db	17
   185  001521  12                 	db	18
   186  001522  17                 	db	23
   187  001523  18                 	db	24
   188  001524  19                 	db	25
   189  001525  1A                 	db	26
   190  001526  13                 	db	19
   191  001527  14                 	db	20
   192  001528  15                 	db	21
   193  001529  16                 	db	22
   194  00152A  1B                 	db	27
   195  00152B  1C                 	db	28
   196  00152C  1D                 	db	29
   197  00152D  1E                 	db	30
   198  00152E  08                 	db	8
   199  00152F  09                 	db	9
   200  001530  0A                 	db	10
   201  001531  01                 	db	1
   202                           
   203                           ;initializer for _transmit_buffer
   204  001532  FF                 	db	255
   205  001533  FF                 	db	255
   206  001534  FF                 	db	255
   207  001535  FF                 	db	255
   208  001536  FF                 	db	255
   209  001537  FF                 	db	255
   210  001538  FF                 	db	255
   211  001539  FF                 	db	255
   212  00153A  FF                 	db	255
   213  00153B  FF                 	db	255
   214  00153C  FF                 	db	255
   215  00153D  FF                 	db	255
   216  00153E  FF                 	db	255
   217  00153F  FF                 	db	255
   218  001540  FF                 	db	255
   219  001541  FF                 	db	255
   220  001542  FF                 	db	255
   221  001543  FF                 	db	255
   222  001544  FF                 	db	255
   223  001545  FF                 	db	255
   224  001546  FF                 	db	255
   225  001547  FF                 	db	255
   226  001548  FF                 	db	255
   227  001549  FF                 	db	255
   228  00154A  FF                 	db	255
   229  00154B  FF                 	db	255
   230  00154C  FF                 	db	255
   231  00154D  FF                 	db	255
   232  00154E  FF                 	db	255
   233  00154F  FF                 	db	255
   234  001550  FF                 	db	255
   235  001551  FF                 	db	255
   236  001552  FF                 	db	255
   237  001553  FF                 	db	255
   238  001554  FF                 	db	255
   239  001555  FF                 	db	255
   240  001556  FF                 	db	255
   241  001557  FF                 	db	255
   242  001558  FF                 	db	255
   243  001559  FF                 	db	255
   244  00155A  FF                 	db	255
   245  00155B  FF                 	db	255
   246  00155C  FF                 	db	255
   247  00155D  FF                 	db	255
   248  00155E  FF                 	db	255
   249  00155F  FF                 	db	255
   250  001560  FF                 	db	255
   251  001561  FF                 	db	255
   252  001562  FF                 	db	255
   253  001563  FF                 	db	255
   254  001564  FF                 	db	255
   255  001565  FF                 	db	255
   256  001566  FF                 	db	255
   257  001567  FF                 	db	255
   258  001568  FF                 	db	255
   259  001569  FF                 	db	255
   260  00156A  FF                 	db	255
   261  00156B  FF                 	db	255
   262  00156C  FF                 	db	255
   263  00156D  FF                 	db	255
   264  00156E  FF                 	db	255
   265  00156F  FF                 	db	255
   266  001570  FF                 	db	255
   267  001571  FF                 	db	255
   268  001572  00                 	db	0
   269  001573  00                 	db	0
   270  001574  00                 	db	0
   271  0000                     _CCPR4L	set	3928
   272  0000                     _CCP4CONbits	set	3927
   273  0000                     _T6CONbits	set	3914
   274  0000                     _PR6	set	3915
   275  0000                     _T4CONbits	set	3921
   276  0000                     _CCPR5L	set	3925
   277  0000                     _CCP5CONbits	set	3924
   278  0000                     _PR4	set	3922
   279  0000                     _CCPTMRS1bits	set	3912
   280  0000                     _CCPR3L	set	3934
   281  0000                     _CCP3CONbits	set	3933
   282  0000                     _CCPTMRS0bits	set	3913
   283  0000                     _ANSELE	set	3900
   284  0000                     _ANSELD	set	3899
   285  0000                     _ANSELC	set	3898
   286  0000                     _ANSELB	set	3897
   287  0000                     _ANSELA	set	3896
   288  0000                     _EECON2	set	4007
   289  0000                     _EEDATA	set	4008
   290  0000                     _EECON1bits	set	4006
   291  0000                     _EEADR	set	4009
   292  0000                     _INTCONbits	set	4082
   293  0000                     _RCONbits	set	4048
   294  0000                     _RCSTA1bits	set	4011
   295  0000                     _TXSTA1bits	set	4012
   296  0000                     _BAUDCON1bits	set	4024
   297  0000                     _SPBRG	set	4015
   298  0000                     _RCREG1	set	4014
   299  0000                     _TXREG1	set	4013
   300  0000                     _PIE1bits	set	3997
   301  0000                     _CCPR1L	set	4030
   302  0000                     _CCP1CONbits	set	4029
   303  0000                     _CCPR2L	set	3943
   304  0000                     _CCP2CONbits	set	3942
   305  0000                     _PIR5bits	set	3966
   306  0000                     _T2CONbits	set	4026
   307  0000                     _PR2	set	4027
   308  0000                     _ADRESH	set	4036
   309  0000                     _ADRESL	set	4035
   310  0000                     _PIR1bits	set	3998
   311  0000                     _ADCON0bits	set	4034
   312  0000                     _ADCON1bits	set	4033
   313  0000                     _ADCON2bits	set	4032
   314  0000                     _PORTE	set	3972
   315  0000                     _PORTD	set	3971
   316  0000                     _PORTC	set	3970
   317  0000                     _PORTB	set	3969
   318  0000                     _PORTA	set	3968
   319  0000                     _LATE	set	3981
   320  0000                     _LATD	set	3980
   321  0000                     _LATC	set	3979
   322  0000                     _LATB	set	3978
   323  0000                     _LATA	set	3977
   324  0000                     _TRISE	set	3990
   325  0000                     _TRISD	set	3989
   326  0000                     _TRISC	set	3988
   327  0000                     _TRISB	set	3987
   328  0000                     _TRISA	set	3986
   329  0000                     _SYNC1	set	32100
   330                           
   331                           	psect	smallconst
   332  000300                     __psmallconst:
   333                           	callstack 0
   334  000300  00                 	db	0
   335  000301                     STR_1:
   336  000301  25                 	db	37
   337  000302  64                 	db	100	;'d'
   338  000303  0A                 	db	10
   339  000304  00                 	db	0
   340  000305                     STR_3:
   341  000305  25                 	db	37
   342  000306  64                 	db	100	;'d'
   343  000307  00                 	db	0
   344  000308  00                 	db	0	; dummy byte at the end
   345  0000                     
   346                           ; #config settings
   347                           
   348                           	psect	cinit
   349  001576                     __pcinit:
   350                           	callstack 0
   351  001576                     start_initialization:
   352                           	callstack 0
   353  001576                     __initialization:
   354                           	callstack 0
   355                           
   356                           ; Initialize objects allocated to BANK1 (103 bytes)
   357                           ; load TBLPTR registers with __pidataBANK1
   358  001576  0E0E               	movlw	low __pidataBANK1
   359  001578  6EF6               	movwf	tblptrl,c
   360  00157A  0E15               	movlw	high __pidataBANK1
   361  00157C  6EF7               	movwf	tblptrh,c
   362  00157E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   363  001580  6EF8               	movwf	tblptru,c
   364  001582  EE01  F000         	lfsr	0,__pdataBANK1
   365  001586  EE10 F067          	lfsr	1,103
   366  00158A                     copy_data0:
   367  00158A  0009               	tblrd		*+
   368  00158C  CFF5 FFEE          	movff	tablat,postinc0
   369  001590  50E5               	movf	postdec1,w,c
   370  001592  50E1               	movf	fsr1l,w,c
   371  001594  E1FA               	bnz	copy_data0
   372                           
   373                           ; Initialize objects allocated to BANK0 (67 bytes)
   374                           ; load TBLPTR registers with __pidataBANK0
   375  001596  0ED2               	movlw	low __pidataBANK0
   376  001598  6EF6               	movwf	tblptrl,c
   377  00159A  0E16               	movlw	high __pidataBANK0
   378  00159C  6EF7               	movwf	tblptrh,c
   379  00159E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   380  0015A0  6EF8               	movwf	tblptru,c
   381  0015A2  EE00  F060         	lfsr	0,__pdataBANK0
   382  0015A6  EE10 F043          	lfsr	1,67
   383  0015AA                     copy_data1:
   384  0015AA  0009               	tblrd		*+
   385  0015AC  CFF5 FFEE          	movff	tablat,postinc0
   386  0015B0  50E5               	movf	postdec1,w,c
   387  0015B2  50E1               	movf	fsr1l,w,c
   388  0015B4  E1FA               	bnz	copy_data1
   389                           
   390                           ; Clear objects allocated to BANK0 (34 bytes)
   391  0015B6  EE00  F0CA         	lfsr	0,__pbssBANK0
   392  0015BA  0E22               	movlw	34
   393  0015BC                     clear_0:
   394  0015BC  6AEE               	clrf	postinc0,c
   395  0015BE  06E8               	decf	wreg,f,c
   396  0015C0  E1FD               	bnz	clear_0
   397                           
   398                           ; Clear objects allocated to COMRAM (6 bytes)
   399  0015C2  6A50               	clrf	(__pbssCOMRAM+5)& (0+255),c
   400  0015C4  6A4F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   401  0015C6  6A4E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   402  0015C8  6A4D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   403  0015CA  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   404  0015CC  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   405  0015CE                     end_of_initialization:
   406                           	callstack 0
   407  0015CE                     __end_of__initialization:
   408                           	callstack 0
   409  0015CE  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   410  0015D0  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   411  0015D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   412  0015D4  6EF8               	movwf	tblptru,c
   413  0015D6  0100               	movlb	0
   414  0015D8  EFD4  F008         	goto	_main	;jump to C main() function
   415                           
   416                           	psect	bssCOMRAM
   417  00004B                     __pbssCOMRAM:
   418                           	callstack 0
   419  00004B                     _width:
   420                           	callstack 0
   421  00004B                     	ds	2
   422  00004D                     _prec:
   423                           	callstack 0
   424  00004D                     	ds	2
   425  00004F                     _flags:
   426                           	callstack 0
   427  00004F                     	ds	2
   428                           
   429                           	psect	bssBANK0
   430  0000CA                     __pbssBANK0:
   431                           	callstack 0
   432  0000CA                     _nout:
   433                           	callstack 0
   434  0000CA                     	ds	2
   435  0000CC                     _dbuf:
   436                           	callstack 0
   437  0000CC                     	ds	32
   438                           
   439                           	psect	dataBANK0
   440  000060                     __pdataBANK0:
   441                           	callstack 0
   442  000060                     _receive_buffer:
   443                           	callstack 0
   444  000060                     	ds	67
   445                           
   446                           	psect	dataBANK1
   447  000100                     __pdataBANK1:
   448                           	callstack 0
   449  000100                     pinToIndex@F6050:
   450                           	callstack 0
   451  000100                     	ds	36
   452  000124                     _transmit_buffer:
   453                           	callstack 0
   454  000124                     	ds	67
   455                           
   456                           	psect	cstackBANK0
   457  0000A3                     __pcstackBANK0:
   458                           	callstack 0
   459  0000A3                     _dtoa$2001:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x0
   463  0000A3                     	ds	2
   464  0000A5                     dtoa@p:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x2
   468  0000A5                     	ds	2
   469  0000A7                     dtoa@w:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x4
   473  0000A7                     	ds	2
   474  0000A9                     dtoa@s:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x6
   478  0000A9                     	ds	2
   479  0000AB                     dtoa@n:
   480                           	callstack 0
   481                           
   482                           ; 8 bytes @ 0x8
   483  0000AB                     	ds	8
   484  0000B3                     dtoa@i:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x10
   488  0000B3                     	ds	2
   489  0000B5                     ?_vfpfcnvrt:
   490                           	callstack 0
   491  0000B5                     vfpfcnvrt@fp:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x12
   495  0000B5                     	ds	2
   496  0000B7                     vfpfcnvrt@fmt:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x14
   500  0000B7                     	ds	2
   501  0000B9                     vfpfcnvrt@ap:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x16
   505  0000B9                     	ds	2
   506  0000BB                     ?_vfprintf:
   507                           	callstack 0
   508  0000BB                     vfprintf@fp:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x18
   512  0000BB                     	ds	2
   513  0000BD                     vfprintf@fmt:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x1A
   517  0000BD                     	ds	2
   518  0000BF                     vfprintf@ap:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x1C
   522  0000BF                     	ds	2
   523  0000C1                     ?_printf:
   524                           	callstack 0
   525  0000C1                     printf@fmt:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x1E
   529  0000C1                     	ds	4
   530  0000C5                     
   531                           ; 2 bytes @ 0x22
   532  0000C5                     	ds	2
   533  0000C7                     
   534                           ; 3 bytes @ 0x24
   535  0000C7                     	ds	3
   536                           
   537                           	psect	cstackCOMRAM
   538  000001                     __pcstackCOMRAM:
   539                           	callstack 0
   540  000001                     bufferStore@buffer:
   541                           	callstack 0
   542  000001                     bufferPeek@buffer:
   543                           	callstack 0
   544  000001                     bufferSize@buffer:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x0
   548  000001                     	ds	2
   549  000003                     ??_bufferPeek:
   550  000003                     bufferStore@byte:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x2
   554  000003                     	ds	1
   555  000004                     ??_bufferStore:
   556  000004                     bufferPeek@byte:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0x3
   560  000004                     	ds	1
   561  000005                     bufferLoad@buffer:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x4
   565  000005                     	ds	2
   566  000007                     ??_bufferLoad:
   567                           
   568                           ; 1 bytes @ 0x6
   569  000007                     	ds	1
   570  000008                     bufferLoad@byte:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x7
   574  000008                     	ds	1
   575  000009                     ??_myIsr:
   576                           
   577                           ; 1 bytes @ 0x8
   578  000009                     	ds	4
   579  00000D                     myIsr@byte:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0xC
   583  00000D                     	ds	1
   584  00000E                     ??_bitValue:
   585  00000E                     ?_strlen:
   586                           	callstack 0
   587  00000E                     ?___aodiv:
   588                           	callstack 0
   589  00000E                     ?___aomod:
   590                           	callstack 0
   591  00000E                     convertToPort@i:
   592                           	callstack 0
   593  00000E                     convertToBit@i:
   594                           	callstack 0
   595  00000E                     bitRead@b:
   596                           	callstack 0
   597  00000E                     readBit@p:
   598                           	callstack 0
   599  00000E                     fputc@c:
   600                           	callstack 0
   601  00000E                     strlen@s:
   602                           	callstack 0
   603  00000E                     delay@ms:
   604                           	callstack 0
   605  00000E                     ___aodiv@dividend:
   606                           	callstack 0
   607  00000E                     ___aomod@dividend:
   608                           	callstack 0
   609                           
   610                           ; 8 bytes @ 0xD
   611  00000E                     	ds	1
   612  00000F                     ??_bitRead:
   613  00000F                     pinToIndex@pins:
   614                           	callstack 0
   615                           
   616                           ; 36 bytes @ 0xE
   617  00000F                     	ds	1
   618  000010                     bitValue@b:
   619                           	callstack 0
   620  000010                     readBit@b:
   621                           	callstack 0
   622  000010                     fputc@fp:
   623                           	callstack 0
   624  000010                     strlen@a:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0xF
   628  000010                     	ds	1
   629  000011                     ??_readBit:
   630  000011                     bitRead@number:
   631                           	callstack 0
   632  000011                     bitClear@number:
   633                           	callstack 0
   634  000011                     bitSet@number:
   635                           	callstack 0
   636  000011                     setBit@p:
   637                           	callstack 0
   638  000011                     clearBit@p:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x10
   642  000011                     	ds	1
   643  000012                     ??_fputc:
   644  000012                     ??_delay:
   645                           
   646                           ; 1 bytes @ 0x11
   647  000012                     	ds	1
   648  000013                     bitClear@b:
   649                           	callstack 0
   650  000013                     bitSet@b:
   651                           	callstack 0
   652  000013                     setBit@b:
   653                           	callstack 0
   654  000013                     clearBit@b:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x12
   658  000013                     	ds	1
   659  000014                     ??_setBit:
   660  000014                     ??_clearBit:
   661  000014                     ??_bitClear:
   662  000014                     ??_bitSet:
   663                           
   664                           ; 1 bytes @ 0x13
   665  000014                     	ds	1
   666  000015                     bitWrite@number:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x14
   670  000015                     	ds	1
   671  000016                     ___aodiv@divisor:
   672                           	callstack 0
   673  000016                     ___aomod@divisor:
   674                           	callstack 0
   675                           
   676                           ; 8 bytes @ 0x15
   677  000016                     	ds	1
   678  000017                     bitWrite@b:
   679                           	callstack 0
   680  000017                     fputs@s:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x16
   684  000017                     	ds	1
   685  000018                     bitWrite@val:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0x17
   689  000018                     	ds	1
   690  000019                     fputs@fp:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x18
   694  000019                     	ds	2
   695  00001B                     fputs@c:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x1A
   699  00001B                     	ds	1
   700  00001C                     fputs@i:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x1B
   704  00001C                     	ds	2
   705  00001E                     ?_pad:
   706                           	callstack 0
   707  00001E                     ___aodiv@counter:
   708                           	callstack 0
   709  00001E                     ___aomod@counter:
   710                           	callstack 0
   711  00001E                     pad@fp:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x1D
   715  00001E                     	ds	1
   716  00001F                     ___aodiv@sign:
   717                           	callstack 0
   718  00001F                     ___aomod@sign:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x1E
   722  00001F                     	ds	1
   723  000020                     ?_abs:
   724                           	callstack 0
   725  000020                     abs@a:
   726                           	callstack 0
   727  000020                     pad@buf:
   728                           	callstack 0
   729  000020                     ___aodiv@quotient:
   730                           	callstack 0
   731                           
   732                           ; 8 bytes @ 0x1F
   733  000020                     	ds	2
   734  000022                     ??_abs:
   735  000022                     pad@p:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x21
   739  000022                     	ds	2
   740  000024                     ??_pad:
   741                           
   742                           ; 1 bytes @ 0x23
   743  000024                     	ds	1
   744  000025                     pad@i:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x24
   748  000025                     	ds	2
   749  000027                     pad@w:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x26
   753  000027                     	ds	2
   754  000029                     ?_dtoa:
   755                           	callstack 0
   756  000029                     dtoa@fp:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x28
   760  000029                     	ds	2
   761  00002B                     dtoa@d:
   762                           	callstack 0
   763                           
   764                           ; 8 bytes @ 0x2A
   765  00002B                     	ds	8
   766  000033                     ??_dtoa:
   767  000033                     pinToIndex@pin:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x32
   771  000033                     	ds	1
   772  000034                     pinToIndex@i:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x33
   776  000034                     	ds	1
   777  000035                     ??_digitalRead:
   778  000035                     pinMode@mode:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x34
   782  000035                     	ds	1
   783  000036                     ??_pinMode:
   784                           
   785                           ; 1 bytes @ 0x35
   786  000036                     	ds	1
   787  000037                     digitalRead@pin:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x36
   791  000037                     	ds	1
   792  000038                     pinMode@port_num:
   793                           	callstack 0
   794  000038                     digitalRead@port:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x37
   798  000038                     	ds	1
   799  000039                     pinMode@port:
   800                           	callstack 0
   801  000039                     digitalRead@port_num:
   802                           	callstack 0
   803                           
   804                           ; 1 bytes @ 0x38
   805  000039                     	ds	1
   806  00003A                     pinMode@pin:
   807                           	callstack 0
   808  00003A                     digitalRead@value:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0x39
   812  00003A                     	ds	1
   813  00003B                     ??_vfpfcnvrt:
   814  00003B                     pinMode@bit_val:
   815                           	callstack 0
   816  00003B                     digitalRead@bit_val:
   817                           	callstack 0
   818                           
   819                           ; 1 bytes @ 0x3A
   820  00003B                     	ds	2
   821  00003D                     vfpfcnvrt@ll:
   822                           	callstack 0
   823                           
   824                           ; 8 bytes @ 0x3C
   825  00003D                     	ds	8
   826  000045                     vfprintf@cfmt:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x44
   830  000045                     	ds	2
   831  000047                     printf@ap:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x46
   835  000047                     	ds	2
   836  000049                     ??_main:
   837                           
   838                           ; 1 bytes @ 0x48
   839  000049                     	ds	1
   840  00004A                     main@a:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x49
   844  00004A                     	ds	1
   845                           
   846 ;;
   847 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   848 ;;
   849 ;; *************** function _main *****************
   850 ;; Defined at:
   851 ;;		line 28 in file "main.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;  argc            2   34[BANK0 ] int 
   854 ;;  argv            3   36[BANK0 ] PTR PTR unsigned char 
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  a               1   73[COMRAM] unsigned char 
   857 ;; Return value:  Size  Location     Type
   858 ;;                  2   34[BANK0 ] int 
   859 ;; Registers used:
   860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   866 ;;      Params:         0       5       0       0
   867 ;;      Locals:         1       0       0       0
   868 ;;      Temps:          1       0       0       0
   869 ;;      Totals:         2       5       0       0
   870 ;;Total ram usage:        7 bytes
   871 ;; Hardware stack levels required when called: 11
   872 ;; This function calls:
   873 ;;		_bitRead
   874 ;;		_bitValue
   875 ;;		_bitWrite
   876 ;;		_delay
   877 ;;		_digitalRead
   878 ;;		_pinMode
   879 ;;		_printf
   880 ;; This function is called by:
   881 ;;		Startup code after reset
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text0
   886  0011A8                     __ptext0:
   887                           	callstack 0
   888  0011A8                     _main:
   889                           	callstack 20
   890  0011A8                     
   891                           ;main.c: 30:     printf("%d\n", bitValue(5));
   892  0011A8  0E01               	movlw	low STR_1
   893  0011AA  0100               	movlb	0	; () banked
   894  0011AC  6FC1               	movwf	printf@fmt& (0+255),b
   895  0011AE  0E03               	movlw	high STR_1
   896  0011B0  6FC2               	movwf	(printf@fmt+1)& (0+255),b
   897  0011B2  0E05               	movlw	5
   898  0011B4  EC45  F00C         	call	_bitValue
   899  0011B8  6E49               	movwf	??_main^0,c
   900  0011BA  5049               	movf	??_main^0,w,c
   901  0011BC  0100               	movlb	0	; () banked
   902  0011BE  6FC3               	movwf	(?_printf+2)& (0+255),b
   903  0011C0  6BC4               	clrf	(?_printf+3)& (0+255),b
   904  0011C2  ECFC  F00B         	call	_printf	;wreg free
   905  0011C6                     
   906                           ;main.c: 31:     uint8_t a = 14;
   907  0011C6  0E0E               	movlw	14
   908  0011C8  6E4A               	movwf	main@a^0,c
   909  0011CA                     
   910                           ;main.c: 32:     bitWrite(&a, 0, 1);
   911  0011CA  0E4A               	movlw	low main@a
   912  0011CC  6E15               	movwf	bitWrite@number^0,c
   913  0011CE  0E00               	movlw	high main@a
   914  0011D0  6E16               	movwf	(bitWrite@number+1)^0,c
   915  0011D2  0E00               	movlw	0
   916  0011D4  6E17               	movwf	bitWrite@b^0,c
   917  0011D6  0E01               	movlw	1
   918  0011D8  6E18               	movwf	bitWrite@val^0,c
   919  0011DA  ECE1  F00B         	call	_bitWrite	;wreg free
   920  0011DE                     
   921                           ;main.c: 33:     printf("%d\n", a);
   922  0011DE  0E01               	movlw	low STR_1
   923  0011E0  0100               	movlb	0	; () banked
   924  0011E2  6FC1               	movwf	printf@fmt& (0+255),b
   925  0011E4  0E03               	movlw	high STR_1
   926  0011E6  6FC2               	movwf	(printf@fmt+1)& (0+255),b
   927  0011E8  C04A  F0C3         	movff	main@a,?_printf+2
   928  0011EC  6BC4               	clrf	(?_printf+3)& (0+255),b
   929  0011EE  ECFC  F00B         	call	_printf	;wreg free
   930  0011F2                     
   931                           ;main.c: 34:     printf("%d", bitRead(8, 3));
   932  0011F2  0E05               	movlw	low STR_3
   933  0011F4  0100               	movlb	0	; () banked
   934  0011F6  6FC1               	movwf	printf@fmt& (0+255),b
   935  0011F8  0E03               	movlw	high STR_3
   936  0011FA  6FC2               	movwf	(printf@fmt+1)& (0+255),b
   937  0011FC  0E03               	movlw	3
   938  0011FE  6E0E               	movwf	bitRead@b^0,c
   939  001200  0E08               	movlw	8
   940  001202  EC35  F00C         	call	_bitRead
   941  001206  6E49               	movwf	??_main^0,c
   942  001208  5049               	movf	??_main^0,w,c
   943  00120A  0100               	movlb	0	; () banked
   944  00120C  6FC3               	movwf	(?_printf+2)& (0+255),b
   945  00120E  6BC4               	clrf	(?_printf+3)& (0+255),b
   946  001210  ECFC  F00B         	call	_printf	;wreg free
   947  001214                     
   948                           ;main.c: 36:     pinMode(33, OUTPUT);
   949  001214  0E03               	movlw	3
   950  001216  6E35               	movwf	pinMode@mode^0,c
   951  001218  0E21               	movlw	33
   952  00121A  EC85  F001         	call	_pinMode
   953  00121E                     
   954                           ;main.c: 37:     pinMode(15, INPUT);
   955  00121E  0E01               	movlw	1
   956  001220  6E35               	movwf	pinMode@mode^0,c
   957  001222  0E0F               	movlw	15
   958  001224  EC85  F001         	call	_pinMode
   959  001228                     
   960                           ;main.c: 38:     printf("%d", digitalRead(18));
   961  001228  0E05               	movlw	low STR_3
   962  00122A  0100               	movlb	0	; () banked
   963  00122C  6FC1               	movwf	printf@fmt& (0+255),b
   964  00122E  0E03               	movlw	high STR_3
   965  001230  6FC2               	movwf	(printf@fmt+1)& (0+255),b
   966  001232  0E12               	movlw	18
   967  001234  EC0A  F008         	call	_digitalRead
   968  001238  6E49               	movwf	??_main^0,c
   969  00123A  5049               	movf	??_main^0,w,c
   970  00123C  0100               	movlb	0	; () banked
   971  00123E  6FC3               	movwf	(?_printf+2)& (0+255),b
   972  001240  6BC4               	clrf	(?_printf+3)& (0+255),b
   973  001242  ECFC  F00B         	call	_printf	;wreg free
   974  001246                     
   975                           ;main.c: 39:     delay(300);
   976  001246  0E2C               	movlw	44
   977  001248  6E0E               	movwf	delay@ms^0,c
   978  00124A  0E01               	movlw	1
   979  00124C  6E0F               	movwf	(delay@ms+1)^0,c
   980  00124E  0E00               	movlw	0
   981  001250  6E10               	movwf	(delay@ms+2)^0,c
   982  001252  0E00               	movlw	0
   983  001254  6E11               	movwf	(delay@ms+3)^0,c
   984  001256  ECC6  F00B         	call	_delay	;wreg free
   985  00125A  EF54  F000         	goto	start
   986  00125E                     __end_of_main:
   987                           	callstack 0
   988                           
   989 ;; *************** function _printf *****************
   990 ;; Defined at:
   991 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  fmt             2   30[BANK0 ] PTR const unsigned char 
   994 ;;		 -> STR_4(3), STR_3(3), STR_2(4), STR_1(4), 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  ap              2   70[COMRAM] PTR void [1]
   997 ;;		 -> ?_printf(2), 
   998 ;;  ret             2    0        int 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  2   30[BANK0 ] int 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1008 ;;      Params:         0       4       0       0
  1009 ;;      Locals:         2       0       0       0
  1010 ;;      Temps:          0       0       0       0
  1011 ;;      Totals:         2       4       0       0
  1012 ;;Total ram usage:        6 bytes
  1013 ;; Hardware stack levels used: 1
  1014 ;; Hardware stack levels required when called: 10
  1015 ;; This function calls:
  1016 ;;		_vfprintf
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text1
  1023  0017F8                     __ptext1:
  1024                           	callstack 0
  1025  0017F8                     _printf:
  1026                           	callstack 20
  1027  0017F8  0EC3               	movlw	low (?_printf+2)
  1028  0017FA  6E47               	movwf	printf@ap^0,c
  1029  0017FC  0E00               	movlw	high (?_printf+2)
  1030  0017FE  6E48               	movwf	(printf@ap+1)^0,c
  1031  001800  0E00               	movlw	0
  1032  001802  0100               	movlb	0	; () banked
  1033  001804  6FBB               	movwf	vfprintf@fp& (0+255),b
  1034  001806  0E00               	movlw	0
  1035  001808  6FBC               	movwf	(vfprintf@fp+1)& (0+255),b
  1036  00180A  C0C1  F0BD         	movff	printf@fmt,vfprintf@fmt
  1037  00180E  C0C2  F0BE         	movff	printf@fmt+1,vfprintf@fmt+1
  1038  001812  0E47               	movlw	low printf@ap
  1039  001814  6FBF               	movwf	vfprintf@ap& (0+255),b
  1040  001816  0E00               	movlw	high printf@ap
  1041  001818  6FC0               	movwf	(vfprintf@ap+1)& (0+255),b
  1042  00181A  ECEE  F00A         	call	_vfprintf	;wreg free
  1043  00181E  0012               	return		;funcret
  1044  001820                     __end_of_printf:
  1045                           	callstack 0
  1046                           
  1047 ;; *************** function _vfprintf *****************
  1048 ;; Defined at:
  1049 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  fp              2   24[BANK0 ] PTR struct _IO_FILE
  1052 ;;		 -> NULL(0), 
  1053 ;;  fmt             2   26[BANK0 ] PTR const unsigned char 
  1054 ;;		 -> STR_4(3), STR_3(3), STR_2(4), STR_1(4), 
  1055 ;;  ap              2   28[BANK0 ] PTR PTR void 
  1056 ;;		 -> printf@ap(2), 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  cfmt            2   68[COMRAM] PTR unsigned char 
  1059 ;;		 -> STR_4(3), STR_3(3), STR_2(4), STR_1(4), 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  2   24[BANK0 ] int 
  1062 ;; Registers used:
  1063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1069 ;;      Params:         0       6       0       0
  1070 ;;      Locals:         2       0       0       0
  1071 ;;      Temps:          0       0       0       0
  1072 ;;      Totals:         2       6       0       0
  1073 ;;Total ram usage:        8 bytes
  1074 ;; Hardware stack levels used: 1
  1075 ;; Hardware stack levels required when called: 9
  1076 ;; This function calls:
  1077 ;;		_vfpfcnvrt
  1078 ;; This function is called by:
  1079 ;;		_printf
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	text2
  1084  0015DC                     __ptext2:
  1085                           	callstack 0
  1086  0015DC                     _vfprintf:
  1087                           	callstack 20
  1088  0015DC                     
  1089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1090  0015DC  C0BD  F045         	movff	vfprintf@fmt,vfprintf@cfmt
  1091  0015E0  C0BE  F046         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1092  0015E4                     
  1093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1094  0015E4  0E00               	movlw	0
  1095  0015E6  0100               	movlb	0	; () banked
  1096  0015E8  6FCB               	movwf	(_nout+1)& (0+255),b
  1097  0015EA  0E00               	movlw	0
  1098  0015EC  6FCA               	movwf	_nout& (0+255),b
  1099                           
  1100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1101  0015EE  EF0C  F00B         	goto	l4654
  1102  0015F2                     l4652:
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1106  0015F2  C0BB  F0B5         	movff	vfprintf@fp,vfpfcnvrt@fp
  1107  0015F6  C0BC  F0B6         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1108  0015FA  0E45               	movlw	low vfprintf@cfmt
  1109  0015FC  6FB7               	movwf	vfpfcnvrt@fmt& (0+255),b
  1110  0015FE  0E00               	movlw	high vfprintf@cfmt
  1111  001600  6FB8               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1112  001602  C0BF  F0B9         	movff	vfprintf@ap,vfpfcnvrt@ap
  1113  001606  C0C0  F0BA         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1114  00160A  ECB9  F005         	call	_vfpfcnvrt	;wreg free
  1115  00160E  0100               	movlb	0	; () banked
  1116  001610  51B5               	movf	?_vfpfcnvrt& (0+255),w,b
  1117  001612  27CA               	addwf	_nout& (0+255),f,b
  1118  001614  51B6               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1119  001616  23CB               	addwfc	(_nout+1)& (0+255),f,b
  1120  001618                     l4654:
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1124  001618  C045  FFF6         	movff	vfprintf@cfmt,tblptrl
  1125  00161C  C046  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1126  001620                     	if	0	;tblptru may be non-zero
  1127  001620                     	endif
  1128  001620                     	if	0	;tblptru may be non-zero
  1129  001620                     	endif
  1130  001620  0008               	tblrd		*
  1131  001622  50F5               	movf	tablat,w,c
  1132  001624  0900               	iorlw	0
  1133  001626  A4D8               	btfss	status,2,c
  1134  001628  EF18  F00B         	goto	u4031
  1135  00162C  EF1A  F00B         	goto	u4030
  1136  001630                     u4031:
  1137  001630  EFF9  F00A         	goto	l4652
  1138  001634                     u4030:
  1139  001634                     
  1140                           ; BSR set to: 0
  1141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1142  001634  C0CA  F0BB         	movff	_nout,?_vfprintf
  1143  001638  C0CB  F0BC         	movff	_nout+1,?_vfprintf+1
  1144  00163C                     
  1145                           ; BSR set to: 0
  1146  00163C  0012               	return		;funcret
  1147  00163E                     __end_of_vfprintf:
  1148                           	callstack 0
  1149                           
  1150 ;; *************** function _vfpfcnvrt *****************
  1151 ;; Defined at:
  1152 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  1155 ;;		 -> NULL(0), 
  1156 ;;  fmt             2   20[BANK0 ] PTR PTR unsigned char 
  1157 ;;		 -> vfprintf@cfmt(2), 
  1158 ;;  ap              2   22[BANK0 ] PTR PTR void 
  1159 ;;		 -> printf@ap(2), 
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;  ll              8   60[COMRAM] long long 
  1162 ;;  llu             8    0        unsigned long long 
  1163 ;;  f               4    0        unsigned long long 
  1164 ;;  vp              3    0        PTR void 
  1165 ;;  ct              3    0        unsigned char [3]
  1166 ;;  cp              3    0        PTR unsigned char 
  1167 ;;  i               2    0        int 
  1168 ;;  done            2    0        int 
  1169 ;;  c               1    0        unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  2   18[BANK0 ] int 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1179 ;;      Params:         0       6       0       0
  1180 ;;      Locals:         8       0       0       0
  1181 ;;      Temps:          2       0       0       0
  1182 ;;      Totals:        10       6       0       0
  1183 ;;Total ram usage:       16 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 8
  1186 ;; This function calls:
  1187 ;;		_dtoa
  1188 ;;		_fputc
  1189 ;; This function is called by:
  1190 ;;		_vfprintf
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text3
  1195  000B72                     __ptext3:
  1196                           	callstack 0
  1197  000B72                     _vfpfcnvrt:
  1198                           	callstack 20
  1199  000B72                     
  1200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1201  000B72  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1202  000B76  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1203  000B7A  CFDE FFF6          	movff	postinc2,tblptrl
  1204  000B7E  CFDD FFF7          	movff	postdec2,tblptrh
  1205  000B82                     	if	0	;tblptru may be non-zero
  1206  000B82                     	endif
  1207  000B82                     	if	0	;tblptru may be non-zero
  1208  000B82                     	endif
  1209  000B82  0008               	tblrd		*
  1210  000B84  50F5               	movf	tablat,w,c
  1211  000B86  0A25               	xorlw	37
  1212  000B88  A4D8               	btfss	status,2,c
  1213  000B8A  EFC9  F005         	goto	u3711
  1214  000B8E  EFCB  F005         	goto	u3710
  1215  000B92                     u3711:
  1216  000B92  EF78  F006         	goto	l4500
  1217  000B96                     u3710:
  1218  000B96                     
  1219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1220  000B96  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1221  000B9A  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1222  000B9E  2ADE               	incf	postinc2,f,c
  1223  000BA0  0E00               	movlw	0
  1224  000BA2  22DD               	addwfc	postdec2,f,c
  1225  000BA4                     
  1226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1227  000BA4  0E00               	movlw	0
  1228  000BA6  6E4C               	movwf	(_width+1)^0,c
  1229  000BA8  0E00               	movlw	0
  1230  000BAA  6E4B               	movwf	_width^0,c
  1231  000BAC  C04B  F04F         	movff	_width,_flags
  1232  000BB0  C04C  F050         	movff	_width+1,_flags+1
  1233  000BB4                     
  1234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1235  000BB4  684D               	setf	_prec^0,c
  1236  000BB6  684E               	setf	(_prec+1)^0,c
  1237  000BB8                     
  1238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1239  000BB8  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1240  000BBC  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1241  000BC0  CFDE FFF6          	movff	postinc2,tblptrl
  1242  000BC4  CFDD FFF7          	movff	postdec2,tblptrh
  1243  000BC8                     	if	0	;tblptru may be non-zero
  1244  000BC8                     	endif
  1245  000BC8                     	if	0	;tblptru may be non-zero
  1246  000BC8                     	endif
  1247  000BC8  0008               	tblrd		*
  1248  000BCA  50F5               	movf	tablat,w,c
  1249  000BCC  0A64               	xorlw	100
  1250  000BCE  B4D8               	btfsc	status,2,c
  1251  000BD0  EFEC  F005         	goto	u3721
  1252  000BD4  EFEE  F005         	goto	u3720
  1253  000BD8                     u3721:
  1254  000BD8  EF00  F006         	goto	l4478
  1255  000BDC                     u3720:
  1256  000BDC  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1257  000BE0  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1258  000BE4  CFDE FFF6          	movff	postinc2,tblptrl
  1259  000BE8  CFDD FFF7          	movff	postdec2,tblptrh
  1260  000BEC                     	if	0	;tblptru may be non-zero
  1261  000BEC                     	endif
  1262  000BEC                     	if	0	;tblptru may be non-zero
  1263  000BEC                     	endif
  1264  000BEC  0008               	tblrd		*
  1265  000BEE  50F5               	movf	tablat,w,c
  1266  000BF0  0A69               	xorlw	105
  1267  000BF2  A4D8               	btfss	status,2,c
  1268  000BF4  EFFE  F005         	goto	u3731
  1269  000BF8  EF00  F006         	goto	u3730
  1270  000BFC                     u3731:
  1271  000BFC  EF40  F006         	goto	l4484
  1272  000C00                     u3730:
  1273  000C00                     l4478:
  1274                           
  1275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1276  000C00  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1277  000C04  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1278  000C08  2ADE               	incf	postinc2,f,c
  1279  000C0A  0E00               	movlw	0
  1280  000C0C  22DD               	addwfc	postdec2,f,c
  1281                           
  1282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1283  000C0E  C0B9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1284  000C12  C0BA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1285  000C16  CFDF F03B          	movff	indf2,??_vfpfcnvrt
  1286  000C1A  0E02               	movlw	2
  1287  000C1C  26DE               	addwf	postinc2,f,c
  1288  000C1E  CFDF F03C          	movff	indf2,??_vfpfcnvrt+1
  1289  000C22  0E00               	movlw	0
  1290  000C24  22DD               	addwfc	postdec2,f,c
  1291  000C26  C03B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1292  000C2A  C03C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1293  000C2E  CFDE F03D          	movff	postinc2,vfpfcnvrt@ll
  1294  000C32  CFDD F03E          	movff	postdec2,vfpfcnvrt@ll+1
  1295  000C36  0E00               	movlw	0
  1296  000C38  BE3E               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1297  000C3A  0EFF               	movlw	-1
  1298  000C3C  6E3F               	movwf	(vfpfcnvrt@ll+2)^0,c
  1299  000C3E  6E40               	movwf	(vfpfcnvrt@ll+3)^0,c
  1300  000C40  6E41               	movwf	(vfpfcnvrt@ll+4)^0,c
  1301  000C42  6E42               	movwf	(vfpfcnvrt@ll+5)^0,c
  1302  000C44  6E43               	movwf	(vfpfcnvrt@ll+6)^0,c
  1303  000C46  6E44               	movwf	(vfpfcnvrt@ll+7)^0,c
  1304  000C48                     
  1305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1306  000C48  C0B5  F029         	movff	vfpfcnvrt@fp,dtoa@fp
  1307  000C4C  C0B6  F02A         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1308  000C50  C03D  F02B         	movff	vfpfcnvrt@ll,dtoa@d
  1309  000C54  C03E  F02C         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1310  000C58  C03F  F02D         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1311  000C5C  C040  F02E         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1312  000C60  C041  F02F         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1313  000C64  C042  F030         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1314  000C68  C043  F031         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1315  000C6C  C044  F032         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1316  000C70  EC48  F004         	call	_dtoa	;wreg free
  1317  000C74  C029  F0B5         	movff	?_dtoa,?_vfpfcnvrt
  1318  000C78  C02A  F0B6         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1319  000C7C  EF93  F006         	goto	l1392
  1320  000C80                     l4484:
  1321                           
  1322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1323  000C80  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1324  000C84  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1325  000C88  CFDE FFF6          	movff	postinc2,tblptrl
  1326  000C8C  CFDD FFF7          	movff	postdec2,tblptrh
  1327  000C90                     	if	0	;tblptru may be non-zero
  1328  000C90                     	endif
  1329  000C90                     	if	0	;tblptru may be non-zero
  1330  000C90                     	endif
  1331  000C90  0008               	tblrd		*
  1332  000C92  50F5               	movf	tablat,w,c
  1333  000C94  0A25               	xorlw	37
  1334  000C96  A4D8               	btfss	status,2,c
  1335  000C98  EF50  F006         	goto	u3741
  1336  000C9C  EF52  F006         	goto	u3740
  1337  000CA0                     u3741:
  1338  000CA0  EF6A  F006         	goto	l4494
  1339  000CA4                     u3740:
  1340  000CA4                     
  1341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1342  000CA4  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1343  000CA8  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1344  000CAC  2ADE               	incf	postinc2,f,c
  1345  000CAE  0E00               	movlw	0
  1346  000CB0  22DD               	addwfc	postdec2,f,c
  1347  000CB2                     
  1348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1349  000CB2  0E00               	movlw	0
  1350  000CB4  6E0F               	movwf	(fputc@c+1)^0,c
  1351  000CB6  0E25               	movlw	37
  1352  000CB8  6E0E               	movwf	fputc@c^0,c
  1353  000CBA  C0B5  F010         	movff	vfpfcnvrt@fp,fputc@fp
  1354  000CBE  C0B6  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1355  000CC2  EC2F  F009         	call	_fputc	;wreg free
  1356  000CC6                     l4490:
  1357                           
  1358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1359  000CC6  0E00               	movlw	0
  1360  000CC8  0100               	movlb	0	; () banked
  1361  000CCA  6FB6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1362  000CCC  0E01               	movlw	1
  1363  000CCE  6FB5               	movwf	?_vfpfcnvrt& (0+255),b
  1364  000CD0  EF93  F006         	goto	l1392
  1365  000CD4                     l4494:
  1366                           
  1367                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1368  000CD4  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1369  000CD8  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1370  000CDC  2ADE               	incf	postinc2,f,c
  1371  000CDE  0E00               	movlw	0
  1372  000CE0  22DD               	addwfc	postdec2,f,c
  1373  000CE2                     
  1374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1375  000CE2  0E00               	movlw	0
  1376  000CE4  0100               	movlb	0	; () banked
  1377  000CE6  6FB6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1378  000CE8  0E00               	movlw	0
  1379  000CEA  6FB5               	movwf	?_vfpfcnvrt& (0+255),b
  1380  000CEC  EF93  F006         	goto	l1392
  1381  000CF0                     l4500:
  1382                           
  1383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1384  000CF0  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1385  000CF4  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1386  000CF8  CFDE FFF6          	movff	postinc2,tblptrl
  1387  000CFC  CFDD FFF7          	movff	postdec2,tblptrh
  1388  000D00                     	if	0	;tblptru may be non-zero
  1389  000D00                     	endif
  1390  000D00                     	if	0	;tblptru may be non-zero
  1391  000D00                     	endif
  1392  000D00  0008               	tblrd		*
  1393  000D02  50F5               	movf	tablat,w,c
  1394  000D04  6E0E               	movwf	fputc@c^0,c
  1395  000D06  6A0F               	clrf	(fputc@c+1)^0,c
  1396  000D08  C0B5  F010         	movff	vfpfcnvrt@fp,fputc@fp
  1397  000D0C  C0B6  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1398  000D10  EC2F  F009         	call	_fputc	;wreg free
  1399  000D14                     
  1400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1401  000D14  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1402  000D18  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1403  000D1C  2ADE               	incf	postinc2,f,c
  1404  000D1E  0E00               	movlw	0
  1405  000D20  22DD               	addwfc	postdec2,f,c
  1406  000D22  EF63  F006         	goto	l4490
  1407  000D26                     l1392:
  1408  000D26  0012               	return		;funcret
  1409  000D28                     __end_of_vfpfcnvrt:
  1410                           	callstack 0
  1411                           
  1412 ;; *************** function _dtoa *****************
  1413 ;; Defined at:
  1414 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  1417 ;;		 -> NULL(0), 
  1418 ;;  d               8   42[COMRAM] long long 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  n               8    8[BANK0 ] long long 
  1421 ;;  i               2   16[BANK0 ] int 
  1422 ;;  s               2    6[BANK0 ] int 
  1423 ;;  w               2    4[BANK0 ] int 
  1424 ;;  p               2    2[BANK0 ] int 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  2   40[COMRAM] int 
  1427 ;; Registers used:
  1428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1434 ;;      Params:        10       0       0       0
  1435 ;;      Locals:         0      18       0       0
  1436 ;;      Temps:          8       0       0       0
  1437 ;;      Totals:        18      18       0       0
  1438 ;;Total ram usage:       36 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; Hardware stack levels required when called: 7
  1441 ;; This function calls:
  1442 ;;		___aodiv
  1443 ;;		___aomod
  1444 ;;		_abs
  1445 ;;		_pad
  1446 ;; This function is called by:
  1447 ;;		_vfpfcnvrt
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text4
  1452  000890                     __ptext4:
  1453                           	callstack 0
  1454  000890                     _dtoa:
  1455                           	callstack 20
  1456  000890                     
  1457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1458  000890  C02B  F0AB         	movff	dtoa@d,dtoa@n
  1459  000894  C02C  F0AC         	movff	dtoa@d+1,dtoa@n+1
  1460  000898  C02D  F0AD         	movff	dtoa@d+2,dtoa@n+2
  1461  00089C  C02E  F0AE         	movff	dtoa@d+3,dtoa@n+3
  1462  0008A0  C02F  F0AF         	movff	dtoa@d+4,dtoa@n+4
  1463  0008A4  C030  F0B0         	movff	dtoa@d+5,dtoa@n+5
  1464  0008A8  C031  F0B1         	movff	dtoa@d+6,dtoa@n+6
  1465  0008AC  C032  F0B2         	movff	dtoa@d+7,dtoa@n+7
  1466  0008B0                     
  1467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1468  0008B0  0100               	movlb	0	; () banked
  1469  0008B2  BFB2               	btfsc	(dtoa@n+7)& (0+255),7,b
  1470  0008B4  EF5E  F004         	goto	u3551
  1471  0008B8  EF61  F004         	goto	u3550
  1472  0008BC                     u3551:
  1473  0008BC  0E01               	movlw	1
  1474  0008BE  EF62  F004         	goto	u3560
  1475  0008C2                     u3550:
  1476  0008C2  0E00               	movlw	0
  1477  0008C4                     u3560:
  1478  0008C4  6FA9               	movwf	dtoa@s& (0+255),b
  1479  0008C6  6BAA               	clrf	(dtoa@s+1)& (0+255),b
  1480                           
  1481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1482  0008C8  51A9               	movf	dtoa@s& (0+255),w,b
  1483  0008CA  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  1484  0008CC  B4D8               	btfsc	status,2,c
  1485  0008CE  EF6B  F004         	goto	u3571
  1486  0008D2  EF6D  F004         	goto	u3570
  1487  0008D6                     u3571:
  1488  0008D6  EF7D  F004         	goto	l4406
  1489  0008DA                     u3570:
  1490  0008DA                     
  1491                           ; BSR set to: 0
  1492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1493  0008DA  1FB2               	comf	(dtoa@n+7)& (0+255),f,b
  1494  0008DC  1FB1               	comf	(dtoa@n+6)& (0+255),f,b
  1495  0008DE  1FB0               	comf	(dtoa@n+5)& (0+255),f,b
  1496  0008E0  1FAF               	comf	(dtoa@n+4)& (0+255),f,b
  1497  0008E2  1FAE               	comf	(dtoa@n+3)& (0+255),f,b
  1498  0008E4  1FAD               	comf	(dtoa@n+2)& (0+255),f,b
  1499  0008E6  1FAC               	comf	(dtoa@n+1)& (0+255),f,b
  1500  0008E8  6DAB               	negf	dtoa@n& (0+255),b
  1501  0008EA  0E00               	movlw	0
  1502  0008EC  23AC               	addwfc	(dtoa@n+1)& (0+255),f,b
  1503  0008EE  23AD               	addwfc	(dtoa@n+2)& (0+255),f,b
  1504  0008F0  23AE               	addwfc	(dtoa@n+3)& (0+255),f,b
  1505  0008F2  23AF               	addwfc	(dtoa@n+4)& (0+255),f,b
  1506  0008F4  23B0               	addwfc	(dtoa@n+5)& (0+255),f,b
  1507  0008F6  23B1               	addwfc	(dtoa@n+6)& (0+255),f,b
  1508  0008F8  23B2               	addwfc	(dtoa@n+7)& (0+255),f,b
  1509  0008FA                     l4406:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1513  0008FA  BE4E               	btfsc	(_prec+1)^0,7,c
  1514  0008FC  EF82  F004         	goto	u3581
  1515  000900  EF84  F004         	goto	u3580
  1516  000904                     u3581:
  1517  000904  EF85  F004         	goto	l4410
  1518  000908                     u3580:
  1519  000908                     
  1520                           ; BSR set to: 0
  1521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1522  000908  924F               	bcf	_flags^0,1,c
  1523  00090A                     l4410:
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1527  00090A  BE4E               	btfsc	(_prec+1)^0,7,c
  1528  00090C  EF92  F004         	goto	u3590
  1529  000910  504E               	movf	(_prec+1)^0,w,c
  1530  000912  E106               	bnz	u3591
  1531  000914  044D               	decf	_prec^0,w,c
  1532  000916  B0D8               	btfsc	status,0,c
  1533  000918  EF90  F004         	goto	u3591
  1534  00091C  EF92  F004         	goto	u3590
  1535  000920                     u3591:
  1536  000920  EF98  F004         	goto	l1365
  1537  000924                     u3590:
  1538  000924                     
  1539                           ; BSR set to: 0
  1540  000924  0E00               	movlw	0
  1541  000926  6FA6               	movwf	(dtoa@p+1)& (0+255),b
  1542  000928  0E01               	movlw	1
  1543  00092A  6FA5               	movwf	dtoa@p& (0+255),b
  1544  00092C  EF9C  F004         	goto	l1367
  1545  000930                     l1365:
  1546                           
  1547                           ; BSR set to: 0
  1548  000930  C04D  F0A5         	movff	_prec,dtoa@p
  1549  000934  C04E  F0A6         	movff	_prec+1,dtoa@p+1
  1550  000938                     l1367:
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1554  000938  C04B  F0A7         	movff	_width,dtoa@w
  1555  00093C  C04C  F0A8         	movff	_width+1,dtoa@w+1
  1556  000940                     
  1557                           ; BSR set to: 0
  1558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1559  000940  51A9               	movf	dtoa@s& (0+255),w,b
  1560  000942  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  1561  000944  A4D8               	btfss	status,2,c
  1562  000946  EFA7  F004         	goto	u3601
  1563  00094A  EFA9  F004         	goto	u3600
  1564  00094E                     u3601:
  1565  00094E  EFB0  F004         	goto	l4418
  1566  000952                     u3600:
  1567  000952                     
  1568                           ; BSR set to: 0
  1569  000952  A44F               	btfss	_flags^0,2,c
  1570  000954  EFAE  F004         	goto	u3611
  1571  000958  EFB0  F004         	goto	u3610
  1572  00095C                     u3611:
  1573  00095C  EFB3  F004         	goto	l4420
  1574  000960                     u3610:
  1575  000960                     l4418:
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1579  000960  07A7               	decf	dtoa@w& (0+255),f,b
  1580  000962  A0D8               	btfss	status,0,c
  1581  000964  07A8               	decf	(dtoa@w+1)& (0+255),f,b
  1582  000966                     l4420:
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1586  000966  0E00               	movlw	0
  1587  000968  6FB4               	movwf	(dtoa@i+1)& (0+255),b
  1588  00096A  0E1F               	movlw	31
  1589  00096C  6FB3               	movwf	dtoa@i& (0+255),b
  1590  00096E                     
  1591                           ; BSR set to: 0
  1592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1593  00096E  0E00               	movlw	0
  1594  000970  6FEB               	movwf	(_dbuf+31)& (0+255),b
  1595                           
  1596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1597  000972  EF38  F005         	goto	l4434
  1598  000976                     l4424:
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1602  000976  07B3               	decf	dtoa@i& (0+255),f,b
  1603  000978  A0D8               	btfss	status,0,c
  1604  00097A  07B4               	decf	(dtoa@i+1)& (0+255),f,b
  1605  00097C                     
  1606                           ; BSR set to: 0
  1607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1608  00097C  0ECC               	movlw	low _dbuf
  1609  00097E  25B3               	addwf	dtoa@i& (0+255),w,b
  1610  000980  6ED9               	movwf	fsr2l,c
  1611  000982  0E00               	movlw	high _dbuf
  1612  000984  21B4               	addwfc	(dtoa@i+1)& (0+255),w,b
  1613  000986  6EDA               	movwf	fsr2h,c
  1614  000988  C0AB  F00E         	movff	dtoa@n,___aomod@dividend
  1615  00098C  C0AC  F00F         	movff	dtoa@n+1,___aomod@dividend+1
  1616  000990  C0AD  F010         	movff	dtoa@n+2,___aomod@dividend+2
  1617  000994  C0AE  F011         	movff	dtoa@n+3,___aomod@dividend+3
  1618  000998  C0AF  F012         	movff	dtoa@n+4,___aomod@dividend+4
  1619  00099C  C0B0  F013         	movff	dtoa@n+5,___aomod@dividend+5
  1620  0009A0  C0B1  F014         	movff	dtoa@n+6,___aomod@dividend+6
  1621  0009A4  C0B2  F015         	movff	dtoa@n+7,___aomod@dividend+7
  1622  0009A8  0E0A               	movlw	10
  1623  0009AA  6E16               	movwf	___aomod@divisor^0,c
  1624  0009AC  0E00               	movlw	0
  1625  0009AE  6E17               	movwf	(___aomod@divisor+1)^0,c
  1626  0009B0  0E00               	movlw	0
  1627  0009B2  6E18               	movwf	(___aomod@divisor+2)^0,c
  1628  0009B4  0E00               	movlw	0
  1629  0009B6  6E19               	movwf	(___aomod@divisor+3)^0,c
  1630  0009B8  0E00               	movlw	0
  1631  0009BA  6E1A               	movwf	(___aomod@divisor+4)^0,c
  1632  0009BC  0E00               	movlw	0
  1633  0009BE  6E1B               	movwf	(___aomod@divisor+5)^0,c
  1634  0009C0  0E00               	movlw	0
  1635  0009C2  6E1C               	movwf	(___aomod@divisor+6)^0,c
  1636  0009C4  0E00               	movlw	0
  1637  0009C6  6E1D               	movwf	(___aomod@divisor+7)^0,c
  1638  0009C8  EC58  F007         	call	___aomod	;wreg free
  1639  0009CC  C00E  F033         	movff	?___aomod,??_dtoa
  1640  0009D0  C00F  F034         	movff	?___aomod+1,??_dtoa+1
  1641  0009D4  C010  F035         	movff	?___aomod+2,??_dtoa+2
  1642  0009D8  C011  F036         	movff	?___aomod+3,??_dtoa+3
  1643  0009DC  C012  F037         	movff	?___aomod+4,??_dtoa+4
  1644  0009E0  C013  F038         	movff	?___aomod+5,??_dtoa+5
  1645  0009E4  C014  F039         	movff	?___aomod+6,??_dtoa+6
  1646  0009E8  C015  F03A         	movff	?___aomod+7,??_dtoa+7
  1647  0009EC  C033  F020         	movff	??_dtoa,abs@a
  1648  0009F0  C035  F021         	movff	??_dtoa+2,abs@a+1
  1649  0009F4  EC8B  F00B         	call	_abs	;wreg free
  1650  0009F8  5020               	movf	?_abs^0,w,c
  1651  0009FA  0F30               	addlw	48
  1652  0009FC  6EDF               	movwf	indf2,c
  1653  0009FE                     
  1654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  1655  0009FE  0100               	movlb	0	; () banked
  1656  000A00  07A5               	decf	dtoa@p& (0+255),f,b
  1657  000A02  A0D8               	btfss	status,0,c
  1658  000A04  07A6               	decf	(dtoa@p+1)& (0+255),f,b
  1659  000A06                     
  1660                           ; BSR set to: 0
  1661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  1662  000A06  07A7               	decf	dtoa@w& (0+255),f,b
  1663  000A08  A0D8               	btfss	status,0,c
  1664  000A0A  07A8               	decf	(dtoa@w+1)& (0+255),f,b
  1665  000A0C                     
  1666                           ; BSR set to: 0
  1667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1668  000A0C  C0AB  F00E         	movff	dtoa@n,___aodiv@dividend
  1669  000A10  C0AC  F00F         	movff	dtoa@n+1,___aodiv@dividend+1
  1670  000A14  C0AD  F010         	movff	dtoa@n+2,___aodiv@dividend+2
  1671  000A18  C0AE  F011         	movff	dtoa@n+3,___aodiv@dividend+3
  1672  000A1C  C0AF  F012         	movff	dtoa@n+4,___aodiv@dividend+4
  1673  000A20  C0B0  F013         	movff	dtoa@n+5,___aodiv@dividend+5
  1674  000A24  C0B1  F014         	movff	dtoa@n+6,___aodiv@dividend+6
  1675  000A28  C0B2  F015         	movff	dtoa@n+7,___aodiv@dividend+7
  1676  000A2C  0E0A               	movlw	10
  1677  000A2E  6E16               	movwf	___aodiv@divisor^0,c
  1678  000A30  0E00               	movlw	0
  1679  000A32  6E17               	movwf	(___aodiv@divisor+1)^0,c
  1680  000A34  0E00               	movlw	0
  1681  000A36  6E18               	movwf	(___aodiv@divisor+2)^0,c
  1682  000A38  0E00               	movlw	0
  1683  000A3A  6E19               	movwf	(___aodiv@divisor+3)^0,c
  1684  000A3C  0E00               	movlw	0
  1685  000A3E  6E1A               	movwf	(___aodiv@divisor+4)^0,c
  1686  000A40  0E00               	movlw	0
  1687  000A42  6E1B               	movwf	(___aodiv@divisor+5)^0,c
  1688  000A44  0E00               	movlw	0
  1689  000A46  6E1C               	movwf	(___aodiv@divisor+6)^0,c
  1690  000A48  0E00               	movlw	0
  1691  000A4A  6E1D               	movwf	(___aodiv@divisor+7)^0,c
  1692  000A4C  EC94  F006         	call	___aodiv	;wreg free
  1693  000A50  C00E  F0AB         	movff	?___aodiv,dtoa@n
  1694  000A54  C00F  F0AC         	movff	?___aodiv+1,dtoa@n+1
  1695  000A58  C010  F0AD         	movff	?___aodiv+2,dtoa@n+2
  1696  000A5C  C011  F0AE         	movff	?___aodiv+3,dtoa@n+3
  1697  000A60  C012  F0AF         	movff	?___aodiv+4,dtoa@n+4
  1698  000A64  C013  F0B0         	movff	?___aodiv+5,dtoa@n+5
  1699  000A68  C014  F0B1         	movff	?___aodiv+6,dtoa@n+6
  1700  000A6C  C015  F0B2         	movff	?___aodiv+7,dtoa@n+7
  1701  000A70                     l4434:
  1702                           
  1703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1704  000A70  0100               	movlb	0	; () banked
  1705  000A72  BFB4               	btfsc	(dtoa@i+1)& (0+255),7,b
  1706  000A74  EF44  F005         	goto	u3621
  1707  000A78  51B4               	movf	(dtoa@i+1)& (0+255),w,b
  1708  000A7A  E108               	bnz	u3620
  1709  000A7C  05B3               	decf	dtoa@i& (0+255),w,b
  1710  000A7E  A0D8               	btfss	status,0,c
  1711  000A80  EF44  F005         	goto	u3621
  1712  000A84  EF46  F005         	goto	u3620
  1713  000A88                     u3621:
  1714  000A88  EF76  F005         	goto	l4444
  1715  000A8C                     u3620:
  1716  000A8C                     
  1717                           ; BSR set to: 0
  1718  000A8C  51AB               	movf	dtoa@n& (0+255),w,b
  1719  000A8E  11AC               	iorwf	(dtoa@n+1)& (0+255),w,b
  1720  000A90  11AD               	iorwf	(dtoa@n+2)& (0+255),w,b
  1721  000A92  11AE               	iorwf	(dtoa@n+3)& (0+255),w,b
  1722  000A94  11AF               	iorwf	(dtoa@n+4)& (0+255),w,b
  1723  000A96  11B0               	iorwf	(dtoa@n+5)& (0+255),w,b
  1724  000A98  11B1               	iorwf	(dtoa@n+6)& (0+255),w,b
  1725  000A9A  11B2               	iorwf	(dtoa@n+7)& (0+255),w,b
  1726  000A9C  A4D8               	btfss	status,2,c
  1727  000A9E  EF53  F005         	goto	u3631
  1728  000AA2  EF55  F005         	goto	u3630
  1729  000AA6                     u3631:
  1730  000AA6  EFBB  F004         	goto	l4424
  1731  000AAA                     u3630:
  1732  000AAA                     
  1733                           ; BSR set to: 0
  1734  000AAA  BFA6               	btfsc	(dtoa@p+1)& (0+255),7,b
  1735  000AAC  EF62  F005         	goto	u3640
  1736  000AB0  51A6               	movf	(dtoa@p+1)& (0+255),w,b
  1737  000AB2  E106               	bnz	u3641
  1738  000AB4  05A5               	decf	dtoa@p& (0+255),w,b
  1739  000AB6  B0D8               	btfsc	status,0,c
  1740  000AB8  EF60  F005         	goto	u3641
  1741  000ABC  EF62  F005         	goto	u3640
  1742  000AC0                     u3641:
  1743  000AC0  EFBB  F004         	goto	l4424
  1744  000AC4                     u3640:
  1745  000AC4                     
  1746                           ; BSR set to: 0
  1747  000AC4  BFA8               	btfsc	(dtoa@w+1)& (0+255),7,b
  1748  000AC6  EF6D  F005         	goto	u3651
  1749  000ACA  51A8               	movf	(dtoa@w+1)& (0+255),w,b
  1750  000ACC  E108               	bnz	u3650
  1751  000ACE  05A7               	decf	dtoa@w& (0+255),w,b
  1752  000AD0  A0D8               	btfss	status,0,c
  1753  000AD2  EF6D  F005         	goto	u3651
  1754  000AD6  EF6F  F005         	goto	u3650
  1755  000ADA                     u3651:
  1756  000ADA  EF76  F005         	goto	l4444
  1757  000ADE                     u3650:
  1758  000ADE                     
  1759                           ; BSR set to: 0
  1760  000ADE  B24F               	btfsc	_flags^0,1,c
  1761  000AE0  EF74  F005         	goto	u3661
  1762  000AE4  EF76  F005         	goto	u3660
  1763  000AE8                     u3661:
  1764  000AE8  EFBB  F004         	goto	l4424
  1765  000AEC                     u3660:
  1766  000AEC                     l4444:
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1770  000AEC  51A9               	movf	dtoa@s& (0+255),w,b
  1771  000AEE  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  1772  000AF0  A4D8               	btfss	status,2,c
  1773  000AF2  EF7D  F005         	goto	u3671
  1774  000AF6  EF7F  F005         	goto	u3670
  1775  000AFA                     u3671:
  1776  000AFA  EF86  F005         	goto	l4448
  1777  000AFE                     u3670:
  1778  000AFE                     
  1779                           ; BSR set to: 0
  1780  000AFE  A44F               	btfss	_flags^0,2,c
  1781  000B00  EF84  F005         	goto	u3681
  1782  000B04  EF86  F005         	goto	u3680
  1783  000B08                     u3681:
  1784  000B08  EFA4  F005         	goto	l4458
  1785  000B0C                     u3680:
  1786  000B0C                     l4448:
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  1790  000B0C  07B3               	decf	dtoa@i& (0+255),f,b
  1791  000B0E  A0D8               	btfss	status,0,c
  1792  000B10  07B4               	decf	(dtoa@i+1)& (0+255),f,b
  1793  000B12                     
  1794                           ; BSR set to: 0
  1795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1796  000B12  51A9               	movf	dtoa@s& (0+255),w,b
  1797  000B14  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  1798  000B16  A4D8               	btfss	status,2,c
  1799  000B18  EF90  F005         	goto	u3691
  1800  000B1C  EF92  F005         	goto	u3690
  1801  000B20                     u3691:
  1802  000B20  EF98  F005         	goto	l4454
  1803  000B24                     u3690:
  1804  000B24                     
  1805                           ; BSR set to: 0
  1806  000B24  0E00               	movlw	0
  1807  000B26  6FA4               	movwf	(_dtoa$2001+1)& (0+255),b
  1808  000B28  0E2B               	movlw	43
  1809  000B2A  6FA3               	movwf	_dtoa$2001& (0+255),b
  1810  000B2C  EF9C  F005         	goto	l4456
  1811  000B30                     l4454:
  1812                           
  1813                           ; BSR set to: 0
  1814  000B30  0E00               	movlw	0
  1815  000B32  6FA4               	movwf	(_dtoa$2001+1)& (0+255),b
  1816  000B34  0E2D               	movlw	45
  1817  000B36  6FA3               	movwf	_dtoa$2001& (0+255),b
  1818  000B38                     l4456:
  1819                           
  1820                           ; BSR set to: 0
  1821  000B38  0ECC               	movlw	low _dbuf
  1822  000B3A  25B3               	addwf	dtoa@i& (0+255),w,b
  1823  000B3C  6ED9               	movwf	fsr2l,c
  1824  000B3E  0E00               	movlw	high _dbuf
  1825  000B40  21B4               	addwfc	(dtoa@i+1)& (0+255),w,b
  1826  000B42  6EDA               	movwf	fsr2h,c
  1827  000B44  C0A3  FFDF         	movff	_dtoa$2001,indf2
  1828  000B48                     l4458:
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1832  000B48  C029  F01E         	movff	dtoa@fp,pad@fp
  1833  000B4C  C02A  F01F         	movff	dtoa@fp+1,pad@fp+1
  1834  000B50  0ECC               	movlw	low _dbuf
  1835  000B52  25B3               	addwf	dtoa@i& (0+255),w,b
  1836  000B54  6E20               	movwf	pad@buf^0,c
  1837  000B56  0E00               	movlw	high _dbuf
  1838  000B58  21B4               	addwfc	(dtoa@i+1)& (0+255),w,b
  1839  000B5A  6E21               	movwf	(pad@buf+1)^0,c
  1840  000B5C  C0A7  F022         	movff	dtoa@w,pad@p
  1841  000B60  C0A8  F023         	movff	dtoa@w+1,pad@p+1
  1842  000B64  EC73  F008         	call	_pad	;wreg free
  1843  000B68  C01E  F029         	movff	?_pad,?_dtoa
  1844  000B6C  C01F  F02A         	movff	?_pad+1,?_dtoa+1
  1845  000B70  0012               	return		;funcret
  1846  000B72                     __end_of_dtoa:
  1847                           	callstack 0
  1848                           
  1849 ;; *************** function _pad *****************
  1850 ;; Defined at:
  1851 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1854 ;;		 -> NULL(0), 
  1855 ;;  buf             2   31[COMRAM] PTR unsigned char 
  1856 ;;		 -> dbuf(32), 
  1857 ;;  p               2   33[COMRAM] int 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  w               2   38[COMRAM] int 
  1860 ;;  i               2   36[COMRAM] int 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  2   29[COMRAM] int 
  1863 ;; Registers used:
  1864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1870 ;;      Params:         6       0       0       0
  1871 ;;      Locals:         4       0       0       0
  1872 ;;      Temps:          1       0       0       0
  1873 ;;      Totals:        11       0       0       0
  1874 ;;Total ram usage:       11 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; Hardware stack levels required when called: 6
  1877 ;; This function calls:
  1878 ;;		_fputc
  1879 ;;		_fputs
  1880 ;;		_strlen
  1881 ;; This function is called by:
  1882 ;;		_dtoa
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text5
  1887  0010E6                     __ptext5:
  1888                           	callstack 0
  1889  0010E6                     _pad:
  1890                           	callstack 20
  1891  0010E6                     
  1892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1893  0010E6  A04F               	btfss	_flags^0,0,c
  1894  0010E8  EF78  F008         	goto	u3511
  1895  0010EC  EF7A  F008         	goto	u3510
  1896  0010F0                     u3511:
  1897  0010F0  EF84  F008         	goto	l4382
  1898  0010F4                     u3510:
  1899  0010F4                     
  1900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1901  0010F4  C020  F017         	movff	pad@buf,fputs@s
  1902  0010F8  C021  F018         	movff	pad@buf+1,fputs@s+1
  1903  0010FC  C01E  F019         	movff	pad@fp,fputs@fp
  1904  001100  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  1905  001104  EC47  F00B         	call	_fputs	;wreg free
  1906  001108                     l4382:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1909  001108  BE23               	btfsc	(pad@p+1)^0,7,c
  1910  00110A  EF89  F008         	goto	u3521
  1911  00110E  EF8B  F008         	goto	u3520
  1912  001112                     u3521:
  1913  001112  EF91  F008         	goto	l4386
  1914  001116                     u3520:
  1915  001116  C022  F027         	movff	pad@p,pad@w
  1916  00111A  C023  F028         	movff	pad@p+1,pad@w+1
  1917  00111E  EF95  F008         	goto	l1354
  1918  001122                     l4386:
  1919  001122  0E00               	movlw	0
  1920  001124  6E28               	movwf	(pad@w+1)^0,c
  1921  001126  0E00               	movlw	0
  1922  001128  6E27               	movwf	pad@w^0,c
  1923  00112A                     l1354:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1926  00112A  0E00               	movlw	0
  1927  00112C  6E26               	movwf	(pad@i+1)^0,c
  1928  00112E  0E00               	movlw	0
  1929  001130  6E25               	movwf	pad@i^0,c
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1932  001132  EFA7  F008         	goto	l4392
  1933  001136                     l4388:
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1936  001136  0E00               	movlw	0
  1937  001138  6E0F               	movwf	(fputc@c+1)^0,c
  1938  00113A  0E20               	movlw	32
  1939  00113C  6E0E               	movwf	fputc@c^0,c
  1940  00113E  C01E  F010         	movff	pad@fp,fputc@fp
  1941  001142  C01F  F011         	movff	pad@fp+1,fputc@fp+1
  1942  001146  EC2F  F009         	call	_fputc	;wreg free
  1943  00114A                     
  1944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1945  00114A  4A25               	infsnz	pad@i^0,f,c
  1946  00114C  2A26               	incf	(pad@i+1)^0,f,c
  1947  00114E                     l4392:
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1950  00114E  5027               	movf	pad@w^0,w,c
  1951  001150  5C25               	subwf	pad@i^0,w,c
  1952  001152  5026               	movf	(pad@i+1)^0,w,c
  1953  001154  0A80               	xorlw	128
  1954  001156  6E24               	movwf	??_pad^0,c
  1955  001158  5028               	movf	(pad@w+1)^0,w,c
  1956  00115A  0A80               	xorlw	128
  1957  00115C  5824               	subwfb	??_pad^0,w,c
  1958  00115E  A0D8               	btfss	status,0,c
  1959  001160  EFB4  F008         	goto	u3531
  1960  001164  EFB6  F008         	goto	u3530
  1961  001168                     u3531:
  1962  001168  EF9B  F008         	goto	l4388
  1963  00116C                     u3530:
  1964  00116C                     
  1965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1966  00116C  B04F               	btfsc	_flags^0,0,c
  1967  00116E  EFBB  F008         	goto	u3541
  1968  001172  EFBD  F008         	goto	u3540
  1969  001176                     u3541:
  1970  001176  EFC7  F008         	goto	l4396
  1971  00117A                     u3540:
  1972  00117A                     
  1973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1974  00117A  C020  F017         	movff	pad@buf,fputs@s
  1975  00117E  C021  F018         	movff	pad@buf+1,fputs@s+1
  1976  001182  C01E  F019         	movff	pad@fp,fputs@fp
  1977  001186  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  1978  00118A  EC47  F00B         	call	_fputs	;wreg free
  1979  00118E                     l4396:
  1980                           
  1981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1982  00118E  C020  F00E         	movff	pad@buf,strlen@s
  1983  001192  C021  F00F         	movff	pad@buf+1,strlen@s+1
  1984  001196  ECAB  F00B         	call	_strlen	;wreg free
  1985  00119A  5027               	movf	pad@w^0,w,c
  1986  00119C  240E               	addwf	?_strlen^0,w,c
  1987  00119E  6E1E               	movwf	?_pad^0,c
  1988  0011A0  5028               	movf	(pad@w+1)^0,w,c
  1989  0011A2  200F               	addwfc	(?_strlen+1)^0,w,c
  1990  0011A4  6E1F               	movwf	(?_pad+1)^0,c
  1991  0011A6  0012               	return		;funcret
  1992  0011A8                     __end_of_pad:
  1993                           	callstack 0
  1994                           
  1995 ;; *************** function _strlen *****************
  1996 ;; Defined at:
  1997 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  s               2   13[COMRAM] PTR const unsigned char 
  2000 ;;		 -> dbuf(32), 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  a               2   15[COMRAM] PTR const unsigned char 
  2003 ;;		 -> dbuf(32), 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  2   13[COMRAM] unsigned int 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2013 ;;      Params:         2       0       0       0
  2014 ;;      Locals:         2       0       0       0
  2015 ;;      Temps:          0       0       0       0
  2016 ;;      Totals:         4       0       0       0
  2017 ;;Total ram usage:        4 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; Hardware stack levels required when called: 3
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_pad
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text6
  2028  001756                     __ptext6:
  2029                           	callstack 0
  2030  001756                     _strlen:
  2031                           	callstack 22
  2032  001756  C00E  F010         	movff	strlen@s,strlen@a
  2033  00175A  C00F  F011         	movff	strlen@s+1,strlen@a+1
  2034  00175E  EFB3  F00B         	goto	l4288
  2035  001762                     l4286:
  2036  001762  4A0E               	infsnz	strlen@s^0,f,c
  2037  001764  2A0F               	incf	(strlen@s+1)^0,f,c
  2038  001766                     l4288:
  2039  001766  C00E  FFD9         	movff	strlen@s,fsr2l
  2040  00176A  C00F  FFDA         	movff	strlen@s+1,fsr2h
  2041  00176E  50DF               	movf	indf2,w,c
  2042  001770  A4D8               	btfss	status,2,c
  2043  001772  EFBD  F00B         	goto	u3361
  2044  001776  EFBF  F00B         	goto	u3360
  2045  00177A                     u3361:
  2046  00177A  EFB1  F00B         	goto	l4286
  2047  00177E                     u3360:
  2048  00177E  5010               	movf	strlen@a^0,w,c
  2049  001780  5C0E               	subwf	strlen@s^0,w,c
  2050  001782  6E0E               	movwf	?_strlen^0,c
  2051  001784  5011               	movf	(strlen@a+1)^0,w,c
  2052  001786  580F               	subwfb	(strlen@s+1)^0,w,c
  2053  001788  6E0F               	movwf	(?_strlen+1)^0,c
  2054  00178A  0012               	return		;funcret
  2055  00178C                     __end_of_strlen:
  2056                           	callstack 0
  2057                           
  2058 ;; *************** function _fputs *****************
  2059 ;; Defined at:
  2060 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  s               2   22[COMRAM] PTR const unsigned char 
  2063 ;;		 -> dbuf(32), 
  2064 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  2065 ;;		 -> NULL(0), 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  i               2   27[COMRAM] int 
  2068 ;;  c               1   26[COMRAM] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  2   22[COMRAM] int 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2078 ;;      Params:         4       0       0       0
  2079 ;;      Locals:         3       0       0       0
  2080 ;;      Temps:          0       0       0       0
  2081 ;;      Totals:         7       0       0       0
  2082 ;;Total ram usage:        7 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 5
  2085 ;; This function calls:
  2086 ;;		_fputc
  2087 ;; This function is called by:
  2088 ;;		_pad
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text7
  2093  00168E                     __ptext7:
  2094                           	callstack 0
  2095  00168E                     _fputs:
  2096                           	callstack 20
  2097  00168E  0E00               	movlw	0
  2098  001690  6E1D               	movwf	(fputs@i+1)^0,c
  2099  001692  0E00               	movlw	0
  2100  001694  6E1C               	movwf	fputs@i^0,c
  2101  001696  EF58  F00B         	goto	l4282
  2102  00169A                     l4278:
  2103  00169A  C01B  F00E         	movff	fputs@c,fputc@c
  2104  00169E  6A0F               	clrf	(fputc@c+1)^0,c
  2105  0016A0  C019  F010         	movff	fputs@fp,fputc@fp
  2106  0016A4  C01A  F011         	movff	fputs@fp+1,fputc@fp+1
  2107  0016A8  EC2F  F009         	call	_fputc	;wreg free
  2108  0016AC  4A1C               	infsnz	fputs@i^0,f,c
  2109  0016AE  2A1D               	incf	(fputs@i+1)^0,f,c
  2110  0016B0                     l4282:
  2111  0016B0  501C               	movf	fputs@i^0,w,c
  2112  0016B2  2417               	addwf	fputs@s^0,w,c
  2113  0016B4  6ED9               	movwf	fsr2l,c
  2114  0016B6  501D               	movf	(fputs@i+1)^0,w,c
  2115  0016B8  2018               	addwfc	(fputs@s+1)^0,w,c
  2116  0016BA  6EDA               	movwf	fsr2h,c
  2117  0016BC  50DF               	movf	indf2,w,c
  2118  0016BE  6E1B               	movwf	fputs@c^0,c
  2119  0016C0  501B               	movf	fputs@c^0,w,c
  2120  0016C2  A4D8               	btfss	status,2,c
  2121  0016C4  EF66  F00B         	goto	u3351
  2122  0016C8  EF68  F00B         	goto	u3350
  2123  0016CC                     u3351:
  2124  0016CC  EF4D  F00B         	goto	l4278
  2125  0016D0                     u3350:
  2126  0016D0  0012               	return		;funcret
  2127  0016D2                     __end_of_fputs:
  2128                           	callstack 0
  2129                           
  2130 ;; *************** function _fputc *****************
  2131 ;; Defined at:
  2132 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  c               2   13[COMRAM] int 
  2135 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  2136 ;;		 -> NULL(0), 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  2   13[COMRAM] int 
  2141 ;; Registers used:
  2142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2148 ;;      Params:         4       0       0       0
  2149 ;;      Locals:         0       0       0       0
  2150 ;;      Temps:          5       0       0       0
  2151 ;;      Totals:         9       0       0       0
  2152 ;;Total ram usage:        9 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 4
  2155 ;; This function calls:
  2156 ;;		_putch
  2157 ;; This function is called by:
  2158 ;;		_pad
  2159 ;;		_vfpfcnvrt
  2160 ;;		_fputs
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text8
  2165  00125E                     __ptext8:
  2166                           	callstack 0
  2167  00125E                     _fputc:
  2168                           	callstack 23
  2169  00125E  5010               	movf	fputc@fp^0,w,c
  2170  001260  1011               	iorwf	(fputc@fp+1)^0,w,c
  2171  001262  B4D8               	btfsc	status,2,c
  2172  001264  EF36  F009         	goto	u3311
  2173  001268  EF38  F009         	goto	u3310
  2174  00126C                     u3311:
  2175  00126C  EF41  F009         	goto	l4266
  2176  001270                     u3310:
  2177  001270  5010               	movf	fputc@fp^0,w,c
  2178  001272  1011               	iorwf	(fputc@fp+1)^0,w,c
  2179  001274  A4D8               	btfss	status,2,c
  2180  001276  EF3F  F009         	goto	u3321
  2181  00127A  EF41  F009         	goto	u3320
  2182  00127E                     u3321:
  2183  00127E  EF46  F009         	goto	l4268
  2184  001282                     u3320:
  2185  001282                     l4266:
  2186  001282  500E               	movf	fputc@c^0,w,c
  2187  001284  EC8A  F00C         	call	_putch
  2188  001288  EF79  F009         	goto	l1411
  2189  00128C                     l4268:
  2190  00128C  EE20 F004          	lfsr	2,4
  2191  001290  5010               	movf	fputc@fp^0,w,c
  2192  001292  26D9               	addwf	fsr2l,f,c
  2193  001294  5011               	movf	(fputc@fp+1)^0,w,c
  2194  001296  22DA               	addwfc	fsr2h,f,c
  2195  001298  50DE               	movf	postinc2,w,c
  2196  00129A  10DE               	iorwf	postinc2,w,c
  2197  00129C  B4D8               	btfsc	status,2,c
  2198  00129E  EF53  F009         	goto	u3331
  2199  0012A2  EF55  F009         	goto	u3330
  2200  0012A6                     u3331:
  2201  0012A6  EF70  F009         	goto	l4272
  2202  0012AA                     u3330:
  2203  0012AA  EE20 F004          	lfsr	2,4
  2204  0012AE  5010               	movf	fputc@fp^0,w,c
  2205  0012B0  26D9               	addwf	fsr2l,f,c
  2206  0012B2  5011               	movf	(fputc@fp+1)^0,w,c
  2207  0012B4  22DA               	addwfc	fsr2h,f,c
  2208  0012B6  EE10 F002          	lfsr	1,2
  2209  0012BA  5010               	movf	fputc@fp^0,w,c
  2210  0012BC  26E1               	addwf	fsr1l,f,c
  2211  0012BE  5011               	movf	(fputc@fp+1)^0,w,c
  2212  0012C0  22E2               	addwfc	fsr1h,f,c
  2213  0012C2  50DE               	movf	postinc2,w,c
  2214  0012C4  5CE6               	subwf	postinc1,w,c
  2215  0012C6  50E6               	movf	postinc1,w,c
  2216  0012C8  0A80               	xorlw	128
  2217  0012CA  6E16               	movwf	(??_fputc+4)^0,c
  2218  0012CC  50DE               	movf	postinc2,w,c
  2219  0012CE  0A80               	xorlw	128
  2220  0012D0  5816               	subwfb	(??_fputc+4)^0,w,c
  2221  0012D2  B0D8               	btfsc	status,0,c
  2222  0012D4  EF6E  F009         	goto	u3341
  2223  0012D8  EF70  F009         	goto	u3340
  2224  0012DC                     u3341:
  2225  0012DC  EF79  F009         	goto	l1411
  2226  0012E0                     u3340:
  2227  0012E0                     l4272:
  2228  0012E0  EE20 F002          	lfsr	2,2
  2229  0012E4  5010               	movf	fputc@fp^0,w,c
  2230  0012E6  26D9               	addwf	fsr2l,f,c
  2231  0012E8  5011               	movf	(fputc@fp+1)^0,w,c
  2232  0012EA  22DA               	addwfc	fsr2h,f,c
  2233  0012EC  2ADE               	incf	postinc2,f,c
  2234  0012EE  0E00               	movlw	0
  2235  0012F0  22DD               	addwfc	postdec2,f,c
  2236  0012F2                     l1411:
  2237  0012F2  0012               	return		;funcret
  2238  0012F4                     __end_of_fputc:
  2239                           	callstack 0
  2240                           
  2241 ;; *************** function _putch *****************
  2242 ;; Defined at:
  2243 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  c               1    wreg     unsigned char 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  c               1    0[COMRAM] unsigned char 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2257 ;;      Params:         0       0       0       0
  2258 ;;      Locals:         0       0       0       0
  2259 ;;      Temps:          0       0       0       0
  2260 ;;      Totals:         0       0       0       0
  2261 ;;Total ram usage:        0 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 3
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_fputc
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text9
  2272  001914                     __ptext9:
  2273                           	callstack 0
  2274  001914                     _putch:
  2275                           	callstack 23
  2276  001914  0012               	return		;funcret
  2277  001916                     __end_of_putch:
  2278                           	callstack 0
  2279                           
  2280 ;; *************** function _abs *****************
  2281 ;; Defined at:
  2282 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  a               2   31[COMRAM] int 
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;		None
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  2   31[COMRAM] int 
  2289 ;; Registers used:
  2290 ;;		wreg, status,2, status,0
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2296 ;;      Params:         2       0       0       0
  2297 ;;      Locals:         0       0       0       0
  2298 ;;      Temps:          2       0       0       0
  2299 ;;      Totals:         4       0       0       0
  2300 ;;Total ram usage:        4 bytes
  2301 ;; Hardware stack levels used: 1
  2302 ;; Hardware stack levels required when called: 3
  2303 ;; This function calls:
  2304 ;;		Nothing
  2305 ;; This function is called by:
  2306 ;;		_dtoa
  2307 ;;		_itoa
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text10
  2312  001716                     __ptext10:
  2313                           	callstack 0
  2314  001716                     _abs:
  2315                           	callstack 23
  2316  001716  BE21               	btfsc	(abs@a+1)^0,7,c
  2317  001718  EF98  F00B         	goto	u3370
  2318  00171C  5021               	movf	(abs@a+1)^0,w,c
  2319  00171E  E106               	bnz	u3371
  2320  001720  0420               	decf	abs@a^0,w,c
  2321  001722  B0D8               	btfsc	status,0,c
  2322  001724  EF96  F00B         	goto	u3371
  2323  001728  EF98  F00B         	goto	u3370
  2324  00172C                     u3371:
  2325  00172C  EFA6  F00B         	goto	l1317
  2326  001730                     u3370:
  2327  001730  C020  F022         	movff	abs@a,??_abs
  2328  001734  C021  F023         	movff	abs@a+1,??_abs+1
  2329  001738  1E22               	comf	??_abs^0,f,c
  2330  00173A  1E23               	comf	(??_abs+1)^0,f,c
  2331  00173C  4A22               	infsnz	??_abs^0,f,c
  2332  00173E  2A23               	incf	(??_abs+1)^0,f,c
  2333  001740  C022  F020         	movff	??_abs,?_abs
  2334  001744  C023  F021         	movff	??_abs+1,?_abs+1
  2335  001748  EFAA  F00B         	goto	l1320
  2336  00174C                     l1317:
  2337  00174C  C020  F020         	movff	abs@a,?_abs
  2338  001750  C021  F021         	movff	abs@a+1,?_abs+1
  2339  001754                     l1320:
  2340  001754  0012               	return		;funcret
  2341  001756                     __end_of_abs:
  2342                           	callstack 0
  2343                           
  2344 ;; *************** function ___aomod *****************
  2345 ;; Defined at:
  2346 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  dividend        8   13[COMRAM] long long 
  2349 ;;  divisor         8   21[COMRAM] long long 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  sign            1   30[COMRAM] unsigned char 
  2352 ;;  counter         1   29[COMRAM] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  8   13[COMRAM] long long 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2362 ;;      Params:        16       0       0       0
  2363 ;;      Locals:         2       0       0       0
  2364 ;;      Temps:          0       0       0       0
  2365 ;;      Totals:        18       0       0       0
  2366 ;;Total ram usage:       18 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 3
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_dtoa
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text11
  2377  000EB0                     __ptext11:
  2378                           	callstack 0
  2379  000EB0                     ___aomod:
  2380                           	callstack 23
  2381  000EB0  0E00               	movlw	0
  2382  000EB2  6E1F               	movwf	___aomod@sign^0,c
  2383  000EB4  BE15               	btfsc	(___aomod@dividend+7)^0,7,c
  2384  000EB6  EF61  F007         	goto	u3450
  2385  000EBA  EF5F  F007         	goto	u3451
  2386  000EBE                     u3451:
  2387  000EBE  EF73  F007         	goto	l4350
  2388  000EC2                     u3450:
  2389  000EC2  1E15               	comf	(___aomod@dividend+7)^0,f,c
  2390  000EC4  1E14               	comf	(___aomod@dividend+6)^0,f,c
  2391  000EC6  1E13               	comf	(___aomod@dividend+5)^0,f,c
  2392  000EC8  1E12               	comf	(___aomod@dividend+4)^0,f,c
  2393  000ECA  1E11               	comf	(___aomod@dividend+3)^0,f,c
  2394  000ECC  1E10               	comf	(___aomod@dividend+2)^0,f,c
  2395  000ECE  1E0F               	comf	(___aomod@dividend+1)^0,f,c
  2396  000ED0  6C0E               	negf	___aomod@dividend^0,c
  2397  000ED2  0E00               	movlw	0
  2398  000ED4  220F               	addwfc	(___aomod@dividend+1)^0,f,c
  2399  000ED6  2210               	addwfc	(___aomod@dividend+2)^0,f,c
  2400  000ED8  2211               	addwfc	(___aomod@dividend+3)^0,f,c
  2401  000EDA  2212               	addwfc	(___aomod@dividend+4)^0,f,c
  2402  000EDC  2213               	addwfc	(___aomod@dividend+5)^0,f,c
  2403  000EDE  2214               	addwfc	(___aomod@dividend+6)^0,f,c
  2404  000EE0  2215               	addwfc	(___aomod@dividend+7)^0,f,c
  2405  000EE2  0E01               	movlw	1
  2406  000EE4  6E1F               	movwf	___aomod@sign^0,c
  2407  000EE6                     l4350:
  2408  000EE6  BE1D               	btfsc	(___aomod@divisor+7)^0,7,c
  2409  000EE8  EF7A  F007         	goto	u3460
  2410  000EEC  EF78  F007         	goto	u3461
  2411  000EF0                     u3461:
  2412  000EF0  EF8A  F007         	goto	l4354
  2413  000EF4                     u3460:
  2414  000EF4  1E1D               	comf	(___aomod@divisor+7)^0,f,c
  2415  000EF6  1E1C               	comf	(___aomod@divisor+6)^0,f,c
  2416  000EF8  1E1B               	comf	(___aomod@divisor+5)^0,f,c
  2417  000EFA  1E1A               	comf	(___aomod@divisor+4)^0,f,c
  2418  000EFC  1E19               	comf	(___aomod@divisor+3)^0,f,c
  2419  000EFE  1E18               	comf	(___aomod@divisor+2)^0,f,c
  2420  000F00  1E17               	comf	(___aomod@divisor+1)^0,f,c
  2421  000F02  6C16               	negf	___aomod@divisor^0,c
  2422  000F04  0E00               	movlw	0
  2423  000F06  2217               	addwfc	(___aomod@divisor+1)^0,f,c
  2424  000F08  2218               	addwfc	(___aomod@divisor+2)^0,f,c
  2425  000F0A  2219               	addwfc	(___aomod@divisor+3)^0,f,c
  2426  000F0C  221A               	addwfc	(___aomod@divisor+4)^0,f,c
  2427  000F0E  221B               	addwfc	(___aomod@divisor+5)^0,f,c
  2428  000F10  221C               	addwfc	(___aomod@divisor+6)^0,f,c
  2429  000F12  221D               	addwfc	(___aomod@divisor+7)^0,f,c
  2430  000F14                     l4354:
  2431  000F14  5016               	movf	___aomod@divisor^0,w,c
  2432  000F16  1017               	iorwf	(___aomod@divisor+1)^0,w,c
  2433  000F18  1018               	iorwf	(___aomod@divisor+2)^0,w,c
  2434  000F1A  1019               	iorwf	(___aomod@divisor+3)^0,w,c
  2435  000F1C  101A               	iorwf	(___aomod@divisor+4)^0,w,c
  2436  000F1E  101B               	iorwf	(___aomod@divisor+5)^0,w,c
  2437  000F20  101C               	iorwf	(___aomod@divisor+6)^0,w,c
  2438  000F22  101D               	iorwf	(___aomod@divisor+7)^0,w,c
  2439  000F24  B4D8               	btfsc	status,2,c
  2440  000F26  EF97  F007         	goto	u3471
  2441  000F2A  EF99  F007         	goto	u3470
  2442  000F2E                     u3471:
  2443  000F2E  EFE1  F007         	goto	l4370
  2444  000F32                     u3470:
  2445  000F32  0E01               	movlw	1
  2446  000F34  6E1E               	movwf	___aomod@counter^0,c
  2447  000F36  EFA7  F007         	goto	l4360
  2448  000F3A                     l4358:
  2449  000F3A  90D8               	bcf	status,0,c
  2450  000F3C  3616               	rlcf	___aomod@divisor^0,f,c
  2451  000F3E  3617               	rlcf	(___aomod@divisor+1)^0,f,c
  2452  000F40  3618               	rlcf	(___aomod@divisor+2)^0,f,c
  2453  000F42  3619               	rlcf	(___aomod@divisor+3)^0,f,c
  2454  000F44  361A               	rlcf	(___aomod@divisor+4)^0,f,c
  2455  000F46  361B               	rlcf	(___aomod@divisor+5)^0,f,c
  2456  000F48  361C               	rlcf	(___aomod@divisor+6)^0,f,c
  2457  000F4A  361D               	rlcf	(___aomod@divisor+7)^0,f,c
  2458  000F4C  2A1E               	incf	___aomod@counter^0,f,c
  2459  000F4E                     l4360:
  2460  000F4E  AE1D               	btfss	(___aomod@divisor+7)^0,7,c
  2461  000F50  EFAC  F007         	goto	u3481
  2462  000F54  EFAE  F007         	goto	u3480
  2463  000F58                     u3481:
  2464  000F58  EF9D  F007         	goto	l4358
  2465  000F5C                     u3480:
  2466  000F5C                     l4362:
  2467  000F5C  5016               	movf	___aomod@divisor^0,w,c
  2468  000F5E  5C0E               	subwf	___aomod@dividend^0,w,c
  2469  000F60  5017               	movf	(___aomod@divisor+1)^0,w,c
  2470  000F62  580F               	subwfb	(___aomod@dividend+1)^0,w,c
  2471  000F64  5018               	movf	(___aomod@divisor+2)^0,w,c
  2472  000F66  5810               	subwfb	(___aomod@dividend+2)^0,w,c
  2473  000F68  5019               	movf	(___aomod@divisor+3)^0,w,c
  2474  000F6A  5811               	subwfb	(___aomod@dividend+3)^0,w,c
  2475  000F6C  501A               	movf	(___aomod@divisor+4)^0,w,c
  2476  000F6E  5812               	subwfb	(___aomod@dividend+4)^0,w,c
  2477  000F70  501B               	movf	(___aomod@divisor+5)^0,w,c
  2478  000F72  5813               	subwfb	(___aomod@dividend+5)^0,w,c
  2479  000F74  501C               	movf	(___aomod@divisor+6)^0,w,c
  2480  000F76  5814               	subwfb	(___aomod@dividend+6)^0,w,c
  2481  000F78  501D               	movf	(___aomod@divisor+7)^0,w,c
  2482  000F7A  5815               	subwfb	(___aomod@dividend+7)^0,w,c
  2483  000F7C  A0D8               	btfss	status,0,c
  2484  000F7E  EFC3  F007         	goto	u3491
  2485  000F82  EFC5  F007         	goto	u3490
  2486  000F86                     u3491:
  2487  000F86  EFD5  F007         	goto	l4366
  2488  000F8A                     u3490:
  2489  000F8A  5016               	movf	___aomod@divisor^0,w,c
  2490  000F8C  5E0E               	subwf	___aomod@dividend^0,f,c
  2491  000F8E  5017               	movf	(___aomod@divisor+1)^0,w,c
  2492  000F90  5A0F               	subwfb	(___aomod@dividend+1)^0,f,c
  2493  000F92  5018               	movf	(___aomod@divisor+2)^0,w,c
  2494  000F94  5A10               	subwfb	(___aomod@dividend+2)^0,f,c
  2495  000F96  5019               	movf	(___aomod@divisor+3)^0,w,c
  2496  000F98  5A11               	subwfb	(___aomod@dividend+3)^0,f,c
  2497  000F9A  501A               	movf	(___aomod@divisor+4)^0,w,c
  2498  000F9C  5A12               	subwfb	(___aomod@dividend+4)^0,f,c
  2499  000F9E  501B               	movf	(___aomod@divisor+5)^0,w,c
  2500  000FA0  5A13               	subwfb	(___aomod@dividend+5)^0,f,c
  2501  000FA2  501C               	movf	(___aomod@divisor+6)^0,w,c
  2502  000FA4  5A14               	subwfb	(___aomod@dividend+6)^0,f,c
  2503  000FA6  501D               	movf	(___aomod@divisor+7)^0,w,c
  2504  000FA8  5A15               	subwfb	(___aomod@dividend+7)^0,f,c
  2505  000FAA                     l4366:
  2506  000FAA  90D8               	bcf	status,0,c
  2507  000FAC  321D               	rrcf	(___aomod@divisor+7)^0,f,c
  2508  000FAE  321C               	rrcf	(___aomod@divisor+6)^0,f,c
  2509  000FB0  321B               	rrcf	(___aomod@divisor+5)^0,f,c
  2510  000FB2  321A               	rrcf	(___aomod@divisor+4)^0,f,c
  2511  000FB4  3219               	rrcf	(___aomod@divisor+3)^0,f,c
  2512  000FB6  3218               	rrcf	(___aomod@divisor+2)^0,f,c
  2513  000FB8  3217               	rrcf	(___aomod@divisor+1)^0,f,c
  2514  000FBA  3216               	rrcf	___aomod@divisor^0,f,c
  2515  000FBC  2E1E               	decfsz	___aomod@counter^0,f,c
  2516  000FBE  EFAE  F007         	goto	l4362
  2517  000FC2                     l4370:
  2518  000FC2  501F               	movf	___aomod@sign^0,w,c
  2519  000FC4  B4D8               	btfsc	status,2,c
  2520  000FC6  EFE7  F007         	goto	u3501
  2521  000FCA  EFE9  F007         	goto	u3500
  2522  000FCE                     u3501:
  2523  000FCE  EFF9  F007         	goto	l4374
  2524  000FD2                     u3500:
  2525  000FD2  1E15               	comf	(___aomod@dividend+7)^0,f,c
  2526  000FD4  1E14               	comf	(___aomod@dividend+6)^0,f,c
  2527  000FD6  1E13               	comf	(___aomod@dividend+5)^0,f,c
  2528  000FD8  1E12               	comf	(___aomod@dividend+4)^0,f,c
  2529  000FDA  1E11               	comf	(___aomod@dividend+3)^0,f,c
  2530  000FDC  1E10               	comf	(___aomod@dividend+2)^0,f,c
  2531  000FDE  1E0F               	comf	(___aomod@dividend+1)^0,f,c
  2532  000FE0  6C0E               	negf	___aomod@dividend^0,c
  2533  000FE2  0E00               	movlw	0
  2534  000FE4  220F               	addwfc	(___aomod@dividend+1)^0,f,c
  2535  000FE6  2210               	addwfc	(___aomod@dividend+2)^0,f,c
  2536  000FE8  2211               	addwfc	(___aomod@dividend+3)^0,f,c
  2537  000FEA  2212               	addwfc	(___aomod@dividend+4)^0,f,c
  2538  000FEC  2213               	addwfc	(___aomod@dividend+5)^0,f,c
  2539  000FEE  2214               	addwfc	(___aomod@dividend+6)^0,f,c
  2540  000FF0  2215               	addwfc	(___aomod@dividend+7)^0,f,c
  2541  000FF2                     l4374:
  2542  000FF2  C00E  F00E         	movff	___aomod@dividend,?___aomod
  2543  000FF6  C00F  F00F         	movff	___aomod@dividend+1,?___aomod+1
  2544  000FFA  C010  F010         	movff	___aomod@dividend+2,?___aomod+2
  2545  000FFE  C011  F011         	movff	___aomod@dividend+3,?___aomod+3
  2546  001002  C012  F012         	movff	___aomod@dividend+4,?___aomod+4
  2547  001006  C013  F013         	movff	___aomod@dividend+5,?___aomod+5
  2548  00100A  C014  F014         	movff	___aomod@dividend+6,?___aomod+6
  2549  00100E  C015  F015         	movff	___aomod@dividend+7,?___aomod+7
  2550  001012  0012               	return		;funcret
  2551  001014                     __end_of___aomod:
  2552                           	callstack 0
  2553                           
  2554 ;; *************** function ___aodiv *****************
  2555 ;; Defined at:
  2556 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  dividend        8   13[COMRAM] long long 
  2559 ;;  divisor         8   21[COMRAM] long long 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  quotient        8   31[COMRAM] long long 
  2562 ;;  sign            1   30[COMRAM] unsigned char 
  2563 ;;  counter         1   29[COMRAM] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  8   13[COMRAM] long long 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2573 ;;      Params:        16       0       0       0
  2574 ;;      Locals:        10       0       0       0
  2575 ;;      Temps:          0       0       0       0
  2576 ;;      Totals:        26       0       0       0
  2577 ;;Total ram usage:       26 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; Hardware stack levels required when called: 3
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_dtoa
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text12
  2588  000D28                     __ptext12:
  2589                           	callstack 0
  2590  000D28                     ___aodiv:
  2591                           	callstack 23
  2592  000D28  0E00               	movlw	0
  2593  000D2A  6E1F               	movwf	___aodiv@sign^0,c
  2594  000D2C  BE1D               	btfsc	(___aodiv@divisor+7)^0,7,c
  2595  000D2E  EF9D  F006         	goto	u3380
  2596  000D32  EF9B  F006         	goto	u3381
  2597  000D36                     u3381:
  2598  000D36  EFAF  F006         	goto	l4306
  2599  000D3A                     u3380:
  2600  000D3A  1E1D               	comf	(___aodiv@divisor+7)^0,f,c
  2601  000D3C  1E1C               	comf	(___aodiv@divisor+6)^0,f,c
  2602  000D3E  1E1B               	comf	(___aodiv@divisor+5)^0,f,c
  2603  000D40  1E1A               	comf	(___aodiv@divisor+4)^0,f,c
  2604  000D42  1E19               	comf	(___aodiv@divisor+3)^0,f,c
  2605  000D44  1E18               	comf	(___aodiv@divisor+2)^0,f,c
  2606  000D46  1E17               	comf	(___aodiv@divisor+1)^0,f,c
  2607  000D48  6C16               	negf	___aodiv@divisor^0,c
  2608  000D4A  0E00               	movlw	0
  2609  000D4C  2217               	addwfc	(___aodiv@divisor+1)^0,f,c
  2610  000D4E  2218               	addwfc	(___aodiv@divisor+2)^0,f,c
  2611  000D50  2219               	addwfc	(___aodiv@divisor+3)^0,f,c
  2612  000D52  221A               	addwfc	(___aodiv@divisor+4)^0,f,c
  2613  000D54  221B               	addwfc	(___aodiv@divisor+5)^0,f,c
  2614  000D56  221C               	addwfc	(___aodiv@divisor+6)^0,f,c
  2615  000D58  221D               	addwfc	(___aodiv@divisor+7)^0,f,c
  2616  000D5A  0E01               	movlw	1
  2617  000D5C  6E1F               	movwf	___aodiv@sign^0,c
  2618  000D5E                     l4306:
  2619  000D5E  BE15               	btfsc	(___aodiv@dividend+7)^0,7,c
  2620  000D60  EFB6  F006         	goto	u3390
  2621  000D64  EFB4  F006         	goto	u3391
  2622  000D68                     u3391:
  2623  000D68  EFC8  F006         	goto	l4312
  2624  000D6C                     u3390:
  2625  000D6C  1E15               	comf	(___aodiv@dividend+7)^0,f,c
  2626  000D6E  1E14               	comf	(___aodiv@dividend+6)^0,f,c
  2627  000D70  1E13               	comf	(___aodiv@dividend+5)^0,f,c
  2628  000D72  1E12               	comf	(___aodiv@dividend+4)^0,f,c
  2629  000D74  1E11               	comf	(___aodiv@dividend+3)^0,f,c
  2630  000D76  1E10               	comf	(___aodiv@dividend+2)^0,f,c
  2631  000D78  1E0F               	comf	(___aodiv@dividend+1)^0,f,c
  2632  000D7A  6C0E               	negf	___aodiv@dividend^0,c
  2633  000D7C  0E00               	movlw	0
  2634  000D7E  220F               	addwfc	(___aodiv@dividend+1)^0,f,c
  2635  000D80  2210               	addwfc	(___aodiv@dividend+2)^0,f,c
  2636  000D82  2211               	addwfc	(___aodiv@dividend+3)^0,f,c
  2637  000D84  2212               	addwfc	(___aodiv@dividend+4)^0,f,c
  2638  000D86  2213               	addwfc	(___aodiv@dividend+5)^0,f,c
  2639  000D88  2214               	addwfc	(___aodiv@dividend+6)^0,f,c
  2640  000D8A  2215               	addwfc	(___aodiv@dividend+7)^0,f,c
  2641  000D8C  0E01               	movlw	1
  2642  000D8E  1A1F               	xorwf	___aodiv@sign^0,f,c
  2643  000D90                     l4312:
  2644  000D90  EE20  F020         	lfsr	2,___aodiv@quotient
  2645  000D94  0E07               	movlw	7
  2646  000D96                     u3401:
  2647  000D96  6ADE               	clrf	postinc2,c
  2648  000D98  06E8               	decf	wreg,f,c
  2649  000D9A  E2FD               	bc	u3401
  2650  000D9C  5016               	movf	___aodiv@divisor^0,w,c
  2651  000D9E  1017               	iorwf	(___aodiv@divisor+1)^0,w,c
  2652  000DA0  1018               	iorwf	(___aodiv@divisor+2)^0,w,c
  2653  000DA2  1019               	iorwf	(___aodiv@divisor+3)^0,w,c
  2654  000DA4  101A               	iorwf	(___aodiv@divisor+4)^0,w,c
  2655  000DA6  101B               	iorwf	(___aodiv@divisor+5)^0,w,c
  2656  000DA8  101C               	iorwf	(___aodiv@divisor+6)^0,w,c
  2657  000DAA  101D               	iorwf	(___aodiv@divisor+7)^0,w,c
  2658  000DAC  B4D8               	btfsc	status,2,c
  2659  000DAE  EFDB  F006         	goto	u3411
  2660  000DB2  EFDD  F006         	goto	u3410
  2661  000DB6                     u3411:
  2662  000DB6  EF2F  F007         	goto	l4334
  2663  000DBA                     u3410:
  2664  000DBA  0E01               	movlw	1
  2665  000DBC  6E1E               	movwf	___aodiv@counter^0,c
  2666  000DBE  EFEB  F006         	goto	l4320
  2667  000DC2                     l4318:
  2668  000DC2  90D8               	bcf	status,0,c
  2669  000DC4  3616               	rlcf	___aodiv@divisor^0,f,c
  2670  000DC6  3617               	rlcf	(___aodiv@divisor+1)^0,f,c
  2671  000DC8  3618               	rlcf	(___aodiv@divisor+2)^0,f,c
  2672  000DCA  3619               	rlcf	(___aodiv@divisor+3)^0,f,c
  2673  000DCC  361A               	rlcf	(___aodiv@divisor+4)^0,f,c
  2674  000DCE  361B               	rlcf	(___aodiv@divisor+5)^0,f,c
  2675  000DD0  361C               	rlcf	(___aodiv@divisor+6)^0,f,c
  2676  000DD2  361D               	rlcf	(___aodiv@divisor+7)^0,f,c
  2677  000DD4  2A1E               	incf	___aodiv@counter^0,f,c
  2678  000DD6                     l4320:
  2679  000DD6  AE1D               	btfss	(___aodiv@divisor+7)^0,7,c
  2680  000DD8  EFF0  F006         	goto	u3421
  2681  000DDC  EFF2  F006         	goto	u3420
  2682  000DE0                     u3421:
  2683  000DE0  EFE1  F006         	goto	l4318
  2684  000DE4                     u3420:
  2685  000DE4                     l4322:
  2686  000DE4  90D8               	bcf	status,0,c
  2687  000DE6  3620               	rlcf	___aodiv@quotient^0,f,c
  2688  000DE8  3621               	rlcf	(___aodiv@quotient+1)^0,f,c
  2689  000DEA  3622               	rlcf	(___aodiv@quotient+2)^0,f,c
  2690  000DEC  3623               	rlcf	(___aodiv@quotient+3)^0,f,c
  2691  000DEE  3624               	rlcf	(___aodiv@quotient+4)^0,f,c
  2692  000DF0  3625               	rlcf	(___aodiv@quotient+5)^0,f,c
  2693  000DF2  3626               	rlcf	(___aodiv@quotient+6)^0,f,c
  2694  000DF4  3627               	rlcf	(___aodiv@quotient+7)^0,f,c
  2695  000DF6  5016               	movf	___aodiv@divisor^0,w,c
  2696  000DF8  5C0E               	subwf	___aodiv@dividend^0,w,c
  2697  000DFA  5017               	movf	(___aodiv@divisor+1)^0,w,c
  2698  000DFC  580F               	subwfb	(___aodiv@dividend+1)^0,w,c
  2699  000DFE  5018               	movf	(___aodiv@divisor+2)^0,w,c
  2700  000E00  5810               	subwfb	(___aodiv@dividend+2)^0,w,c
  2701  000E02  5019               	movf	(___aodiv@divisor+3)^0,w,c
  2702  000E04  5811               	subwfb	(___aodiv@dividend+3)^0,w,c
  2703  000E06  501A               	movf	(___aodiv@divisor+4)^0,w,c
  2704  000E08  5812               	subwfb	(___aodiv@dividend+4)^0,w,c
  2705  000E0A  501B               	movf	(___aodiv@divisor+5)^0,w,c
  2706  000E0C  5813               	subwfb	(___aodiv@dividend+5)^0,w,c
  2707  000E0E  501C               	movf	(___aodiv@divisor+6)^0,w,c
  2708  000E10  5814               	subwfb	(___aodiv@dividend+6)^0,w,c
  2709  000E12  501D               	movf	(___aodiv@divisor+7)^0,w,c
  2710  000E14  5815               	subwfb	(___aodiv@dividend+7)^0,w,c
  2711  000E16  A0D8               	btfss	status,0,c
  2712  000E18  EF10  F007         	goto	u3431
  2713  000E1C  EF12  F007         	goto	u3430
  2714  000E20                     u3431:
  2715  000E20  EF23  F007         	goto	l4330
  2716  000E24                     u3430:
  2717  000E24  5016               	movf	___aodiv@divisor^0,w,c
  2718  000E26  5E0E               	subwf	___aodiv@dividend^0,f,c
  2719  000E28  5017               	movf	(___aodiv@divisor+1)^0,w,c
  2720  000E2A  5A0F               	subwfb	(___aodiv@dividend+1)^0,f,c
  2721  000E2C  5018               	movf	(___aodiv@divisor+2)^0,w,c
  2722  000E2E  5A10               	subwfb	(___aodiv@dividend+2)^0,f,c
  2723  000E30  5019               	movf	(___aodiv@divisor+3)^0,w,c
  2724  000E32  5A11               	subwfb	(___aodiv@dividend+3)^0,f,c
  2725  000E34  501A               	movf	(___aodiv@divisor+4)^0,w,c
  2726  000E36  5A12               	subwfb	(___aodiv@dividend+4)^0,f,c
  2727  000E38  501B               	movf	(___aodiv@divisor+5)^0,w,c
  2728  000E3A  5A13               	subwfb	(___aodiv@dividend+5)^0,f,c
  2729  000E3C  501C               	movf	(___aodiv@divisor+6)^0,w,c
  2730  000E3E  5A14               	subwfb	(___aodiv@dividend+6)^0,f,c
  2731  000E40  501D               	movf	(___aodiv@divisor+7)^0,w,c
  2732  000E42  5A15               	subwfb	(___aodiv@dividend+7)^0,f,c
  2733  000E44  8020               	bsf	___aodiv@quotient^0,0,c
  2734  000E46                     l4330:
  2735  000E46  90D8               	bcf	status,0,c
  2736  000E48  321D               	rrcf	(___aodiv@divisor+7)^0,f,c
  2737  000E4A  321C               	rrcf	(___aodiv@divisor+6)^0,f,c
  2738  000E4C  321B               	rrcf	(___aodiv@divisor+5)^0,f,c
  2739  000E4E  321A               	rrcf	(___aodiv@divisor+4)^0,f,c
  2740  000E50  3219               	rrcf	(___aodiv@divisor+3)^0,f,c
  2741  000E52  3218               	rrcf	(___aodiv@divisor+2)^0,f,c
  2742  000E54  3217               	rrcf	(___aodiv@divisor+1)^0,f,c
  2743  000E56  3216               	rrcf	___aodiv@divisor^0,f,c
  2744  000E58  2E1E               	decfsz	___aodiv@counter^0,f,c
  2745  000E5A  EFF2  F006         	goto	l4322
  2746  000E5E                     l4334:
  2747  000E5E  501F               	movf	___aodiv@sign^0,w,c
  2748  000E60  B4D8               	btfsc	status,2,c
  2749  000E62  EF35  F007         	goto	u3441
  2750  000E66  EF37  F007         	goto	u3440
  2751  000E6A                     u3441:
  2752  000E6A  EF47  F007         	goto	l4338
  2753  000E6E                     u3440:
  2754  000E6E  1E27               	comf	(___aodiv@quotient+7)^0,f,c
  2755  000E70  1E26               	comf	(___aodiv@quotient+6)^0,f,c
  2756  000E72  1E25               	comf	(___aodiv@quotient+5)^0,f,c
  2757  000E74  1E24               	comf	(___aodiv@quotient+4)^0,f,c
  2758  000E76  1E23               	comf	(___aodiv@quotient+3)^0,f,c
  2759  000E78  1E22               	comf	(___aodiv@quotient+2)^0,f,c
  2760  000E7A  1E21               	comf	(___aodiv@quotient+1)^0,f,c
  2761  000E7C  6C20               	negf	___aodiv@quotient^0,c
  2762  000E7E  0E00               	movlw	0
  2763  000E80  2221               	addwfc	(___aodiv@quotient+1)^0,f,c
  2764  000E82  2222               	addwfc	(___aodiv@quotient+2)^0,f,c
  2765  000E84  2223               	addwfc	(___aodiv@quotient+3)^0,f,c
  2766  000E86  2224               	addwfc	(___aodiv@quotient+4)^0,f,c
  2767  000E88  2225               	addwfc	(___aodiv@quotient+5)^0,f,c
  2768  000E8A  2226               	addwfc	(___aodiv@quotient+6)^0,f,c
  2769  000E8C  2227               	addwfc	(___aodiv@quotient+7)^0,f,c
  2770  000E8E                     l4338:
  2771  000E8E  C020  F00E         	movff	___aodiv@quotient,?___aodiv
  2772  000E92  C021  F00F         	movff	___aodiv@quotient+1,?___aodiv+1
  2773  000E96  C022  F010         	movff	___aodiv@quotient+2,?___aodiv+2
  2774  000E9A  C023  F011         	movff	___aodiv@quotient+3,?___aodiv+3
  2775  000E9E  C024  F012         	movff	___aodiv@quotient+4,?___aodiv+4
  2776  000EA2  C025  F013         	movff	___aodiv@quotient+5,?___aodiv+5
  2777  000EA6  C026  F014         	movff	___aodiv@quotient+6,?___aodiv+6
  2778  000EAA  C027  F015         	movff	___aodiv@quotient+7,?___aodiv+7
  2779  000EAE  0012               	return		;funcret
  2780  000EB0                     __end_of___aodiv:
  2781                           	callstack 0
  2782                           
  2783 ;; *************** function _pinMode *****************
  2784 ;; Defined at:
  2785 ;;		line 46 in file "pins.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  pin             1    wreg     unsigned char 
  2788 ;;  mode            1   52[COMRAM] enum E6021
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  pin             1   57[COMRAM] unsigned char 
  2791 ;;  bit_val         1   58[COMRAM] unsigned char 
  2792 ;;  port            1   56[COMRAM] enum E6026
  2793 ;;  port_num        1   55[COMRAM] unsigned char 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2803 ;;      Params:         1       0       0       0
  2804 ;;      Locals:         4       0       0       0
  2805 ;;      Temps:          2       0       0       0
  2806 ;;      Totals:         7       0       0       0
  2807 ;;Total ram usage:        7 bytes
  2808 ;; Hardware stack levels used: 1
  2809 ;; Hardware stack levels required when called: 5
  2810 ;; This function calls:
  2811 ;;		_clearBit
  2812 ;;		_convertToBit
  2813 ;;		_convertToPort
  2814 ;;		_pinToIndex
  2815 ;;		_setBit
  2816 ;; This function is called by:
  2817 ;;		_main
  2818 ;;		_analogWrite
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text13
  2823  00030A                     __ptext13:
  2824                           	callstack 0
  2825  00030A                     _pinMode:
  2826                           	callstack 25
  2827                           
  2828                           ;incstack = 0
  2829                           ;pinMode@pin stored from wreg
  2830  00030A  6E3A               	movwf	pinMode@pin^0,c
  2831  00030C                     
  2832                           ;pins.c: 47:     if (pin == 11 ||
  2833  00030C  0E0B               	movlw	11
  2834  00030E  183A               	xorwf	pinMode@pin^0,w,c
  2835  000310  B4D8               	btfsc	status,2,c
  2836  000312  EF8D  F001         	goto	u4041
  2837  000316  EF8F  F001         	goto	u4040
  2838  00031A                     u4041:
  2839  00031A  EF47  F004         	goto	l132
  2840  00031E                     u4040:
  2841  00031E  0E0C               	movlw	12
  2842  000320  183A               	xorwf	pinMode@pin^0,w,c
  2843  000322  B4D8               	btfsc	status,2,c
  2844  000324  EF96  F001         	goto	u4051
  2845  000328  EF98  F001         	goto	u4050
  2846  00032C                     u4051:
  2847  00032C  EF47  F004         	goto	l132
  2848  000330                     u4050:
  2849  000330  0E1F               	movlw	31
  2850  000332  183A               	xorwf	pinMode@pin^0,w,c
  2851  000334  B4D8               	btfsc	status,2,c
  2852  000336  EF9F  F001         	goto	u4061
  2853  00033A  EFA1  F001         	goto	u4060
  2854  00033E                     u4061:
  2855  00033E  EF47  F004         	goto	l132
  2856  000342                     u4060:
  2857  000342  0E20               	movlw	32
  2858  000344  183A               	xorwf	pinMode@pin^0,w,c
  2859  000346  B4D8               	btfsc	status,2,c
  2860  000348  EFA8  F001         	goto	u4071
  2861  00034C  EFAA  F001         	goto	u4070
  2862  000350                     u4071:
  2863  000350  EF47  F004         	goto	l132
  2864  000354                     u4070:
  2865  000354  503A               	movf	pinMode@pin^0,w,c
  2866  000356  B4D8               	btfsc	status,2,c
  2867  000358  EFB0  F001         	goto	u4081
  2868  00035C  EFB2  F001         	goto	u4080
  2869  000360                     u4081:
  2870  000360  EF47  F004         	goto	l132
  2871  000364                     u4080:
  2872  000364  0E28               	movlw	40
  2873  000366  643A               	cpfsgt	pinMode@pin^0,c
  2874  000368  EFB8  F001         	goto	u4091
  2875  00036C  EFBA  F001         	goto	u4090
  2876  000370                     u4091:
  2877  000370  EFBC  F001         	goto	l4668
  2878  000374                     u4090:
  2879  000374  EF47  F004         	goto	l132
  2880  000378                     l4668:
  2881                           
  2882                           ;pins.c: 53:     if (mode != ANALOG_INPUT && mode != INPUT && mode != INPUT_PULLUP && mo
      +                          de != OUTPUT) return;
  2883  000378  5035               	movf	pinMode@mode^0,w,c
  2884  00037A  B4D8               	btfsc	status,2,c
  2885  00037C  EFC2  F001         	goto	u4101
  2886  000380  EFC4  F001         	goto	u4100
  2887  000384                     u4101:
  2888  000384  EFE0  F001         	goto	l4678
  2889  000388                     u4100:
  2890  000388  0435               	decf	pinMode@mode^0,w,c
  2891  00038A  B4D8               	btfsc	status,2,c
  2892  00038C  EFCA  F001         	goto	u4111
  2893  000390  EFCC  F001         	goto	u4110
  2894  000394                     u4111:
  2895  000394  EFE0  F001         	goto	l4678
  2896  000398                     u4110:
  2897  000398  0E02               	movlw	2
  2898  00039A  1835               	xorwf	pinMode@mode^0,w,c
  2899  00039C  B4D8               	btfsc	status,2,c
  2900  00039E  EFD3  F001         	goto	u4121
  2901  0003A2  EFD5  F001         	goto	u4120
  2902  0003A6                     u4121:
  2903  0003A6  EFE0  F001         	goto	l4678
  2904  0003AA                     u4120:
  2905  0003AA  0E03               	movlw	3
  2906  0003AC  1835               	xorwf	pinMode@mode^0,w,c
  2907  0003AE  B4D8               	btfsc	status,2,c
  2908  0003B0  EFDC  F001         	goto	u4131
  2909  0003B4  EFDE  F001         	goto	u4130
  2910  0003B8                     u4131:
  2911  0003B8  EFE0  F001         	goto	l4678
  2912  0003BC                     u4130:
  2913  0003BC  EF47  F004         	goto	l132
  2914  0003C0                     l4678:
  2915                           
  2916                           ;pins.c: 55:     uint8_t port_num = pinToIndex(pin);
  2917  0003C0  503A               	movf	pinMode@pin^0,w,c
  2918  0003C2  EC1F  F00B         	call	_pinToIndex
  2919  0003C6  6E38               	movwf	pinMode@port_num^0,c
  2920  0003C8                     
  2921                           ;pins.c: 56:     enum ports port = convertToPort(port_num);
  2922  0003C8  5038               	movf	pinMode@port_num^0,w,c
  2923  0003CA  ECC5  F009         	call	_convertToPort
  2924  0003CE  6E39               	movwf	pinMode@port^0,c
  2925  0003D0                     
  2926                           ;pins.c: 57:     uint8_t bit_val = convertToBit(port_num);
  2927  0003D0  5038               	movf	pinMode@port_num^0,w,c
  2928  0003D2  EC7A  F009         	call	_convertToBit
  2929  0003D6  6E3B               	movwf	pinMode@bit_val^0,c
  2930  0003D8                     
  2931                           ;pins.c: 59:     if (mode == ANALOG_INPUT) {
  2932  0003D8  5035               	movf	pinMode@mode^0,w,c
  2933  0003DA  A4D8               	btfss	status,2,c
  2934  0003DC  EFF2  F001         	goto	u4141
  2935  0003E0  EFF4  F001         	goto	u4140
  2936  0003E4                     u4141:
  2937  0003E4  EF71  F002         	goto	l4702
  2938  0003E8                     u4140:
  2939  0003E8  EF50  F002         	goto	l4700
  2940  0003EC                     l4688:
  2941                           
  2942                           ;pins.c: 62:                 setBit(&TRISA, bit_val);
  2943  0003EC  0E92               	movlw	146
  2944  0003EE  6E11               	movwf	setBit@p^0,c
  2945  0003F0  0E0F               	movlw	15
  2946  0003F2  6E12               	movwf	(setBit@p+1)^0,c
  2947  0003F4  C03B  F013         	movff	pinMode@bit_val,setBit@b
  2948  0003F8  EC6C  F00C         	call	_setBit	;wreg free
  2949                           
  2950                           ;pins.c: 63:                 setBit(&ANSELA, bit_val);
  2951  0003FC  0E38               	movlw	56
  2952  0003FE  6E11               	movwf	setBit@p^0,c
  2953  000400  0E0F               	movlw	15
  2954  000402  6E12               	movwf	(setBit@p+1)^0,c
  2955  000404  C03B  F013         	movff	pinMode@bit_val,setBit@b
  2956  000408  EC6C  F00C         	call	_setBit	;wreg free
  2957                           
  2958                           ;pins.c: 64:                 break;
  2959  00040C  EF47  F004         	goto	l132
  2960  000410                     l4690:
  2961                           
  2962                           ;pins.c: 66:                 setBit(&TRISB, bit_val);
  2963  000410  0E93               	movlw	147
  2964  000412  6E11               	movwf	setBit@p^0,c
  2965  000414  0E0F               	movlw	15
  2966  000416  6E12               	movwf	(setBit@p+1)^0,c
  2967  000418  C03B  F013         	movff	pinMode@bit_val,setBit@b
  2968  00041C  EC6C  F00C         	call	_setBit	;wreg free
  2969                           
  2970                           ;pins.c: 67:                 setBit(&ANSELB, bit_val);
  2971  000420  0E39               	movlw	57
  2972  000422  6E11               	movwf	setBit@p^0,c
  2973  000424  0E0F               	movlw	15
  2974  000426  6E12               	movwf	(setBit@p+1)^0,c
  2975  000428  C03B  F013         	movff	pinMode@bit_val,setBit@b
  2976  00042C  EC6C  F00C         	call	_setBit	;wreg free
  2977                           
  2978                           ;pins.c: 68:                 break;
  2979  000430  EF47  F004         	goto	l132
  2980  000434                     l4692:
  2981                           
  2982                           ;pins.c: 70:                 setBit(&TRISC, bit_val);
  2983  000434  0E94               	movlw	148
  2984  000436  6E11               	movwf	setBit@p^0,c
  2985  000438  0E0F               	movlw	15
  2986  00043A  6E12               	movwf	(setBit@p+1)^0,c
  2987  00043C  C03B  F013         	movff	pinMode@bit_val,setBit@b
  2988  000440  EC6C  F00C         	call	_setBit	;wreg free
  2989                           
  2990                           ;pins.c: 71:                 setBit(&ANSELC, bit_val);
  2991  000444  0E3A               	movlw	58
  2992  000446  6E11               	movwf	setBit@p^0,c
  2993  000448  0E0F               	movlw	15
  2994  00044A  6E12               	movwf	(setBit@p+1)^0,c
  2995  00044C  C03B  F013         	movff	pinMode@bit_val,setBit@b
  2996  000450  EC6C  F00C         	call	_setBit	;wreg free
  2997                           
  2998                           ;pins.c: 72:                 break;
  2999  000454  EF47  F004         	goto	l132
  3000  000458                     l4694:
  3001                           
  3002                           ;pins.c: 74:                 setBit(&TRISD, bit_val);
  3003  000458  0E95               	movlw	149
  3004  00045A  6E11               	movwf	setBit@p^0,c
  3005  00045C  0E0F               	movlw	15
  3006  00045E  6E12               	movwf	(setBit@p+1)^0,c
  3007  000460  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3008  000464  EC6C  F00C         	call	_setBit	;wreg free
  3009                           
  3010                           ;pins.c: 75:                 setBit(&ANSELD, bit_val);
  3011  000468  0E3B               	movlw	59
  3012  00046A  6E11               	movwf	setBit@p^0,c
  3013  00046C  0E0F               	movlw	15
  3014  00046E  6E12               	movwf	(setBit@p+1)^0,c
  3015  000470  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3016  000474  EC6C  F00C         	call	_setBit	;wreg free
  3017                           
  3018                           ;pins.c: 76:                 break;
  3019  000478  EF47  F004         	goto	l132
  3020  00047C                     l4696:
  3021                           
  3022                           ;pins.c: 78:                 setBit(&TRISE, bit_val);
  3023  00047C  0E96               	movlw	150
  3024  00047E  6E11               	movwf	setBit@p^0,c
  3025  000480  0E0F               	movlw	15
  3026  000482  6E12               	movwf	(setBit@p+1)^0,c
  3027  000484  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3028  000488  EC6C  F00C         	call	_setBit	;wreg free
  3029                           
  3030                           ;pins.c: 79:                 setBit(&ANSELE, bit_val);
  3031  00048C  0E3C               	movlw	60
  3032  00048E  6E11               	movwf	setBit@p^0,c
  3033  000490  0E0F               	movlw	15
  3034  000492  6E12               	movwf	(setBit@p+1)^0,c
  3035  000494  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3036  000498  EC6C  F00C         	call	_setBit	;wreg free
  3037                           
  3038                           ;pins.c: 80:                 break;
  3039  00049C  EF47  F004         	goto	l132
  3040  0004A0                     l4700:
  3041  0004A0  5039               	movf	pinMode@port^0,w,c
  3042  0004A2  6E36               	movwf	??_pinMode^0,c
  3043  0004A4  6A37               	clrf	(??_pinMode+1)^0,c
  3044                           
  3045                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3046                           ; Switch size 1, requested type "simple"
  3047                           ; Number of cases is 1, Range of values is 0 to 0
  3048                           ; switch strategies available:
  3049                           ; Name         Instructions Cycles
  3050                           ; simple_byte            4     3 (average)
  3051                           ;	Chosen strategy is simple_byte
  3052  0004A6  5037               	movf	(??_pinMode+1)^0,w,c
  3053  0004A8  0A00               	xorlw	0	; case 0
  3054  0004AA  B4D8               	btfsc	status,2,c
  3055  0004AC  EF5A  F002         	goto	l5362
  3056  0004B0  EF47  F004         	goto	l132
  3057  0004B4                     l5362:
  3058                           
  3059                           ; Switch size 1, requested type "simple"
  3060                           ; Number of cases is 5, Range of values is 0 to 4
  3061                           ; switch strategies available:
  3062                           ; Name         Instructions Cycles
  3063                           ; simple_byte           16     9 (average)
  3064                           ;	Chosen strategy is simple_byte
  3065  0004B4  5036               	movf	??_pinMode^0,w,c
  3066  0004B6  0A00               	xorlw	0	; case 0
  3067  0004B8  B4D8               	btfsc	status,2,c
  3068  0004BA  EFF6  F001         	goto	l4688
  3069  0004BE  0A01               	xorlw	1	; case 1
  3070  0004C0  B4D8               	btfsc	status,2,c
  3071  0004C2  EF08  F002         	goto	l4690
  3072  0004C6  0A03               	xorlw	3	; case 2
  3073  0004C8  B4D8               	btfsc	status,2,c
  3074  0004CA  EF1A  F002         	goto	l4692
  3075  0004CE  0A01               	xorlw	1	; case 3
  3076  0004D0  B4D8               	btfsc	status,2,c
  3077  0004D2  EF2C  F002         	goto	l4694
  3078  0004D6  0A07               	xorlw	7	; case 4
  3079  0004D8  B4D8               	btfsc	status,2,c
  3080  0004DA  EF3E  F002         	goto	l4696
  3081  0004DE  EF47  F004         	goto	l132
  3082  0004E2                     l4702:
  3083  0004E2  0435               	decf	pinMode@mode^0,w,c
  3084  0004E4  A4D8               	btfss	status,2,c
  3085  0004E6  EF77  F002         	goto	u4151
  3086  0004EA  EF79  F002         	goto	u4150
  3087  0004EE                     u4151:
  3088  0004EE  EF1E  F003         	goto	l4720
  3089  0004F2                     u4150:
  3090  0004F2  EFFD  F002         	goto	l4718
  3091  0004F6                     l4706:
  3092                           
  3093                           ;pins.c: 87:                 setBit(&TRISA, bit_val);
  3094  0004F6  0E92               	movlw	146
  3095  0004F8  6E11               	movwf	setBit@p^0,c
  3096  0004FA  0E0F               	movlw	15
  3097  0004FC  6E12               	movwf	(setBit@p+1)^0,c
  3098  0004FE  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3099  000502  EC6C  F00C         	call	_setBit	;wreg free
  3100                           
  3101                           ;pins.c: 88:                 clearBit(&LATA, bit_val);
  3102  000506  0E89               	movlw	137
  3103  000508  6E11               	movwf	clearBit@p^0,c
  3104  00050A  0E0F               	movlw	15
  3105  00050C  6E12               	movwf	(clearBit@p+1)^0,c
  3106  00050E  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3107  000512  EC54  F00C         	call	_clearBit	;wreg free
  3108                           
  3109                           ;pins.c: 89:                 clearBit(&ANSELA, bit_val);
  3110  000516  0E38               	movlw	56
  3111  000518  6E11               	movwf	clearBit@p^0,c
  3112  00051A  0E0F               	movlw	15
  3113  00051C  6E12               	movwf	(clearBit@p+1)^0,c
  3114  00051E  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3115  000522  EC54  F00C         	call	_clearBit	;wreg free
  3116                           
  3117                           ;pins.c: 90:                 break;
  3118  000526  EF47  F004         	goto	l132
  3119  00052A                     l4708:
  3120                           
  3121                           ;pins.c: 92:                 setBit(&TRISB, bit_val);
  3122  00052A  0E93               	movlw	147
  3123  00052C  6E11               	movwf	setBit@p^0,c
  3124  00052E  0E0F               	movlw	15
  3125  000530  6E12               	movwf	(setBit@p+1)^0,c
  3126  000532  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3127  000536  EC6C  F00C         	call	_setBit	;wreg free
  3128                           
  3129                           ;pins.c: 93:                 clearBit(&LATB, bit_val);
  3130  00053A  0E8A               	movlw	138
  3131  00053C  6E11               	movwf	clearBit@p^0,c
  3132  00053E  0E0F               	movlw	15
  3133  000540  6E12               	movwf	(clearBit@p+1)^0,c
  3134  000542  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3135  000546  EC54  F00C         	call	_clearBit	;wreg free
  3136                           
  3137                           ;pins.c: 94:                 clearBit(&ANSELB, bit_val);
  3138  00054A  0E39               	movlw	57
  3139  00054C  6E11               	movwf	clearBit@p^0,c
  3140  00054E  0E0F               	movlw	15
  3141  000550  6E12               	movwf	(clearBit@p+1)^0,c
  3142  000552  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3143  000556  EC54  F00C         	call	_clearBit	;wreg free
  3144                           
  3145                           ;pins.c: 95:                 break;
  3146  00055A  EF47  F004         	goto	l132
  3147  00055E                     l4710:
  3148                           
  3149                           ;pins.c: 97:                 setBit(&TRISC, bit_val);
  3150  00055E  0E94               	movlw	148
  3151  000560  6E11               	movwf	setBit@p^0,c
  3152  000562  0E0F               	movlw	15
  3153  000564  6E12               	movwf	(setBit@p+1)^0,c
  3154  000566  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3155  00056A  EC6C  F00C         	call	_setBit	;wreg free
  3156                           
  3157                           ;pins.c: 98:                 clearBit(&LATC, bit_val);
  3158  00056E  0E8B               	movlw	139
  3159  000570  6E11               	movwf	clearBit@p^0,c
  3160  000572  0E0F               	movlw	15
  3161  000574  6E12               	movwf	(clearBit@p+1)^0,c
  3162  000576  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3163  00057A  EC54  F00C         	call	_clearBit	;wreg free
  3164                           
  3165                           ;pins.c: 99:                 clearBit(&ANSELC, bit_val);
  3166  00057E  0E3A               	movlw	58
  3167  000580  6E11               	movwf	clearBit@p^0,c
  3168  000582  0E0F               	movlw	15
  3169  000584  6E12               	movwf	(clearBit@p+1)^0,c
  3170  000586  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3171  00058A  EC54  F00C         	call	_clearBit	;wreg free
  3172                           
  3173                           ;pins.c: 100:                 break;
  3174  00058E  EF47  F004         	goto	l132
  3175  000592                     l4712:
  3176                           
  3177                           ;pins.c: 102:                 setBit(&TRISD, bit_val);
  3178  000592  0E95               	movlw	149
  3179  000594  6E11               	movwf	setBit@p^0,c
  3180  000596  0E0F               	movlw	15
  3181  000598  6E12               	movwf	(setBit@p+1)^0,c
  3182  00059A  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3183  00059E  EC6C  F00C         	call	_setBit	;wreg free
  3184                           
  3185                           ;pins.c: 103:                 clearBit(&LATD, bit_val);
  3186  0005A2  0E8C               	movlw	140
  3187  0005A4  6E11               	movwf	clearBit@p^0,c
  3188  0005A6  0E0F               	movlw	15
  3189  0005A8  6E12               	movwf	(clearBit@p+1)^0,c
  3190  0005AA  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3191  0005AE  EC54  F00C         	call	_clearBit	;wreg free
  3192                           
  3193                           ;pins.c: 104:                 clearBit(&ANSELD, bit_val);
  3194  0005B2  0E3B               	movlw	59
  3195  0005B4  6E11               	movwf	clearBit@p^0,c
  3196  0005B6  0E0F               	movlw	15
  3197  0005B8  6E12               	movwf	(clearBit@p+1)^0,c
  3198  0005BA  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3199  0005BE  EC54  F00C         	call	_clearBit	;wreg free
  3200                           
  3201                           ;pins.c: 105:                 break;
  3202  0005C2  EF47  F004         	goto	l132
  3203  0005C6                     l4714:
  3204                           
  3205                           ;pins.c: 107:                 setBit(&TRISE, bit_val);
  3206  0005C6  0E96               	movlw	150
  3207  0005C8  6E11               	movwf	setBit@p^0,c
  3208  0005CA  0E0F               	movlw	15
  3209  0005CC  6E12               	movwf	(setBit@p+1)^0,c
  3210  0005CE  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3211  0005D2  EC6C  F00C         	call	_setBit	;wreg free
  3212                           
  3213                           ;pins.c: 108:                 clearBit(&LATE, bit_val);
  3214  0005D6  0E8D               	movlw	141
  3215  0005D8  6E11               	movwf	clearBit@p^0,c
  3216  0005DA  0E0F               	movlw	15
  3217  0005DC  6E12               	movwf	(clearBit@p+1)^0,c
  3218  0005DE  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3219  0005E2  EC54  F00C         	call	_clearBit	;wreg free
  3220                           
  3221                           ;pins.c: 109:                 clearBit(&ANSELE, bit_val);
  3222  0005E6  0E3C               	movlw	60
  3223  0005E8  6E11               	movwf	clearBit@p^0,c
  3224  0005EA  0E0F               	movlw	15
  3225  0005EC  6E12               	movwf	(clearBit@p+1)^0,c
  3226  0005EE  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3227  0005F2  EC54  F00C         	call	_clearBit	;wreg free
  3228                           
  3229                           ;pins.c: 110:                 break;
  3230  0005F6  EF47  F004         	goto	l132
  3231  0005FA                     l4718:
  3232  0005FA  5039               	movf	pinMode@port^0,w,c
  3233  0005FC  6E36               	movwf	??_pinMode^0,c
  3234  0005FE  6A37               	clrf	(??_pinMode+1)^0,c
  3235                           
  3236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3237                           ; Switch size 1, requested type "simple"
  3238                           ; Number of cases is 1, Range of values is 0 to 0
  3239                           ; switch strategies available:
  3240                           ; Name         Instructions Cycles
  3241                           ; simple_byte            4     3 (average)
  3242                           ;	Chosen strategy is simple_byte
  3243  000600  5037               	movf	(??_pinMode+1)^0,w,c
  3244  000602  0A00               	xorlw	0	; case 0
  3245  000604  B4D8               	btfsc	status,2,c
  3246  000606  EF07  F003         	goto	l5364
  3247  00060A  EF47  F004         	goto	l132
  3248  00060E                     l5364:
  3249                           
  3250                           ; Switch size 1, requested type "simple"
  3251                           ; Number of cases is 5, Range of values is 0 to 4
  3252                           ; switch strategies available:
  3253                           ; Name         Instructions Cycles
  3254                           ; simple_byte           16     9 (average)
  3255                           ;	Chosen strategy is simple_byte
  3256  00060E  5036               	movf	??_pinMode^0,w,c
  3257  000610  0A00               	xorlw	0	; case 0
  3258  000612  B4D8               	btfsc	status,2,c
  3259  000614  EF7B  F002         	goto	l4706
  3260  000618  0A01               	xorlw	1	; case 1
  3261  00061A  B4D8               	btfsc	status,2,c
  3262  00061C  EF95  F002         	goto	l4708
  3263  000620  0A03               	xorlw	3	; case 2
  3264  000622  B4D8               	btfsc	status,2,c
  3265  000624  EFAF  F002         	goto	l4710
  3266  000628  0A01               	xorlw	1	; case 3
  3267  00062A  B4D8               	btfsc	status,2,c
  3268  00062C  EFC9  F002         	goto	l4712
  3269  000630  0A07               	xorlw	7	; case 4
  3270  000632  B4D8               	btfsc	status,2,c
  3271  000634  EFE3  F002         	goto	l4714
  3272  000638  EF47  F004         	goto	l132
  3273  00063C                     l4720:
  3274  00063C  0E02               	movlw	2
  3275  00063E  1835               	xorwf	pinMode@mode^0,w,c
  3276  000640  A4D8               	btfss	status,2,c
  3277  000642  EF25  F003         	goto	u4161
  3278  000646  EF27  F003         	goto	u4160
  3279  00064A                     u4161:
  3280  00064A  EF26  F004         	goto	l4750
  3281  00064E                     u4160:
  3282  00064E  EFAB  F003         	goto	l4736
  3283  000652                     l4724:
  3284                           
  3285                           ;pins.c: 117:                 setBit(&TRISA, bit_val);
  3286  000652  0E92               	movlw	146
  3287  000654  6E11               	movwf	setBit@p^0,c
  3288  000656  0E0F               	movlw	15
  3289  000658  6E12               	movwf	(setBit@p+1)^0,c
  3290  00065A  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3291  00065E  EC6C  F00C         	call	_setBit	;wreg free
  3292                           
  3293                           ;pins.c: 118:                 setBit(&LATA, bit_val);
  3294  000662  0E89               	movlw	137
  3295  000664  6E11               	movwf	setBit@p^0,c
  3296  000666  0E0F               	movlw	15
  3297  000668  6E12               	movwf	(setBit@p+1)^0,c
  3298  00066A  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3299  00066E  EC6C  F00C         	call	_setBit	;wreg free
  3300                           
  3301                           ;pins.c: 119:                 clearBit(&ANSELA, bit_val);
  3302  000672  0E38               	movlw	56
  3303  000674  6E11               	movwf	clearBit@p^0,c
  3304  000676  0E0F               	movlw	15
  3305  000678  6E12               	movwf	(clearBit@p+1)^0,c
  3306  00067A  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3307  00067E  EC54  F00C         	call	_clearBit	;wreg free
  3308                           
  3309                           ;pins.c: 120:                 break;
  3310  000682  EF47  F004         	goto	l132
  3311  000686                     l4726:
  3312                           
  3313                           ;pins.c: 122:                 setBit(&TRISB, bit_val);
  3314  000686  0E93               	movlw	147
  3315  000688  6E11               	movwf	setBit@p^0,c
  3316  00068A  0E0F               	movlw	15
  3317  00068C  6E12               	movwf	(setBit@p+1)^0,c
  3318  00068E  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3319  000692  EC6C  F00C         	call	_setBit	;wreg free
  3320                           
  3321                           ;pins.c: 123:                 setBit(&LATB, bit_val);
  3322  000696  0E8A               	movlw	138
  3323  000698  6E11               	movwf	setBit@p^0,c
  3324  00069A  0E0F               	movlw	15
  3325  00069C  6E12               	movwf	(setBit@p+1)^0,c
  3326  00069E  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3327  0006A2  EC6C  F00C         	call	_setBit	;wreg free
  3328                           
  3329                           ;pins.c: 124:                 clearBit(&ANSELB, bit_val);
  3330  0006A6  0E39               	movlw	57
  3331  0006A8  6E11               	movwf	clearBit@p^0,c
  3332  0006AA  0E0F               	movlw	15
  3333  0006AC  6E12               	movwf	(clearBit@p+1)^0,c
  3334  0006AE  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3335  0006B2  EC54  F00C         	call	_clearBit	;wreg free
  3336                           
  3337                           ;pins.c: 125:                 break;
  3338  0006B6  EF47  F004         	goto	l132
  3339  0006BA                     l4728:
  3340                           
  3341                           ;pins.c: 127:                 setBit(&TRISC, bit_val);
  3342  0006BA  0E94               	movlw	148
  3343  0006BC  6E11               	movwf	setBit@p^0,c
  3344  0006BE  0E0F               	movlw	15
  3345  0006C0  6E12               	movwf	(setBit@p+1)^0,c
  3346  0006C2  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3347  0006C6  EC6C  F00C         	call	_setBit	;wreg free
  3348                           
  3349                           ;pins.c: 128:                 setBit(&LATC, bit_val);
  3350  0006CA  0E8B               	movlw	139
  3351  0006CC  6E11               	movwf	setBit@p^0,c
  3352  0006CE  0E0F               	movlw	15
  3353  0006D0  6E12               	movwf	(setBit@p+1)^0,c
  3354  0006D2  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3355  0006D6  EC6C  F00C         	call	_setBit	;wreg free
  3356                           
  3357                           ;pins.c: 129:                 clearBit(&ANSELC, bit_val);
  3358  0006DA  0E3A               	movlw	58
  3359  0006DC  6E11               	movwf	clearBit@p^0,c
  3360  0006DE  0E0F               	movlw	15
  3361  0006E0  6E12               	movwf	(clearBit@p+1)^0,c
  3362  0006E2  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3363  0006E6  EC54  F00C         	call	_clearBit	;wreg free
  3364                           
  3365                           ;pins.c: 130:                 break;
  3366  0006EA  EF47  F004         	goto	l132
  3367  0006EE                     l4730:
  3368                           
  3369                           ;pins.c: 132:                 setBit(&TRISD, bit_val);
  3370  0006EE  0E95               	movlw	149
  3371  0006F0  6E11               	movwf	setBit@p^0,c
  3372  0006F2  0E0F               	movlw	15
  3373  0006F4  6E12               	movwf	(setBit@p+1)^0,c
  3374  0006F6  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3375  0006FA  EC6C  F00C         	call	_setBit	;wreg free
  3376                           
  3377                           ;pins.c: 133:                 setBit(&LATD, bit_val);
  3378  0006FE  0E8C               	movlw	140
  3379  000700  6E11               	movwf	setBit@p^0,c
  3380  000702  0E0F               	movlw	15
  3381  000704  6E12               	movwf	(setBit@p+1)^0,c
  3382  000706  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3383  00070A  EC6C  F00C         	call	_setBit	;wreg free
  3384                           
  3385                           ;pins.c: 134:                 clearBit(&ANSELD, bit_val);
  3386  00070E  0E3B               	movlw	59
  3387  000710  6E11               	movwf	clearBit@p^0,c
  3388  000712  0E0F               	movlw	15
  3389  000714  6E12               	movwf	(clearBit@p+1)^0,c
  3390  000716  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3391  00071A  EC54  F00C         	call	_clearBit	;wreg free
  3392                           
  3393                           ;pins.c: 135:                 break;
  3394  00071E  EF47  F004         	goto	l132
  3395  000722                     l4732:
  3396                           
  3397                           ;pins.c: 137:                 setBit(&TRISE, bit_val);
  3398  000722  0E96               	movlw	150
  3399  000724  6E11               	movwf	setBit@p^0,c
  3400  000726  0E0F               	movlw	15
  3401  000728  6E12               	movwf	(setBit@p+1)^0,c
  3402  00072A  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3403  00072E  EC6C  F00C         	call	_setBit	;wreg free
  3404                           
  3405                           ;pins.c: 138:                 setBit(&LATE, bit_val);
  3406  000732  0E8D               	movlw	141
  3407  000734  6E11               	movwf	setBit@p^0,c
  3408  000736  0E0F               	movlw	15
  3409  000738  6E12               	movwf	(setBit@p+1)^0,c
  3410  00073A  C03B  F013         	movff	pinMode@bit_val,setBit@b
  3411  00073E  EC6C  F00C         	call	_setBit	;wreg free
  3412                           
  3413                           ;pins.c: 139:                 clearBit(&ANSELE, bit_val);
  3414  000742  0E3C               	movlw	60
  3415  000744  6E11               	movwf	clearBit@p^0,c
  3416  000746  0E0F               	movlw	15
  3417  000748  6E12               	movwf	(clearBit@p+1)^0,c
  3418  00074A  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3419  00074E  EC54  F00C         	call	_clearBit	;wreg free
  3420                           
  3421                           ;pins.c: 140:                 break;
  3422  000752  EF47  F004         	goto	l132
  3423  000756                     l4736:
  3424  000756  5039               	movf	pinMode@port^0,w,c
  3425  000758  6E36               	movwf	??_pinMode^0,c
  3426  00075A  6A37               	clrf	(??_pinMode+1)^0,c
  3427                           
  3428                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3429                           ; Switch size 1, requested type "simple"
  3430                           ; Number of cases is 1, Range of values is 0 to 0
  3431                           ; switch strategies available:
  3432                           ; Name         Instructions Cycles
  3433                           ; simple_byte            4     3 (average)
  3434                           ;	Chosen strategy is simple_byte
  3435  00075C  5037               	movf	(??_pinMode+1)^0,w,c
  3436  00075E  0A00               	xorlw	0	; case 0
  3437  000760  B4D8               	btfsc	status,2,c
  3438  000762  EFB5  F003         	goto	l5366
  3439  000766  EF47  F004         	goto	l132
  3440  00076A                     l5366:
  3441                           
  3442                           ; Switch size 1, requested type "simple"
  3443                           ; Number of cases is 5, Range of values is 0 to 4
  3444                           ; switch strategies available:
  3445                           ; Name         Instructions Cycles
  3446                           ; simple_byte           16     9 (average)
  3447                           ;	Chosen strategy is simple_byte
  3448  00076A  5036               	movf	??_pinMode^0,w,c
  3449  00076C  0A00               	xorlw	0	; case 0
  3450  00076E  B4D8               	btfsc	status,2,c
  3451  000770  EF29  F003         	goto	l4724
  3452  000774  0A01               	xorlw	1	; case 1
  3453  000776  B4D8               	btfsc	status,2,c
  3454  000778  EF43  F003         	goto	l4726
  3455  00077C  0A03               	xorlw	3	; case 2
  3456  00077E  B4D8               	btfsc	status,2,c
  3457  000780  EF5D  F003         	goto	l4728
  3458  000784  0A01               	xorlw	1	; case 3
  3459  000786  B4D8               	btfsc	status,2,c
  3460  000788  EF77  F003         	goto	l4730
  3461  00078C  0A07               	xorlw	7	; case 4
  3462  00078E  B4D8               	btfsc	status,2,c
  3463  000790  EF91  F003         	goto	l4732
  3464  000794  EF47  F004         	goto	l132
  3465  000798                     l4738:
  3466                           
  3467                           ;pins.c: 147:                 clearBit(&TRISA, bit_val);
  3468  000798  0E92               	movlw	146
  3469  00079A  6E11               	movwf	clearBit@p^0,c
  3470  00079C  0E0F               	movlw	15
  3471  00079E  6E12               	movwf	(clearBit@p+1)^0,c
  3472  0007A0  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3473  0007A4  EC54  F00C         	call	_clearBit	;wreg free
  3474                           
  3475                           ;pins.c: 148:                 clearBit(&ANSELA, bit_val);
  3476  0007A8  0E38               	movlw	56
  3477  0007AA  6E11               	movwf	clearBit@p^0,c
  3478  0007AC  0E0F               	movlw	15
  3479  0007AE  6E12               	movwf	(clearBit@p+1)^0,c
  3480  0007B0  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3481  0007B4  EC54  F00C         	call	_clearBit	;wreg free
  3482                           
  3483                           ;pins.c: 149:                 break;
  3484  0007B8  EF47  F004         	goto	l132
  3485  0007BC                     l4740:
  3486                           
  3487                           ;pins.c: 151:                 clearBit(&TRISB, bit_val);
  3488  0007BC  0E93               	movlw	147
  3489  0007BE  6E11               	movwf	clearBit@p^0,c
  3490  0007C0  0E0F               	movlw	15
  3491  0007C2  6E12               	movwf	(clearBit@p+1)^0,c
  3492  0007C4  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3493  0007C8  EC54  F00C         	call	_clearBit	;wreg free
  3494                           
  3495                           ;pins.c: 152:                 clearBit(&ANSELB, bit_val);
  3496  0007CC  0E39               	movlw	57
  3497  0007CE  6E11               	movwf	clearBit@p^0,c
  3498  0007D0  0E0F               	movlw	15
  3499  0007D2  6E12               	movwf	(clearBit@p+1)^0,c
  3500  0007D4  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3501  0007D8  EC54  F00C         	call	_clearBit	;wreg free
  3502                           
  3503                           ;pins.c: 153:                 break;
  3504  0007DC  EF47  F004         	goto	l132
  3505  0007E0                     l4742:
  3506                           
  3507                           ;pins.c: 155:                 clearBit(&TRISC, bit_val);
  3508  0007E0  0E94               	movlw	148
  3509  0007E2  6E11               	movwf	clearBit@p^0,c
  3510  0007E4  0E0F               	movlw	15
  3511  0007E6  6E12               	movwf	(clearBit@p+1)^0,c
  3512  0007E8  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3513  0007EC  EC54  F00C         	call	_clearBit	;wreg free
  3514                           
  3515                           ;pins.c: 156:                 clearBit(&ANSELC, bit_val);
  3516  0007F0  0E3A               	movlw	58
  3517  0007F2  6E11               	movwf	clearBit@p^0,c
  3518  0007F4  0E0F               	movlw	15
  3519  0007F6  6E12               	movwf	(clearBit@p+1)^0,c
  3520  0007F8  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3521  0007FC  EC54  F00C         	call	_clearBit	;wreg free
  3522                           
  3523                           ;pins.c: 157:                 break;
  3524  000800  EF47  F004         	goto	l132
  3525  000804                     l4744:
  3526                           
  3527                           ;pins.c: 159:                 clearBit(&TRISD, bit_val);
  3528  000804  0E95               	movlw	149
  3529  000806  6E11               	movwf	clearBit@p^0,c
  3530  000808  0E0F               	movlw	15
  3531  00080A  6E12               	movwf	(clearBit@p+1)^0,c
  3532  00080C  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3533  000810  EC54  F00C         	call	_clearBit	;wreg free
  3534                           
  3535                           ;pins.c: 160:                 clearBit(&ANSELD, bit_val);
  3536  000814  0E3B               	movlw	59
  3537  000816  6E11               	movwf	clearBit@p^0,c
  3538  000818  0E0F               	movlw	15
  3539  00081A  6E12               	movwf	(clearBit@p+1)^0,c
  3540  00081C  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3541  000820  EC54  F00C         	call	_clearBit	;wreg free
  3542                           
  3543                           ;pins.c: 161:                 break;
  3544  000824  EF47  F004         	goto	l132
  3545  000828                     l4746:
  3546                           
  3547                           ;pins.c: 163:                 clearBit(&TRISA, bit_val);
  3548  000828  0E92               	movlw	146
  3549  00082A  6E11               	movwf	clearBit@p^0,c
  3550  00082C  0E0F               	movlw	15
  3551  00082E  6E12               	movwf	(clearBit@p+1)^0,c
  3552  000830  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3553  000834  EC54  F00C         	call	_clearBit	;wreg free
  3554                           
  3555                           ;pins.c: 164:                 clearBit(&ANSELE, bit_val);
  3556  000838  0E3C               	movlw	60
  3557  00083A  6E11               	movwf	clearBit@p^0,c
  3558  00083C  0E0F               	movlw	15
  3559  00083E  6E12               	movwf	(clearBit@p+1)^0,c
  3560  000840  C03B  F013         	movff	pinMode@bit_val,clearBit@b
  3561  000844  EC54  F00C         	call	_clearBit	;wreg free
  3562                           
  3563                           ;pins.c: 165:                 break;
  3564  000848  EF47  F004         	goto	l132
  3565  00084C                     l4750:
  3566  00084C  5039               	movf	pinMode@port^0,w,c
  3567  00084E  6E36               	movwf	??_pinMode^0,c
  3568  000850  6A37               	clrf	(??_pinMode+1)^0,c
  3569                           
  3570                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3571                           ; Switch size 1, requested type "simple"
  3572                           ; Number of cases is 1, Range of values is 0 to 0
  3573                           ; switch strategies available:
  3574                           ; Name         Instructions Cycles
  3575                           ; simple_byte            4     3 (average)
  3576                           ;	Chosen strategy is simple_byte
  3577  000852  5037               	movf	(??_pinMode+1)^0,w,c
  3578  000854  0A00               	xorlw	0	; case 0
  3579  000856  B4D8               	btfsc	status,2,c
  3580  000858  EF30  F004         	goto	l5368
  3581  00085C  EF47  F004         	goto	l132
  3582  000860                     l5368:
  3583                           
  3584                           ; Switch size 1, requested type "simple"
  3585                           ; Number of cases is 5, Range of values is 0 to 4
  3586                           ; switch strategies available:
  3587                           ; Name         Instructions Cycles
  3588                           ; simple_byte           16     9 (average)
  3589                           ;	Chosen strategy is simple_byte
  3590  000860  5036               	movf	??_pinMode^0,w,c
  3591  000862  0A00               	xorlw	0	; case 0
  3592  000864  B4D8               	btfsc	status,2,c
  3593  000866  EFCC  F003         	goto	l4738
  3594  00086A  0A01               	xorlw	1	; case 1
  3595  00086C  B4D8               	btfsc	status,2,c
  3596  00086E  EFDE  F003         	goto	l4740
  3597  000872  0A03               	xorlw	3	; case 2
  3598  000874  B4D8               	btfsc	status,2,c
  3599  000876  EFF0  F003         	goto	l4742
  3600  00087A  0A01               	xorlw	1	; case 3
  3601  00087C  B4D8               	btfsc	status,2,c
  3602  00087E  EF02  F004         	goto	l4744
  3603  000882  0A07               	xorlw	7	; case 4
  3604  000884  B4D8               	btfsc	status,2,c
  3605  000886  EF14  F004         	goto	l4746
  3606  00088A  EF47  F004         	goto	l132
  3607  00088E                     l132:
  3608  00088E  0012               	return		;funcret
  3609  000890                     __end_of_pinMode:
  3610                           	callstack 0
  3611                           
  3612 ;; *************** function _setBit *****************
  3613 ;; Defined at:
  3614 ;;		line 31 in file "bits.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;  p               2   16[COMRAM] PTR volatile unsigned ch
  3617 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  3618 ;;		 -> LATA(1), ANSELE(1), TRISE(1), ANSELD(1), 
  3619 ;;		 -> TRISD(1), ANSELC(1), TRISC(1), ANSELB(1), 
  3620 ;;		 -> TRISB(1), ANSELA(1), TRISA(1), 
  3621 ;;  b               1   18[COMRAM] unsigned char 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3633 ;;      Params:         3       0       0       0
  3634 ;;      Locals:         0       0       0       0
  3635 ;;      Temps:          1       0       0       0
  3636 ;;      Totals:         4       0       0       0
  3637 ;;Total ram usage:        4 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 4
  3640 ;; This function calls:
  3641 ;;		_bitValue
  3642 ;; This function is called by:
  3643 ;;		_pinMode
  3644 ;;		_digitalWrite
  3645 ;;		_analogWrite
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text14
  3650  0018D8                     __ptext14:
  3651                           	callstack 0
  3652  0018D8                     _setBit:
  3653                           	callstack 25
  3654  0018D8                     
  3655                           ;bits.c: 32:     *p |= bitValue(b);
  3656  0018D8  5013               	movf	setBit@b^0,w,c
  3657  0018DA  EC45  F00C         	call	_bitValue
  3658  0018DE  6E14               	movwf	??_setBit^0,c
  3659  0018E0  C011  FFD9         	movff	setBit@p,fsr2l
  3660  0018E4  C012  FFDA         	movff	setBit@p+1,fsr2h
  3661  0018E8  5014               	movf	??_setBit^0,w,c
  3662  0018EA  12DF               	iorwf	indf2,f,c
  3663  0018EC  0012               	return		;funcret
  3664  0018EE                     __end_of_setBit:
  3665                           	callstack 0
  3666                           
  3667 ;; *************** function _clearBit *****************
  3668 ;; Defined at:
  3669 ;;		line 35 in file "bits.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  p               2   16[COMRAM] PTR volatile unsigned ch
  3672 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  3673 ;;		 -> LATA(1), ANSELE(1), TRISE(1), ANSELD(1), 
  3674 ;;		 -> TRISD(1), ANSELC(1), TRISC(1), ANSELB(1), 
  3675 ;;		 -> TRISB(1), ANSELA(1), TRISA(1), 
  3676 ;;  b               1   18[COMRAM] unsigned char 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3688 ;;      Params:         3       0       0       0
  3689 ;;      Locals:         0       0       0       0
  3690 ;;      Temps:          1       0       0       0
  3691 ;;      Totals:         4       0       0       0
  3692 ;;Total ram usage:        4 bytes
  3693 ;; Hardware stack levels used: 1
  3694 ;; Hardware stack levels required when called: 4
  3695 ;; This function calls:
  3696 ;;		_bitValue
  3697 ;; This function is called by:
  3698 ;;		_pinMode
  3699 ;;		_digitalWrite
  3700 ;;		_analogWrite
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text15
  3705  0018A8                     __ptext15:
  3706                           	callstack 0
  3707  0018A8                     _clearBit:
  3708                           	callstack 25
  3709  0018A8                     
  3710                           ;bits.c: 36:     *p |= ~bitValue(b);
  3711  0018A8  5013               	movf	clearBit@b^0,w,c
  3712  0018AA  EC45  F00C         	call	_bitValue
  3713  0018AE  0AFF               	xorlw	255
  3714  0018B0  6E14               	movwf	??_clearBit^0,c
  3715  0018B2  C011  FFD9         	movff	clearBit@p,fsr2l
  3716  0018B6  C012  FFDA         	movff	clearBit@p+1,fsr2h
  3717  0018BA  5014               	movf	??_clearBit^0,w,c
  3718  0018BC  12DF               	iorwf	indf2,f,c
  3719  0018BE  0012               	return		;funcret
  3720  0018C0                     __end_of_clearBit:
  3721                           	callstack 0
  3722                           
  3723 ;; *************** function _digitalRead *****************
  3724 ;; Defined at:
  3725 ;;		line 172 in file "pins.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  pin             1    wreg     unsigned char 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;  pin             1   54[COMRAM] unsigned char 
  3730 ;;  bit_val         1   58[COMRAM] unsigned char 
  3731 ;;  value           1   57[COMRAM] enum E6032
  3732 ;;  port_num        1   56[COMRAM] unsigned char 
  3733 ;;  port            1   55[COMRAM] enum E6026
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      enum E6032
  3736 ;; Registers used:
  3737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3743 ;;      Params:         0       0       0       0
  3744 ;;      Locals:         5       0       0       0
  3745 ;;      Temps:          2       0       0       0
  3746 ;;      Totals:         7       0       0       0
  3747 ;;Total ram usage:        7 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 4
  3750 ;; This function calls:
  3751 ;;		_convertToBit
  3752 ;;		_convertToPort
  3753 ;;		_pinToIndex
  3754 ;;		_readBit
  3755 ;; This function is called by:
  3756 ;;		_main
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text16
  3761  001014                     __ptext16:
  3762                           	callstack 0
  3763  001014                     _digitalRead:
  3764                           	callstack 26
  3765                           
  3766                           ;incstack = 0
  3767                           ;digitalRead@pin stored from wreg
  3768  001014  6E37               	movwf	digitalRead@pin^0,c
  3769  001016                     
  3770                           ;pins.c: 173:     uint8_t port_num = pinToIndex(pin);
  3771  001016  5037               	movf	digitalRead@pin^0,w,c
  3772  001018  EC1F  F00B         	call	_pinToIndex
  3773  00101C  6E39               	movwf	digitalRead@port_num^0,c
  3774  00101E                     
  3775                           ;pins.c: 174:     enum ports port = convertToPort(port_num);
  3776  00101E  5039               	movf	digitalRead@port_num^0,w,c
  3777  001020  ECC5  F009         	call	_convertToPort
  3778  001024  6E38               	movwf	digitalRead@port^0,c
  3779  001026                     
  3780                           ;pins.c: 175:     uint8_t bit_val = convertToBit(port_num);
  3781  001026  5039               	movf	digitalRead@port_num^0,w,c
  3782  001028  EC7A  F009         	call	_convertToBit
  3783  00102C  6E3B               	movwf	digitalRead@bit_val^0,c
  3784                           
  3785                           ;pins.c: 176:     enum values value;;pins.c: 178:     switch (port) {
  3786  00102E  EF50  F008         	goto	l4786
  3787  001032                     l4774:
  3788                           
  3789                           ;pins.c: 180:             value = readBit(&PORTA, bit_val);
  3790  001032  0E80               	movlw	128
  3791  001034  6E0E               	movwf	readBit@p^0,c
  3792  001036  0E0F               	movlw	15
  3793  001038  6E0F               	movwf	(readBit@p+1)^0,c
  3794  00103A  C03B  F010         	movff	digitalRead@bit_val,readBit@b
  3795  00103E  EC10  F00C         	call	_readBit	;wreg free
  3796  001042  6E3A               	movwf	digitalRead@value^0,c
  3797                           
  3798                           ;pins.c: 181:             break;
  3799  001044  EF71  F008         	goto	l4788
  3800  001048                     l4776:
  3801                           
  3802                           ;pins.c: 183:             value = readBit(&PORTB, bit_val);
  3803  001048  0E81               	movlw	129
  3804  00104A  6E0E               	movwf	readBit@p^0,c
  3805  00104C  0E0F               	movlw	15
  3806  00104E  6E0F               	movwf	(readBit@p+1)^0,c
  3807  001050  C03B  F010         	movff	digitalRead@bit_val,readBit@b
  3808  001054  EC10  F00C         	call	_readBit	;wreg free
  3809  001058  6E3A               	movwf	digitalRead@value^0,c
  3810                           
  3811                           ;pins.c: 184:             break;
  3812  00105A  EF71  F008         	goto	l4788
  3813  00105E                     l4778:
  3814                           
  3815                           ;pins.c: 186:             value = readBit(&PORTC, bit_val);
  3816  00105E  0E82               	movlw	130
  3817  001060  6E0E               	movwf	readBit@p^0,c
  3818  001062  0E0F               	movlw	15
  3819  001064  6E0F               	movwf	(readBit@p+1)^0,c
  3820  001066  C03B  F010         	movff	digitalRead@bit_val,readBit@b
  3821  00106A  EC10  F00C         	call	_readBit	;wreg free
  3822  00106E  6E3A               	movwf	digitalRead@value^0,c
  3823                           
  3824                           ;pins.c: 187:             break;
  3825  001070  EF71  F008         	goto	l4788
  3826  001074                     l4780:
  3827                           
  3828                           ;pins.c: 189:             value = readBit(&PORTD, bit_val);
  3829  001074  0E83               	movlw	131
  3830  001076  6E0E               	movwf	readBit@p^0,c
  3831  001078  0E0F               	movlw	15
  3832  00107A  6E0F               	movwf	(readBit@p+1)^0,c
  3833  00107C  C03B  F010         	movff	digitalRead@bit_val,readBit@b
  3834  001080  EC10  F00C         	call	_readBit	;wreg free
  3835  001084  6E3A               	movwf	digitalRead@value^0,c
  3836                           
  3837                           ;pins.c: 190:             break;
  3838  001086  EF71  F008         	goto	l4788
  3839  00108A                     l4782:
  3840                           
  3841                           ;pins.c: 192:             value = readBit(&PORTE, bit_val);
  3842  00108A  0E84               	movlw	132
  3843  00108C  6E0E               	movwf	readBit@p^0,c
  3844  00108E  0E0F               	movlw	15
  3845  001090  6E0F               	movwf	(readBit@p+1)^0,c
  3846  001092  C03B  F010         	movff	digitalRead@bit_val,readBit@b
  3847  001096  EC10  F00C         	call	_readBit	;wreg free
  3848  00109A  6E3A               	movwf	digitalRead@value^0,c
  3849                           
  3850                           ;pins.c: 193:             break;
  3851  00109C  EF71  F008         	goto	l4788
  3852  0010A0                     l4786:
  3853  0010A0  5038               	movf	digitalRead@port^0,w,c
  3854  0010A2  6E35               	movwf	??_digitalRead^0,c
  3855  0010A4  6A36               	clrf	(??_digitalRead+1)^0,c
  3856                           
  3857                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3858                           ; Switch size 1, requested type "simple"
  3859                           ; Number of cases is 1, Range of values is 0 to 0
  3860                           ; switch strategies available:
  3861                           ; Name         Instructions Cycles
  3862                           ; simple_byte            4     3 (average)
  3863                           ;	Chosen strategy is simple_byte
  3864  0010A6  5036               	movf	(??_digitalRead+1)^0,w,c
  3865  0010A8  0A00               	xorlw	0	; case 0
  3866  0010AA  B4D8               	btfsc	status,2,c
  3867  0010AC  EF5A  F008         	goto	l5370
  3868  0010B0  EF71  F008         	goto	l4788
  3869  0010B4                     l5370:
  3870                           
  3871                           ; Switch size 1, requested type "simple"
  3872                           ; Number of cases is 5, Range of values is 0 to 4
  3873                           ; switch strategies available:
  3874                           ; Name         Instructions Cycles
  3875                           ; simple_byte           16     9 (average)
  3876                           ;	Chosen strategy is simple_byte
  3877  0010B4  5035               	movf	??_digitalRead^0,w,c
  3878  0010B6  0A00               	xorlw	0	; case 0
  3879  0010B8  B4D8               	btfsc	status,2,c
  3880  0010BA  EF19  F008         	goto	l4774
  3881  0010BE  0A01               	xorlw	1	; case 1
  3882  0010C0  B4D8               	btfsc	status,2,c
  3883  0010C2  EF24  F008         	goto	l4776
  3884  0010C6  0A03               	xorlw	3	; case 2
  3885  0010C8  B4D8               	btfsc	status,2,c
  3886  0010CA  EF2F  F008         	goto	l4778
  3887  0010CE  0A01               	xorlw	1	; case 3
  3888  0010D0  B4D8               	btfsc	status,2,c
  3889  0010D2  EF3A  F008         	goto	l4780
  3890  0010D6  0A07               	xorlw	7	; case 4
  3891  0010D8  B4D8               	btfsc	status,2,c
  3892  0010DA  EF45  F008         	goto	l4782
  3893  0010DE  EF71  F008         	goto	l4788
  3894  0010E2                     l4788:
  3895                           
  3896                           ;pins.c: 197:     return value;
  3897  0010E2  503A               	movf	digitalRead@value^0,w,c
  3898  0010E4  0012               	return		;funcret
  3899  0010E6                     __end_of_digitalRead:
  3900                           	callstack 0
  3901                           
  3902 ;; *************** function _readBit *****************
  3903 ;; Defined at:
  3904 ;;		line 39 in file "bits.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  p               2   13[COMRAM] PTR volatile unsigned ch
  3907 ;;		 -> PORTE(1), PORTD(1), PORTC(1), PORTB(1), 
  3908 ;;		 -> PORTA(1), ANSELE(1), ANSELD(1), ANSELC(1), 
  3909 ;;		 -> ANSELB(1), ANSELA(1), 
  3910 ;;  b               1   15[COMRAM] unsigned char 
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      unsigned char 
  3915 ;; Registers used:
  3916 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3922 ;;      Params:         3       0       0       0
  3923 ;;      Locals:         0       0       0       0
  3924 ;;      Temps:          2       0       0       0
  3925 ;;      Totals:         5       0       0       0
  3926 ;;Total ram usage:        5 bytes
  3927 ;; Hardware stack levels used: 1
  3928 ;; Hardware stack levels required when called: 3
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_digitalRead
  3933 ;;		_isAnalog
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text17
  3938  001820                     __ptext17:
  3939                           	callstack 0
  3940  001820                     _readBit:
  3941                           	callstack 26
  3942  001820                     
  3943                           ;bits.c: 40:     return (*p >> b) & 0x01;
  3944  001820  C010  F011         	movff	readBit@b,??_readBit
  3945  001824  C00E  FFD9         	movff	readBit@p,fsr2l
  3946  001828  C00F  FFDA         	movff	readBit@p+1,fsr2h
  3947  00182C  50DF               	movf	indf2,w,c
  3948  00182E  6E12               	movwf	(??_readBit+1)^0,c
  3949  001830  2A11               	incf	??_readBit^0,f,c
  3950  001832  EF1D  F00C         	goto	u3924
  3951  001836                     u3925:
  3952  001836  90D8               	bcf	status,0,c
  3953  001838  3212               	rrcf	(??_readBit+1)^0,f,c
  3954  00183A                     u3924:
  3955  00183A  2E11               	decfsz	??_readBit^0,f,c
  3956  00183C  EF1B  F00C         	goto	u3925
  3957  001840  5012               	movf	(??_readBit+1)^0,w,c
  3958  001842  0B01               	andlw	1
  3959  001844  0012               	return		;funcret
  3960  001846                     __end_of_readBit:
  3961                           	callstack 0
  3962                           
  3963 ;; *************** function _pinToIndex *****************
  3964 ;; Defined at:
  3965 ;;		line 3 in file "pins.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  pin             1    wreg     unsigned char 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;  pin             1   50[COMRAM] unsigned char 
  3970 ;;  pins           36   14[COMRAM] unsigned char [36]
  3971 ;;  i               1   51[COMRAM] unsigned char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      unsigned char 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3981 ;;      Params:         0       0       0       0
  3982 ;;      Locals:        38       0       0       0
  3983 ;;      Temps:          1       0       0       0
  3984 ;;      Totals:        39       0       0       0
  3985 ;;Total ram usage:       39 bytes
  3986 ;; Hardware stack levels used: 1
  3987 ;; Hardware stack levels required when called: 3
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_pinMode
  3992 ;;		_digitalRead
  3993 ;;		_digitalWrite
  3994 ;;		_analogRead
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text18
  3999  00163E                     __ptext18:
  4000                           	callstack 0
  4001  00163E                     _pinToIndex:
  4002                           	callstack 26
  4003                           
  4004                           ;incstack = 0
  4005                           ;pinToIndex@pin stored from wreg
  4006  00163E  6E33               	movwf	pinToIndex@pin^0,c
  4007  001640                     
  4008                           ;pins.c: 4:     uint8_t pins[36] = {2, 3, 4, 5, 6, 7, 14, 13,
  4009  001640  EE21  F000         	lfsr	2,pinToIndex@F6050
  4010  001644  EE10  F00F         	lfsr	1,pinToIndex@pins
  4011  001648  0E23               	movlw	35
  4012  00164A                     u3751:
  4013  00164A  CFDB FFE3          	movff	plusw2,plusw1
  4014  00164E  06E8               	decf	wreg,f,c
  4015  001650  E2FC               	bc	u3751
  4016  001652                     
  4017                           ;pins.c: 9:     uint8_t i;;pins.c: 10:     for (i = 0; i < 36; i++) {
  4018  001652  0E00               	movlw	0
  4019  001654  6E34               	movwf	pinToIndex@i^0,c
  4020  001656                     l4516:
  4021                           
  4022                           ;pins.c: 11:         if (pins[i] == pin) {
  4023  001656  0E0F               	movlw	low pinToIndex@pins
  4024  001658  2434               	addwf	pinToIndex@i^0,w,c
  4025  00165A  6ED9               	movwf	fsr2l,c
  4026  00165C  6ADA               	clrf	fsr2h,c
  4027  00165E  0E00               	movlw	high pinToIndex@pins
  4028  001660  22DA               	addwfc	fsr2h,f,c
  4029  001662  5033               	movf	pinToIndex@pin^0,w,c
  4030  001664  18DE               	xorwf	postinc2,w,c
  4031  001666  A4D8               	btfss	status,2,c
  4032  001668  EF38  F00B         	goto	u3761
  4033  00166C  EF3A  F00B         	goto	u3760
  4034  001670                     u3761:
  4035  001670  EF3C  F00B         	goto	l4520
  4036  001674                     u3760:
  4037  001674  EF45  F00B         	goto	l4524
  4038  001678                     l4520:
  4039                           
  4040                           ;pins.c: 14:     }
  4041  001678  2A34               	incf	pinToIndex@i^0,f,c
  4042  00167A  0E23               	movlw	35
  4043  00167C  6434               	cpfsgt	pinToIndex@i^0,c
  4044  00167E  EF43  F00B         	goto	u3771
  4045  001682  EF45  F00B         	goto	u3770
  4046  001686                     u3771:
  4047  001686  EF2B  F00B         	goto	l4516
  4048  00168A                     u3770:
  4049  00168A                     l4524:
  4050                           
  4051                           ;pins.c: 15:     return i;
  4052  00168A  5034               	movf	pinToIndex@i^0,w,c
  4053  00168C  0012               	return		;funcret
  4054  00168E                     __end_of_pinToIndex:
  4055                           	callstack 0
  4056                           
  4057 ;; *************** function _convertToPort *****************
  4058 ;; Defined at:
  4059 ;;		line 18 in file "pins.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  i               1    wreg     unsigned char 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  i               1   13[COMRAM] unsigned char 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  1    wreg      enum E6026
  4066 ;; Registers used:
  4067 ;;		wreg, status,2, status,0
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4073 ;;      Params:         0       0       0       0
  4074 ;;      Locals:         1       0       0       0
  4075 ;;      Temps:          0       0       0       0
  4076 ;;      Totals:         1       0       0       0
  4077 ;;Total ram usage:        1 bytes
  4078 ;; Hardware stack levels used: 1
  4079 ;; Hardware stack levels required when called: 3
  4080 ;; This function calls:
  4081 ;;		Nothing
  4082 ;; This function is called by:
  4083 ;;		_pinMode
  4084 ;;		_digitalRead
  4085 ;;		_digitalWrite
  4086 ;;		_analogRead
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text19
  4091  00138A                     __ptext19:
  4092                           	callstack 0
  4093  00138A                     _convertToPort:
  4094                           	callstack 26
  4095                           
  4096                           ;incstack = 0
  4097                           ;convertToPort@i stored from wreg
  4098  00138A  6E0E               	movwf	convertToPort@i^0,c
  4099  00138C                     
  4100                           ;pins.c: 19:     if (i >= 0 && i <= 7) {
  4101  00138C  0E08               	movlw	8
  4102  00138E  600E               	cpfslt	convertToPort@i^0,c
  4103  001390  EFCC  F009         	goto	u3781
  4104  001394  EFCE  F009         	goto	u3780
  4105  001398                     u3781:
  4106  001398  EFD1  F009         	goto	l4536
  4107  00139C                     u3780:
  4108  00139C                     
  4109                           ;pins.c: 20:         return A;
  4110  00139C  0E00               	movlw	0
  4111  00139E  EF0B  F00A         	goto	l108
  4112  0013A2                     l4536:
  4113  0013A2  0E07               	movlw	7
  4114  0013A4  640E               	cpfsgt	convertToPort@i^0,c
  4115  0013A6  EFD7  F009         	goto	u3791
  4116  0013AA  EFD9  F009         	goto	u3790
  4117  0013AE                     u3791:
  4118  0013AE  EFE4  F009         	goto	l4546
  4119  0013B2                     u3790:
  4120  0013B2  0E10               	movlw	16
  4121  0013B4  600E               	cpfslt	convertToPort@i^0,c
  4122  0013B6  EFDF  F009         	goto	u3801
  4123  0013BA  EFE1  F009         	goto	u3800
  4124  0013BE                     u3801:
  4125  0013BE  EFE4  F009         	goto	l4546
  4126  0013C2                     u3800:
  4127  0013C2                     
  4128                           ;pins.c: 22:         return B;
  4129  0013C2  0E01               	movlw	1
  4130  0013C4  EF0B  F00A         	goto	l108
  4131  0013C8                     l4546:
  4132  0013C8  0E0F               	movlw	15
  4133  0013CA  640E               	cpfsgt	convertToPort@i^0,c
  4134  0013CC  EFEA  F009         	goto	u3811
  4135  0013D0  EFEC  F009         	goto	u3810
  4136  0013D4                     u3811:
  4137  0013D4  EFF7  F009         	goto	l4556
  4138  0013D8                     u3810:
  4139  0013D8  0E18               	movlw	24
  4140  0013DA  600E               	cpfslt	convertToPort@i^0,c
  4141  0013DC  EFF2  F009         	goto	u3821
  4142  0013E0  EFF4  F009         	goto	u3820
  4143  0013E4                     u3821:
  4144  0013E4  EFF7  F009         	goto	l4556
  4145  0013E8                     u3820:
  4146  0013E8                     
  4147                           ;pins.c: 24:         return C;
  4148  0013E8  0E02               	movlw	2
  4149  0013EA  EF0B  F00A         	goto	l108
  4150  0013EE                     l4556:
  4151  0013EE  0E17               	movlw	23
  4152  0013F0  640E               	cpfsgt	convertToPort@i^0,c
  4153  0013F2  EFFD  F009         	goto	u3831
  4154  0013F6  EFFF  F009         	goto	u3830
  4155  0013FA                     u3831:
  4156  0013FA  EF0A  F00A         	goto	l4566
  4157  0013FE                     u3830:
  4158  0013FE  0E20               	movlw	32
  4159  001400  600E               	cpfslt	convertToPort@i^0,c
  4160  001402  EF05  F00A         	goto	u3841
  4161  001406  EF07  F00A         	goto	u3840
  4162  00140A                     u3841:
  4163  00140A  EF0A  F00A         	goto	l4566
  4164  00140E                     u3840:
  4165  00140E                     
  4166                           ;pins.c: 26:         return D;
  4167  00140E  0E03               	movlw	3
  4168  001410  EF0B  F00A         	goto	l108
  4169  001414                     l4566:
  4170                           
  4171                           ;pins.c: 28:         return E;
  4172  001414  0E04               	movlw	4
  4173  001416                     l108:
  4174  001416  0012               	return		;funcret
  4175  001418                     __end_of_convertToPort:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function _convertToBit *****************
  4179 ;; Defined at:
  4180 ;;		line 32 in file "pins.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  i               1    wreg     unsigned char 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  i               1   13[COMRAM] unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      unsigned char 
  4187 ;; Registers used:
  4188 ;;		wreg, status,2, status,0
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4194 ;;      Params:         0       0       0       0
  4195 ;;      Locals:         1       0       0       0
  4196 ;;      Temps:          0       0       0       0
  4197 ;;      Totals:         1       0       0       0
  4198 ;;Total ram usage:        1 bytes
  4199 ;; Hardware stack levels used: 1
  4200 ;; Hardware stack levels required when called: 3
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_pinMode
  4205 ;;		_digitalRead
  4206 ;;		_digitalWrite
  4207 ;;		_analogRead
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text20
  4212  0012F4                     __ptext20:
  4213                           	callstack 0
  4214  0012F4                     _convertToBit:
  4215                           	callstack 26
  4216                           
  4217                           ;incstack = 0
  4218                           ;convertToBit@i stored from wreg
  4219  0012F4  6E0E               	movwf	convertToBit@i^0,c
  4220  0012F6                     
  4221                           ;pins.c: 33:     if (i >= 0 && i <= 7) {
  4222  0012F6  0E08               	movlw	8
  4223  0012F8  600E               	cpfslt	convertToBit@i^0,c
  4224  0012FA  EF81  F009         	goto	u3851
  4225  0012FE  EF83  F009         	goto	u3850
  4226  001302                     u3851:
  4227  001302  EF86  F009         	goto	l4578
  4228  001306                     u3850:
  4229  001306                     
  4230                           ;pins.c: 34:         return i;
  4231  001306  500E               	movf	convertToBit@i^0,w,c
  4232  001308  EFC4  F009         	goto	l119
  4233  00130C                     l4578:
  4234  00130C  0E07               	movlw	7
  4235  00130E  640E               	cpfsgt	convertToBit@i^0,c
  4236  001310  EF8C  F009         	goto	u3861
  4237  001314  EF8E  F009         	goto	u3860
  4238  001318                     u3861:
  4239  001318  EF9A  F009         	goto	l4588
  4240  00131C                     u3860:
  4241  00131C  0E10               	movlw	16
  4242  00131E  600E               	cpfslt	convertToBit@i^0,c
  4243  001320  EF94  F009         	goto	u3871
  4244  001324  EF96  F009         	goto	u3870
  4245  001328                     u3871:
  4246  001328  EF9A  F009         	goto	l4588
  4247  00132C                     u3870:
  4248  00132C                     
  4249                           ;pins.c: 36:         return i - 8;
  4250  00132C  500E               	movf	convertToBit@i^0,w,c
  4251  00132E  0FF8               	addlw	248
  4252  001330  EFC4  F009         	goto	l119
  4253  001334                     l4588:
  4254  001334  0E0F               	movlw	15
  4255  001336  640E               	cpfsgt	convertToBit@i^0,c
  4256  001338  EFA0  F009         	goto	u3881
  4257  00133C  EFA2  F009         	goto	u3880
  4258  001340                     u3881:
  4259  001340  EFAE  F009         	goto	l4598
  4260  001344                     u3880:
  4261  001344  0E18               	movlw	24
  4262  001346  600E               	cpfslt	convertToBit@i^0,c
  4263  001348  EFA8  F009         	goto	u3891
  4264  00134C  EFAA  F009         	goto	u3890
  4265  001350                     u3891:
  4266  001350  EFAE  F009         	goto	l4598
  4267  001354                     u3890:
  4268  001354                     
  4269                           ;pins.c: 38:         return i - 16;
  4270  001354  500E               	movf	convertToBit@i^0,w,c
  4271  001356  0FF0               	addlw	240
  4272  001358  EFC4  F009         	goto	l119
  4273  00135C                     l4598:
  4274  00135C  0E17               	movlw	23
  4275  00135E  640E               	cpfsgt	convertToBit@i^0,c
  4276  001360  EFB4  F009         	goto	u3901
  4277  001364  EFB6  F009         	goto	u3900
  4278  001368                     u3901:
  4279  001368  EFC2  F009         	goto	l4608
  4280  00136C                     u3900:
  4281  00136C  0E20               	movlw	32
  4282  00136E  600E               	cpfslt	convertToBit@i^0,c
  4283  001370  EFBC  F009         	goto	u3911
  4284  001374  EFBE  F009         	goto	u3910
  4285  001378                     u3911:
  4286  001378  EFC2  F009         	goto	l4608
  4287  00137C                     u3910:
  4288  00137C                     
  4289                           ;pins.c: 40:         return i - 24;
  4290  00137C  500E               	movf	convertToBit@i^0,w,c
  4291  00137E  0FE8               	addlw	232
  4292  001380  EFC4  F009         	goto	l119
  4293  001384                     l4608:
  4294                           
  4295                           ;pins.c: 42:         return i - 32;
  4296  001384  500E               	movf	convertToBit@i^0,w,c
  4297  001386  0FE0               	addlw	224
  4298  001388                     l119:
  4299  001388  0012               	return		;funcret
  4300  00138A                     __end_of_convertToBit:
  4301                           	callstack 0
  4302                           
  4303 ;; *************** function _delay *****************
  4304 ;; Defined at:
  4305 ;;		line 5 in file "delays.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  ms              4   13[COMRAM] unsigned long 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;		None
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		wreg, status,2, status,0
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4319 ;;      Params:         4       0       0       0
  4320 ;;      Locals:         0       0       0       0
  4321 ;;      Temps:          1       0       0       0
  4322 ;;      Totals:         5       0       0       0
  4323 ;;Total ram usage:        5 bytes
  4324 ;; Hardware stack levels used: 1
  4325 ;; Hardware stack levels required when called: 3
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_main
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text21
  4334  00178C                     __ptext21:
  4335                           	callstack 0
  4336  00178C                     _delay:
  4337                           	callstack 27
  4338  00178C                     
  4339                           ;delays.c: 6:     while (ms > 0) {
  4340  00178C  EFD5  F00B         	goto	l4860
  4341  001790                     l4856:
  4342                           
  4343                           ;delays.c: 7:         _delay((unsigned long)((1)*(16000000/4000.0)));
  4344  001790  0E06               	movlw	6
  4345  001792  6E12               	movwf	??_delay^0,c
  4346  001794  0E30               	movlw	48
  4347  001796                     u4587:
  4348  001796  2EE8               	decfsz	wreg,f,c
  4349  001798  D7FE               	bra	u4587
  4350  00179A  2E12               	decfsz	??_delay^0,f,c
  4351  00179C  D7FC               	bra	u4587
  4352  00179E  D000               	nop2	
  4353  0017A0                     
  4354                           ;delays.c: 8:         ms--;
  4355  0017A0  060E               	decf	delay@ms^0,f,c
  4356  0017A2  0E00               	movlw	0
  4357  0017A4  5A0F               	subwfb	(delay@ms+1)^0,f,c
  4358  0017A6  5A10               	subwfb	(delay@ms+2)^0,f,c
  4359  0017A8  5A11               	subwfb	(delay@ms+3)^0,f,c
  4360  0017AA                     l4860:
  4361                           
  4362                           ;delays.c: 6:     while (ms > 0) {
  4363  0017AA  500E               	movf	delay@ms^0,w,c
  4364  0017AC  100F               	iorwf	(delay@ms+1)^0,w,c
  4365  0017AE  1010               	iorwf	(delay@ms+2)^0,w,c
  4366  0017B0  1011               	iorwf	(delay@ms+3)^0,w,c
  4367  0017B2  A4D8               	btfss	status,2,c
  4368  0017B4  EFDE  F00B         	goto	u4251
  4369  0017B8  EFE0  F00B         	goto	u4250
  4370  0017BC                     u4251:
  4371  0017BC  EFC8  F00B         	goto	l4856
  4372  0017C0                     u4250:
  4373  0017C0  0012               	return		;funcret
  4374  0017C2                     __end_of_delay:
  4375                           	callstack 0
  4376                           
  4377 ;; *************** function _bitWrite *****************
  4378 ;; Defined at:
  4379 ;;		line 19 in file "bits.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  number          2   20[COMRAM] PTR unsigned char 
  4382 ;;		 -> main@a(1), 
  4383 ;;  b               1   22[COMRAM] unsigned char 
  4384 ;;  val             1   23[COMRAM] unsigned char 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4396 ;;      Params:         4       0       0       0
  4397 ;;      Locals:         0       0       0       0
  4398 ;;      Temps:          0       0       0       0
  4399 ;;      Totals:         4       0       0       0
  4400 ;;Total ram usage:        4 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; Hardware stack levels required when called: 5
  4403 ;; This function calls:
  4404 ;;		_bitClear
  4405 ;;		_bitSet
  4406 ;; This function is called by:
  4407 ;;		_main
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text22
  4412  0017C2                     __ptext22:
  4413                           	callstack 0
  4414  0017C2                     _bitWrite:
  4415                           	callstack 25
  4416  0017C2                     
  4417                           ;bits.c: 20:     val ? bitSet(number, b) : bitClear(number, b);
  4418  0017C2  5018               	movf	bitWrite@val^0,w,c
  4419  0017C4  B4D8               	btfsc	status,2,c
  4420  0017C6  EFE7  F00B         	goto	u4241
  4421  0017CA  EFE9  F00B         	goto	u4240
  4422  0017CE                     u4241:
  4423  0017CE  EFF3  F00B         	goto	l4852
  4424  0017D2                     u4240:
  4425  0017D2  C015  F011         	movff	bitWrite@number,bitSet@number
  4426  0017D6  C016  F012         	movff	bitWrite@number+1,bitSet@number+1
  4427  0017DA  C017  F013         	movff	bitWrite@b,bitSet@b
  4428  0017DE  EC77  F00C         	call	_bitSet	;wreg free
  4429  0017E2  EFFB  F00B         	goto	l344
  4430  0017E6                     l4852:
  4431  0017E6  C015  F011         	movff	bitWrite@number,bitClear@number
  4432  0017EA  C016  F012         	movff	bitWrite@number+1,bitClear@number+1
  4433  0017EE  C017  F013         	movff	bitWrite@b,bitClear@b
  4434  0017F2  EC60  F00C         	call	_bitClear	;wreg free
  4435  0017F6                     l344:
  4436  0017F6  0012               	return		;funcret
  4437  0017F8                     __end_of_bitWrite:
  4438                           	callstack 0
  4439                           
  4440 ;; *************** function _bitSet *****************
  4441 ;; Defined at:
  4442 ;;		line 15 in file "bits.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  number          2   16[COMRAM] PTR unsigned char 
  4445 ;;		 -> main@a(1), 
  4446 ;;  b               1   18[COMRAM] unsigned char 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;		None
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4458 ;;      Params:         3       0       0       0
  4459 ;;      Locals:         0       0       0       0
  4460 ;;      Temps:          1       0       0       0
  4461 ;;      Totals:         4       0       0       0
  4462 ;;Total ram usage:        4 bytes
  4463 ;; Hardware stack levels used: 1
  4464 ;; Hardware stack levels required when called: 4
  4465 ;; This function calls:
  4466 ;;		_bitValue
  4467 ;; This function is called by:
  4468 ;;		_bitWrite
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text23
  4473  0018EE                     __ptext23:
  4474                           	callstack 0
  4475  0018EE                     _bitSet:
  4476                           	callstack 25
  4477  0018EE                     
  4478                           ;bits.c: 16:     *number |= bitValue(b);
  4479  0018EE  5013               	movf	bitSet@b^0,w,c
  4480  0018F0  EC45  F00C         	call	_bitValue
  4481  0018F4  6E14               	movwf	??_bitSet^0,c
  4482  0018F6  C011  FFD9         	movff	bitSet@number,fsr2l
  4483  0018FA  C012  FFDA         	movff	bitSet@number+1,fsr2h
  4484  0018FE  5014               	movf	??_bitSet^0,w,c
  4485  001900  12DF               	iorwf	indf2,f,c
  4486  001902  0012               	return		;funcret
  4487  001904                     __end_of_bitSet:
  4488                           	callstack 0
  4489                           
  4490 ;; *************** function _bitClear *****************
  4491 ;; Defined at:
  4492 ;;		line 7 in file "bits.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  number          2   16[COMRAM] PTR unsigned char 
  4495 ;;		 -> main@a(1), 
  4496 ;;  b               1   18[COMRAM] unsigned char 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;		None
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      void 
  4501 ;; Registers used:
  4502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4508 ;;      Params:         3       0       0       0
  4509 ;;      Locals:         0       0       0       0
  4510 ;;      Temps:          1       0       0       0
  4511 ;;      Totals:         4       0       0       0
  4512 ;;Total ram usage:        4 bytes
  4513 ;; Hardware stack levels used: 1
  4514 ;; Hardware stack levels required when called: 4
  4515 ;; This function calls:
  4516 ;;		_bitValue
  4517 ;; This function is called by:
  4518 ;;		_bitWrite
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text24
  4523  0018C0                     __ptext24:
  4524                           	callstack 0
  4525  0018C0                     _bitClear:
  4526                           	callstack 25
  4527  0018C0                     
  4528                           ;bits.c: 8:     *number &= ~bitValue(b);
  4529  0018C0  5013               	movf	bitClear@b^0,w,c
  4530  0018C2  EC45  F00C         	call	_bitValue
  4531  0018C6  0AFF               	xorlw	255
  4532  0018C8  6E14               	movwf	??_bitClear^0,c
  4533  0018CA  C011  FFD9         	movff	bitClear@number,fsr2l
  4534  0018CE  C012  FFDA         	movff	bitClear@number+1,fsr2h
  4535  0018D2  5014               	movf	??_bitClear^0,w,c
  4536  0018D4  16DF               	andwf	indf2,f,c
  4537  0018D6  0012               	return		;funcret
  4538  0018D8                     __end_of_bitClear:
  4539                           	callstack 0
  4540                           
  4541 ;; *************** function _bitValue *****************
  4542 ;; Defined at:
  4543 ;;		line 3 in file "bits.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  b               1    wreg     unsigned char 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  b               1   15[COMRAM] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      unsigned char 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4557 ;;      Params:         0       0       0       0
  4558 ;;      Locals:         1       0       0       0
  4559 ;;      Temps:          2       0       0       0
  4560 ;;      Totals:         3       0       0       0
  4561 ;;Total ram usage:        3 bytes
  4562 ;; Hardware stack levels used: 1
  4563 ;; Hardware stack levels required when called: 3
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_bitClear
  4568 ;;		_bitSet
  4569 ;;		_setBit
  4570 ;;		_clearBit
  4571 ;;		_main
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text25
  4576  00188A                     __ptext25:
  4577                           	callstack 0
  4578  00188A                     _bitValue:
  4579                           	callstack 25
  4580                           
  4581                           ;incstack = 0
  4582                           ;bitValue@b stored from wreg
  4583  00188A  6E10               	movwf	bitValue@b^0,c
  4584  00188C                     
  4585                           ;bits.c: 4:     return 1 << b;
  4586  00188C  C010  F00E         	movff	bitValue@b,??_bitValue
  4587  001890  0E01               	movlw	1
  4588  001892  6E0F               	movwf	(??_bitValue+1)^0,c
  4589  001894  2A0E               	incf	??_bitValue^0,f,c
  4590  001896  EF4F  F00C         	goto	u3704
  4591  00189A                     u3705:
  4592  00189A  90D8               	bcf	status,0,c
  4593  00189C  360F               	rlcf	(??_bitValue+1)^0,f,c
  4594  00189E                     u3704:
  4595  00189E  2E0E               	decfsz	??_bitValue^0,f,c
  4596  0018A0  EF4D  F00C         	goto	u3705
  4597  0018A4  500F               	movf	(??_bitValue+1)^0,w,c
  4598  0018A6  0012               	return		;funcret
  4599  0018A8                     __end_of_bitValue:
  4600                           	callstack 0
  4601                           
  4602 ;; *************** function _bitRead *****************
  4603 ;; Defined at:
  4604 ;;		line 11 in file "bits.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  number          1    wreg     unsigned char 
  4607 ;;  b               1   13[COMRAM] unsigned char 
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;  number          1   16[COMRAM] unsigned char 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      unsigned char 
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4619 ;;      Params:         1       0       0       0
  4620 ;;      Locals:         1       0       0       0
  4621 ;;      Temps:          2       0       0       0
  4622 ;;      Totals:         4       0       0       0
  4623 ;;Total ram usage:        4 bytes
  4624 ;; Hardware stack levels used: 1
  4625 ;; Hardware stack levels required when called: 3
  4626 ;; This function calls:
  4627 ;;		Nothing
  4628 ;; This function is called by:
  4629 ;;		_main
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text26
  4634  00186A                     __ptext26:
  4635                           	callstack 0
  4636  00186A                     _bitRead:
  4637                           	callstack 27
  4638                           
  4639                           ;incstack = 0
  4640                           ;bitRead@number stored from wreg
  4641  00186A  6E11               	movwf	bitRead@number^0,c
  4642  00186C                     
  4643                           ;bits.c: 12:     return (number >> b) & 0x01;
  4644  00186C  C00E  F00F         	movff	bitRead@b,??_bitRead
  4645  001870  C011  F010         	movff	bitRead@number,??_bitRead+1
  4646  001874  2A0F               	incf	??_bitRead^0,f,c
  4647  001876  EF3F  F00C         	goto	u4234
  4648  00187A                     u4235:
  4649  00187A  90D8               	bcf	status,0,c
  4650  00187C  3210               	rrcf	(??_bitRead+1)^0,f,c
  4651  00187E                     u4234:
  4652  00187E  2E0F               	decfsz	??_bitRead^0,f,c
  4653  001880  EF3D  F00C         	goto	u4235
  4654  001884  5010               	movf	(??_bitRead+1)^0,w,c
  4655  001886  0B01               	andlw	1
  4656  001888  0012               	return		;funcret
  4657  00188A                     __end_of_bitRead:
  4658                           	callstack 0
  4659                           
  4660 ;; *************** function _myIsr *****************
  4661 ;; Defined at:
  4662 ;;		line 15 in file "uart.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  byte            1   12[COMRAM] const unsigned char 
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  1    wreg      void 
  4669 ;; Registers used:
  4670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4676 ;;      Params:         0       0       0       0
  4677 ;;      Locals:         1       0       0       0
  4678 ;;      Temps:          4       0       0       0
  4679 ;;      Totals:         5       0       0       0
  4680 ;;Total ram usage:        5 bytes
  4681 ;; Hardware stack levels used: 1
  4682 ;; Hardware stack levels required when called: 2
  4683 ;; This function calls:
  4684 ;;		_bufferLoad
  4685 ;;		_bufferSize
  4686 ;;		_bufferStore
  4687 ;; This function is called by:
  4688 ;;		Interrupt level 2
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	intcode
  4693  000008                     __pintcode:
  4694                           	callstack 0
  4695  000008                     _myIsr:
  4696                           	callstack 20
  4697                           
  4698                           ;incstack = 0
  4699  000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4700  00000A  CFE1 F009          	movff	fsr1l,??_myIsr
  4701  00000E  CFE2 F00A          	movff	fsr1h,??_myIsr+1
  4702  000012  CFD9 F00B          	movff	fsr2l,??_myIsr+2
  4703  000016  CFDA F00C          	movff	fsr2h,??_myIsr+3
  4704  00001A                     
  4705                           ;uart.c: 16:     if (PIE1bits.TX1IE && PIR1bits.TX1IF) {
  4706  00001A  A89D               	btfss	157,4,c	;volatile
  4707  00001C  EF12  F000         	goto	i2u293_41
  4708  000020  EF14  F000         	goto	i2u293_40
  4709  000024                     i2u293_41:
  4710  000024  EF31  F000         	goto	i2l3900
  4711  000028                     i2u293_40:
  4712  000028  A89E               	btfss	158,4,c	;volatile
  4713  00002A  EF19  F000         	goto	i2u294_41
  4714  00002E  EF1B  F000         	goto	i2u294_40
  4715  000032                     i2u294_41:
  4716  000032  EF31  F000         	goto	i2l3900
  4717  000036                     i2u294_40:
  4718  000036                     
  4719                           ;uart.c: 17:         if (bufferSize(&transmit_buffer)) {
  4720  000036  0E24               	movlw	low _transmit_buffer
  4721  000038  6E01               	movwf	bufferSize@buffer^0,c
  4722  00003A  0E01               	movlw	high _transmit_buffer
  4723  00003C  6E02               	movwf	(bufferSize@buffer+1)^0,c
  4724  00003E  EC82  F00C         	call	_bufferSize	;wreg free
  4725  000042  0900               	iorlw	0
  4726  000044  B4D8               	btfsc	status,2,c
  4727  000046  EF27  F000         	goto	i2u295_41
  4728  00004A  EF29  F000         	goto	i2u295_40
  4729  00004E                     i2u295_41:
  4730  00004E  EF30  F000         	goto	i2l3898
  4731  000052                     i2u295_40:
  4732  000052                     
  4733                           ;uart.c: 18:             TXREG1 = bufferLoad(&transmit_buffer);
  4734  000052  0E24               	movlw	low _transmit_buffer
  4735  000054  6E05               	movwf	bufferLoad@buffer^0,c
  4736  000056  0E01               	movlw	high _transmit_buffer
  4737  000058  6E06               	movwf	(bufferLoad@buffer+1)^0,c
  4738  00005A  EC0C  F00A         	call	_bufferLoad	;wreg free
  4739  00005E  6EAD               	movwf	173,c	;volatile
  4740  000060                     i2l3898:
  4741                           
  4742                           ;uart.c: 20:         PIR1bits.TX1IF = 0;
  4743  000060  989E               	bcf	158,4,c	;volatile
  4744  000062                     i2l3900:
  4745                           
  4746                           ;uart.c: 22:     if (PIE1bits.RC1IE && PIR1bits.RC1IF) {
  4747  000062  AA9D               	btfss	157,5,c	;volatile
  4748  000064  EF36  F000         	goto	i2u296_41
  4749  000068  EF38  F000         	goto	i2u296_40
  4750  00006C                     i2u296_41:
  4751  00006C  EF4A  F000         	goto	i2l434
  4752  000070                     i2u296_40:
  4753  000070  AA9E               	btfss	158,5,c	;volatile
  4754  000072  EF3D  F000         	goto	i2u297_41
  4755  000076  EF3F  F000         	goto	i2u297_40
  4756  00007A                     i2u297_41:
  4757  00007A  EF4A  F000         	goto	i2l434
  4758  00007E                     i2u297_40:
  4759  00007E                     
  4760                           ;uart.c: 23:         const uint8_t byte = RCREG1;
  4761  00007E  CFAE F00D          	movff	4014,myIsr@byte	;volatile
  4762  000082                     
  4763                           ;uart.c: 24:         bufferStore(&receive_buffer, byte);
  4764  000082  0E60               	movlw	low _receive_buffer
  4765  000084  6E01               	movwf	bufferStore@buffer^0,c
  4766  000086  0E00               	movlw	high _receive_buffer
  4767  000088  6E02               	movwf	(bufferStore@buffer+1)^0,c
  4768  00008A  C00D  F003         	movff	myIsr@byte,bufferStore@byte
  4769  00008E  EC4E  F00A         	call	_bufferStore	;wreg free
  4770  000092                     
  4771                           ;uart.c: 25:         PIR1bits.RC1IF = 0;
  4772  000092  9A9E               	bcf	158,5,c	;volatile
  4773  000094                     i2l434:
  4774  000094  C00C  FFDA         	movff	??_myIsr+3,fsr2h
  4775  000098  C00B  FFD9         	movff	??_myIsr+2,fsr2l
  4776  00009C  C00A  FFE2         	movff	??_myIsr+1,fsr1h
  4777  0000A0  C009  FFE1         	movff	??_myIsr,fsr1l
  4778  0000A4  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4779  0000A6  0011               	retfie		f
  4780  0000A8                     __end_of_myIsr:
  4781                           	callstack 0
  4782                           
  4783 ;; *************** function _bufferStore *****************
  4784 ;; Defined at:
  4785 ;;		line 3 in file "buffer.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  buffer          2    0[COMRAM] const PTR struct buffer
  4788 ;;		 -> transmit_buffer(67), receive_buffer(67), 
  4789 ;;  byte            1    2[COMRAM] const char 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;		None
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4801 ;;      Params:         3       0       0       0
  4802 ;;      Locals:         0       0       0       0
  4803 ;;      Temps:          1       0       0       0
  4804 ;;      Totals:         4       0       0       0
  4805 ;;Total ram usage:        4 bytes
  4806 ;; Hardware stack levels used: 1
  4807 ;; This function calls:
  4808 ;;		Nothing
  4809 ;; This function is called by:
  4810 ;;		_myIsr
  4811 ;;		_write
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text28
  4816  00149C                     __ptext28:
  4817                           	callstack 0
  4818  00149C                     _bufferStore:
  4819                           	callstack 21
  4820  00149C                     
  4821                           ;buffer.c: 4:     if (buffer->size >= 64) {
  4822  00149C  EE20 F042          	lfsr	2,66
  4823  0014A0  5001               	movf	bufferStore@buffer^0,w,c
  4824  0014A2  26D9               	addwf	fsr2l,f,c
  4825  0014A4  5002               	movf	(bufferStore@buffer+1)^0,w,c
  4826  0014A6  22DA               	addwfc	fsr2h,f,c
  4827  0014A8  0E3F               	movlw	63
  4828  0014AA  64DF               	cpfsgt	indf2,c
  4829  0014AC  EF5A  F00A         	goto	i2u265_41
  4830  0014B0  EF5C  F00A         	goto	i2u265_40
  4831  0014B4                     i2u265_41:
  4832  0014B4  EF5E  F00A         	goto	i2l3532
  4833  0014B8                     i2u265_40:
  4834  0014B8  EF86  F00A         	goto	i2l503
  4835  0014BC                     i2l3532:
  4836                           
  4837                           ;buffer.c: 7:     buffer->buf[buffer->head] = byte;
  4838  0014BC  EE20 F040          	lfsr	2,64
  4839  0014C0  5001               	movf	bufferStore@buffer^0,w,c
  4840  0014C2  26D9               	addwf	fsr2l,f,c
  4841  0014C4  5002               	movf	(bufferStore@buffer+1)^0,w,c
  4842  0014C6  22DA               	addwfc	fsr2h,f,c
  4843  0014C8  50DF               	movf	indf2,w,c
  4844  0014CA  6E04               	movwf	??_bufferStore^0,c
  4845  0014CC  5004               	movf	??_bufferStore^0,w,c
  4846  0014CE  2401               	addwf	bufferStore@buffer^0,w,c
  4847  0014D0  6ED9               	movwf	fsr2l,c
  4848  0014D2  0E00               	movlw	0
  4849  0014D4  2002               	addwfc	(bufferStore@buffer+1)^0,w,c
  4850  0014D6  6EDA               	movwf	fsr2h,c
  4851  0014D8  C003  FFDF         	movff	bufferStore@byte,indf2
  4852                           
  4853                           ;buffer.c: 8:     buffer->size++;
  4854  0014DC  EE20 F042          	lfsr	2,66
  4855  0014E0  5001               	movf	bufferStore@buffer^0,w,c
  4856  0014E2  26D9               	addwf	fsr2l,f,c
  4857  0014E4  5002               	movf	(bufferStore@buffer+1)^0,w,c
  4858  0014E6  22DA               	addwfc	fsr2h,f,c
  4859  0014E8  2ADF               	incf	indf2,f,c
  4860  0014EA                     
  4861                           ;buffer.c: 9:     buffer->head = (buffer->head + 1) % 64;
  4862  0014EA  EE20 F040          	lfsr	2,64
  4863  0014EE  5001               	movf	bufferStore@buffer^0,w,c
  4864  0014F0  26D9               	addwf	fsr2l,f,c
  4865  0014F2  5002               	movf	(bufferStore@buffer+1)^0,w,c
  4866  0014F4  22DA               	addwfc	fsr2h,f,c
  4867  0014F6  EE10 F040          	lfsr	1,64
  4868  0014FA  5001               	movf	bufferStore@buffer^0,w,c
  4869  0014FC  26E1               	addwf	fsr1l,f,c
  4870  0014FE  5002               	movf	(bufferStore@buffer+1)^0,w,c
  4871  001500  22E2               	addwfc	fsr1h,f,c
  4872  001502  50E7               	movf	indf1,w,c
  4873  001504  6E04               	movwf	??_bufferStore^0,c
  4874  001506  2804               	incf	??_bufferStore^0,w,c
  4875  001508  0B3F               	andlw	63
  4876  00150A  6EDF               	movwf	indf2,c
  4877  00150C                     i2l503:
  4878  00150C  0012               	return		;funcret
  4879  00150E                     __end_of_bufferStore:
  4880                           	callstack 0
  4881                           
  4882 ;; *************** function _bufferSize *****************
  4883 ;; Defined at:
  4884 ;;		line 28 in file "buffer.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;  buffer          2    0[COMRAM] const PTR const struct b
  4887 ;;		 -> transmit_buffer(67), receive_buffer(67), 
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      unsigned char 
  4892 ;; Registers used:
  4893 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4899 ;;      Params:         2       0       0       0
  4900 ;;      Locals:         0       0       0       0
  4901 ;;      Temps:          0       0       0       0
  4902 ;;      Totals:         2       0       0       0
  4903 ;;Total ram usage:        2 bytes
  4904 ;; Hardware stack levels used: 1
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_myIsr
  4909 ;;		_available
  4910 ;;		_availableForWrite
  4911 ;;		_write
  4912 ;;		_readBytes
  4913 ;;		_parseInt
  4914 ;;		_getStartIndex
  4915 ;;		_getEndIndex
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text29
  4920  001904                     __ptext29:
  4921                           	callstack 0
  4922  001904                     _bufferSize:
  4923                           	callstack 21
  4924  001904                     
  4925                           ;buffer.c: 29:     return buffer->size;
  4926  001904  EE20 F042          	lfsr	2,66
  4927  001908  5001               	movf	bufferSize@buffer^0,w,c
  4928  00190A  26D9               	addwf	fsr2l,f,c
  4929  00190C  5002               	movf	(bufferSize@buffer+1)^0,w,c
  4930  00190E  22DA               	addwfc	fsr2h,f,c
  4931  001910  50DF               	movf	indf2,w,c
  4932  001912  0012               	return		;funcret
  4933  001914                     __end_of_bufferSize:
  4934                           	callstack 0
  4935                           
  4936 ;; *************** function _bufferLoad *****************
  4937 ;; Defined at:
  4938 ;;		line 12 in file "buffer.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  buffer          2    4[COMRAM] const PTR struct buffer
  4941 ;;		 -> transmit_buffer(67), receive_buffer(67), 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  byte            1    7[COMRAM] const char 
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      char 
  4946 ;; Registers used:
  4947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4953 ;;      Params:         2       0       0       0
  4954 ;;      Locals:         1       0       0       0
  4955 ;;      Temps:          1       0       0       0
  4956 ;;      Totals:         4       0       0       0
  4957 ;;Total ram usage:        4 bytes
  4958 ;; Hardware stack levels used: 1
  4959 ;; Hardware stack levels required when called: 1
  4960 ;; This function calls:
  4961 ;;		_bufferPeek
  4962 ;; This function is called by:
  4963 ;;		_myIsr
  4964 ;;		_read
  4965 ;;		_readBytes
  4966 ;;		_parse_int
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text30
  4971  001418                     __ptext30:
  4972                           	callstack 0
  4973  001418                     _bufferLoad:
  4974                           	callstack 20
  4975  001418                     
  4976                           ;buffer.c: 13:     if (buffer->size == 0) {
  4977  001418  EE20 F042          	lfsr	2,66
  4978  00141C  5005               	movf	bufferLoad@buffer^0,w,c
  4979  00141E  26D9               	addwf	fsr2l,f,c
  4980  001420  5006               	movf	(bufferLoad@buffer+1)^0,w,c
  4981  001422  22DA               	addwfc	fsr2h,f,c
  4982  001424  50DF               	movf	indf2,w,c
  4983  001426  A4D8               	btfss	status,2,c
  4984  001428  EF18  F00A         	goto	i2u264_41
  4985  00142C  EF1A  F00A         	goto	i2u264_40
  4986  001430                     i2u264_41:
  4987  001430  EF1D  F00A         	goto	i2l3516
  4988  001434                     i2u264_40:
  4989  001434                     
  4990                           ;buffer.c: 14:         return -1;
  4991  001434  0EFF               	movlw	255
  4992  001436  EF4D  F00A         	goto	i2l507
  4993  00143A                     i2l3516:
  4994                           
  4995                           ;buffer.c: 16:     const int8_t byte = bufferPeek(buffer);
  4996  00143A  C005  F001         	movff	bufferLoad@buffer,bufferPeek@buffer
  4997  00143E  C006  F002         	movff	bufferLoad@buffer+1,bufferPeek@buffer+1
  4998  001442  EC23  F00C         	call	_bufferPeek	;wreg free
  4999  001446  6E08               	movwf	bufferLoad@byte^0,c
  5000  001448                     
  5001                           ;buffer.c: 17:     buffer->buf[buffer->tail] = -1;
  5002  001448  EE20 F041          	lfsr	2,65
  5003  00144C  5005               	movf	bufferLoad@buffer^0,w,c
  5004  00144E  26D9               	addwf	fsr2l,f,c
  5005  001450  5006               	movf	(bufferLoad@buffer+1)^0,w,c
  5006  001452  22DA               	addwfc	fsr2h,f,c
  5007  001454  50DF               	movf	indf2,w,c
  5008  001456  6E07               	movwf	??_bufferLoad^0,c
  5009  001458  5007               	movf	??_bufferLoad^0,w,c
  5010  00145A  2405               	addwf	bufferLoad@buffer^0,w,c
  5011  00145C  6ED9               	movwf	fsr2l,c
  5012  00145E  0E00               	movlw	0
  5013  001460  2006               	addwfc	(bufferLoad@buffer+1)^0,w,c
  5014  001462  6EDA               	movwf	fsr2h,c
  5015  001464  0EFF               	movlw	255
  5016  001466  6EDF               	movwf	indf2,c
  5017  001468                     
  5018                           ;buffer.c: 18:     buffer->tail = (buffer->tail + 1) % 64;
  5019  001468  EE20 F041          	lfsr	2,65
  5020  00146C  5005               	movf	bufferLoad@buffer^0,w,c
  5021  00146E  26D9               	addwf	fsr2l,f,c
  5022  001470  5006               	movf	(bufferLoad@buffer+1)^0,w,c
  5023  001472  22DA               	addwfc	fsr2h,f,c
  5024  001474  EE10 F041          	lfsr	1,65
  5025  001478  5005               	movf	bufferLoad@buffer^0,w,c
  5026  00147A  26E1               	addwf	fsr1l,f,c
  5027  00147C  5006               	movf	(bufferLoad@buffer+1)^0,w,c
  5028  00147E  22E2               	addwfc	fsr1h,f,c
  5029  001480  50E7               	movf	indf1,w,c
  5030  001482  6E07               	movwf	??_bufferLoad^0,c
  5031  001484  2807               	incf	??_bufferLoad^0,w,c
  5032  001486  0B3F               	andlw	63
  5033  001488  6EDF               	movwf	indf2,c
  5034  00148A                     
  5035                           ;buffer.c: 19:     buffer->size--;
  5036  00148A  EE20 F042          	lfsr	2,66
  5037  00148E  5005               	movf	bufferLoad@buffer^0,w,c
  5038  001490  26D9               	addwf	fsr2l,f,c
  5039  001492  5006               	movf	(bufferLoad@buffer+1)^0,w,c
  5040  001494  22DA               	addwfc	fsr2h,f,c
  5041  001496  06DF               	decf	indf2,f,c
  5042  001498                     
  5043                           ;buffer.c: 20:     return byte;
  5044  001498  5008               	movf	bufferLoad@byte^0,w,c
  5045  00149A                     i2l507:
  5046  00149A  0012               	return		;funcret
  5047  00149C                     __end_of_bufferLoad:
  5048                           	callstack 0
  5049                           
  5050 ;; *************** function _bufferPeek *****************
  5051 ;; Defined at:
  5052 ;;		line 23 in file "buffer.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;  buffer          2    0[COMRAM] const PTR const struct b
  5055 ;;		 -> transmit_buffer(67), receive_buffer(67), 
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;  byte            1    3[COMRAM] const char 
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  1    wreg      char 
  5060 ;; Registers used:
  5061 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5067 ;;      Params:         2       0       0       0
  5068 ;;      Locals:         1       0       0       0
  5069 ;;      Temps:          1       0       0       0
  5070 ;;      Totals:         4       0       0       0
  5071 ;;Total ram usage:        4 bytes
  5072 ;; Hardware stack levels used: 1
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		_bufferLoad
  5077 ;;		_peek
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text31
  5082  001846                     __ptext31:
  5083                           	callstack 0
  5084  001846                     _bufferPeek:
  5085                           	callstack 20
  5086  001846                     
  5087                           ;buffer.c: 24:     const int8_t byte = buffer->buf[buffer->tail];
  5088  001846  EE20 F041          	lfsr	2,65
  5089  00184A  5001               	movf	bufferPeek@buffer^0,w,c
  5090  00184C  26D9               	addwf	fsr2l,f,c
  5091  00184E  5002               	movf	(bufferPeek@buffer+1)^0,w,c
  5092  001850  22DA               	addwfc	fsr2h,f,c
  5093  001852  50DF               	movf	indf2,w,c
  5094  001854  6E03               	movwf	??_bufferPeek^0,c
  5095  001856  5003               	movf	??_bufferPeek^0,w,c
  5096  001858  2401               	addwf	bufferPeek@buffer^0,w,c
  5097  00185A  6ED9               	movwf	fsr2l,c
  5098  00185C  0E00               	movlw	0
  5099  00185E  2002               	addwfc	(bufferPeek@buffer+1)^0,w,c
  5100  001860  6EDA               	movwf	fsr2h,c
  5101  001862  50DF               	movf	indf2,w,c
  5102  001864  6E04               	movwf	bufferPeek@byte^0,c
  5103  001866                     
  5104                           ;buffer.c: 25:     return byte;
  5105  001866  5004               	movf	bufferPeek@byte^0,w,c
  5106  001868  0012               	return		;funcret
  5107  00186A                     __end_of_bufferPeek:
  5108                           	callstack 0
  5109                           
  5110                           	psect	rparam
  5111  0000                     
  5112                           	psect	temp
  5113  000051                     btemp:
  5114                           	callstack 0
  5115  000051                     	ds	1
  5116  0000                     int$flags	set	btemp
  5117  0000                     wtemp8	set	btemp+1
  5118  0000                     ttemp5	set	btemp+1
  5119  0000                     ttemp6	set	btemp+4
  5120  0000                     ttemp7	set	btemp+8
  5121                           
  5122                           	psect	idloc
  5123                           
  5124                           ;Config register IDLOC0 @ 0x200000
  5125                           ;	unspecified, using default values
  5126  200000                     	org	2097152
  5127  200000  FF                 	db	255
  5128                           
  5129                           ;Config register IDLOC1 @ 0x200001
  5130                           ;	unspecified, using default values
  5131  200001                     	org	2097153
  5132  200001  FF                 	db	255
  5133                           
  5134                           ;Config register IDLOC2 @ 0x200002
  5135                           ;	unspecified, using default values
  5136  200002                     	org	2097154
  5137  200002  FF                 	db	255
  5138                           
  5139                           ;Config register IDLOC3 @ 0x200003
  5140                           ;	unspecified, using default values
  5141  200003                     	org	2097155
  5142  200003  FF                 	db	255
  5143                           
  5144                           ;Config register IDLOC4 @ 0x200004
  5145                           ;	unspecified, using default values
  5146  200004                     	org	2097156
  5147  200004  FF                 	db	255
  5148                           
  5149                           ;Config register IDLOC5 @ 0x200005
  5150                           ;	unspecified, using default values
  5151  200005                     	org	2097157
  5152  200005  FF                 	db	255
  5153                           
  5154                           ;Config register IDLOC6 @ 0x200006
  5155                           ;	unspecified, using default values
  5156  200006                     	org	2097158
  5157  200006  FF                 	db	255
  5158                           
  5159                           ;Config register IDLOC7 @ 0x200007
  5160                           ;	unspecified, using default values
  5161  200007                     	org	2097159
  5162  200007  FF                 	db	255
  5163                           
  5164                           	psect	config
  5165                           
  5166                           ; Padding undefined space
  5167  300000                     	org	3145728
  5168  300000  FF                 	db	255
  5169                           
  5170                           ;Config register CONFIG1H @ 0x300001
  5171                           ;	unspecified, using default values
  5172                           ;	Oscillator Selection bits
  5173                           ;	FOSC = 0x5, unprogrammed default
  5174                           ;	4X PLL Enable
  5175                           ;	PLLCFG = 0x0, unprogrammed default
  5176                           ;	Primary clock enable bit
  5177                           ;	PRICLKEN = 0x1, unprogrammed default
  5178                           ;	Fail-Safe Clock Monitor Enable bit
  5179                           ;	FCMEN = 0x0, unprogrammed default
  5180                           ;	Internal/External Oscillator Switchover bit
  5181                           ;	IESO = 0x0, unprogrammed default
  5182  300001                     	org	3145729
  5183  300001  25                 	db	37
  5184                           
  5185                           ;Config register CONFIG2L @ 0x300002
  5186                           ;	unspecified, using default values
  5187                           ;	Power-up Timer Enable bit
  5188                           ;	PWRTEN = 0x1, unprogrammed default
  5189                           ;	Brown-out Reset Enable bits
  5190                           ;	BOREN = 0x3, unprogrammed default
  5191                           ;	Brown Out Reset Voltage bits
  5192                           ;	BORV = 0x3, unprogrammed default
  5193  300002                     	org	3145730
  5194  300002  1F                 	db	31
  5195                           
  5196                           ;Config register CONFIG2H @ 0x300003
  5197                           ;	unspecified, using default values
  5198                           ;	Watchdog Timer Enable bits
  5199                           ;	WDTEN = 0x3, unprogrammed default
  5200                           ;	Watchdog Timer Postscale Select bits
  5201                           ;	WDTPS = 0xF, unprogrammed default
  5202  300003                     	org	3145731
  5203  300003  3F                 	db	63
  5204                           
  5205                           ; Padding undefined space
  5206  300004                     	org	3145732
  5207  300004  FF                 	db	255
  5208                           
  5209                           ;Config register CONFIG3H @ 0x300005
  5210                           ;	unspecified, using default values
  5211                           ;	CCP2 MUX bit
  5212                           ;	CCP2MX = 0x1, unprogrammed default
  5213                           ;	PORTB A/D Enable bit
  5214                           ;	PBADEN = 0x1, unprogrammed default
  5215                           ;	P3A/CCP3 Mux bit
  5216                           ;	CCP3MX = 0x1, unprogrammed default
  5217                           ;	HFINTOSC Fast Start-up
  5218                           ;	HFOFST = 0x1, unprogrammed default
  5219                           ;	Timer3 Clock input mux bit
  5220                           ;	T3CMX = 0x1, unprogrammed default
  5221                           ;	ECCP2 B output mux bit
  5222                           ;	P2BMX = 0x1, unprogrammed default
  5223                           ;	MCLR Pin Enable bit
  5224                           ;	MCLRE = 0x1, unprogrammed default
  5225  300005                     	org	3145733
  5226  300005  BF                 	db	191
  5227                           
  5228                           ;Config register CONFIG4L @ 0x300006
  5229                           ;	unspecified, using default values
  5230                           ;	Stack Full/Underflow Reset Enable bit
  5231                           ;	STVREN = 0x1, unprogrammed default
  5232                           ;	Single-Supply ICSP Enable bit
  5233                           ;	LVP = 0x1, unprogrammed default
  5234                           ;	Extended Instruction Set Enable bit
  5235                           ;	XINST = 0x0, unprogrammed default
  5236                           ;	Background Debug
  5237                           ;	DEBUG = 0x1, unprogrammed default
  5238  300006                     	org	3145734
  5239  300006  85                 	db	133
  5240                           
  5241                           ; Padding undefined space
  5242  300007                     	org	3145735
  5243  300007  FF                 	db	255
  5244                           
  5245                           ;Config register CONFIG5L @ 0x300008
  5246                           ;	unspecified, using default values
  5247                           ;	Code Protection Block 0
  5248                           ;	CP0 = 0x1, unprogrammed default
  5249                           ;	Code Protection Block 1
  5250                           ;	CP1 = 0x1, unprogrammed default
  5251  300008                     	org	3145736
  5252  300008  03                 	db	3
  5253                           
  5254                           ;Config register CONFIG5H @ 0x300009
  5255                           ;	unspecified, using default values
  5256                           ;	Boot Block Code Protection bit
  5257                           ;	CPB = 0x1, unprogrammed default
  5258                           ;	Data EEPROM Code Protection bit
  5259                           ;	CPD = 0x1, unprogrammed default
  5260  300009                     	org	3145737
  5261  300009  C0                 	db	192
  5262                           
  5263                           ;Config register CONFIG6L @ 0x30000A
  5264                           ;	unspecified, using default values
  5265                           ;	Write Protection Block 0
  5266                           ;	WRT0 = 0x1, unprogrammed default
  5267                           ;	Write Protection Block 1
  5268                           ;	WRT1 = 0x1, unprogramm  5269  30000A                     	org	3145738
  5270  30000A  03                 	db	3
  5271                           
  5272                           ;Config register CONFIG6H @ 0x30000B
  5273                           ;	unspecified, using default values
  5274                           ;	Configuration Register Write Protection bit
  5275                           ;	WRTC = 0x1, unprogrammed default
  5276                           ;	Boot Block Write Protection bit
  5277                           ;	WRTB = 0x1, unprogrammed default
  5278                           ;	Data EEPROM Write Protection bit
  5279                           ;	WRTD = 0x1, unprogrammed default
  5280  30000B                     	org	3145739
  5281  30000B  E0                 	db	224
  5282                           
  5283                           ;Config register CONFIG7L @ 0x30000C
  5284                           ;	unspecified, using default values
  5285                           ;	Table Read Protection Block 0
  5286                           ;	EBTR0 = 0x1, unprogrammed default
  5287                           ;	Table Read Protection Block 1
  5288                           ;	EBTR1 = 0x1, unprogrammed default
  5289  30000C                     	org	3145740
  5290  30000C  03                 	db	3
  5291                           
  5292                           ;Config register CONFIG7H @ 0x30000D
  5293                           ;	unspecified, using default values
  5294                           ;	Boot Block Table Read Protection bit
  5295                           ;	EBTRB = 0x1, unprogrammed default
  5296  30000D                     	org	3145741
  5297  30000D  40                 	db	64
  5298                           tosu	equ	0xFFF
  5299                           tosh	equ	0xFFE
  5300                           tosl	equ	0xFFD
  5301                           stkptr	equ	0xFFC
  5302                           pclatu	equ	0xFFB
  5303                           pclath	equ	0xFFA
  5304                           pcl	equ	0xFF9
  5305                           tblptru	equ	0xFF8
  5306                           tblptrh	equ	0xFF7
  5307                           tblptrl	equ	0xFF6
  5308                           tablat	equ	0xFF5
  5309                           prodh	equ	0xFF4
  5310                           prodl	equ	0xFF3
  5311                           indf0	equ	0xFEF
  5312                           postinc0	equ	0xFEE
  5313                           postdec0	equ	0xFED
  5314                           preinc0	equ	0xFEC
  5315                           plusw0	equ	0xFEB
  5316                           fsr0h	equ	0xFEA
  5317                           fsr0l	equ	0xFE9
  5318                           wreg	equ	0xFE8
  5319                           indf1	equ	0xFE7
  5320                           postinc1	equ	0xFE6
  5321                           postdec1	equ	0xFE5
  5322                           preinc1	equ	0xFE4
  5323                           plusw1	equ	0xFE3
  5324                           fsr1h	equ	0xFE2
  5325                           fsr1l	equ	0xFE1
  5326                           bsr	equ	0xFE0
  5327                           indf2	equ	0xFDF
  5328                           postinc2	equ	0xFDE
  5329                           postdec2	equ	0xFDD
  5330                           preinc2	equ	0xFDC
  5331                           plusw2	equ	0xFDB
  5332                           fsr2h	equ	0xFDA
  5333                           fsr2l	equ	0xFD9
  5334                           status	equ	0xFD8

Data Sizes:
    Strings     7
    Constant    0
    Data        170
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     74      80
    BANK0           160     39     140
    BANK1           256      0     103
    BANK2           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1941_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sp__reverse	PTR unsigned char  size(2) Largest target is 32
		 -> printInt@buffer(COMRAM[32]), 

    bufferSize@buffer	const PTR const struct buffer size(2) Largest target is 67
		 -> transmit_buffer(BANK1[67]), receive_buffer(BANK0[67]), 

    bufferPeek@buffer	const PTR const struct buffer size(2) Largest target is 67
		 -> transmit_buffer(BANK1[67]), receive_buffer(BANK0[67]), 

    bufferLoad@buffer	const PTR struct buffer size(2) Largest target is 67
		 -> transmit_buffer(BANK1[67]), receive_buffer(BANK0[67]), 

    bufferStore@buffer	const PTR struct buffer size(2) Largest target is 67
		 -> transmit_buffer(BANK1[67]), receive_buffer(BANK0[67]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 32
		 -> printInt@buffer(COMRAM[32]), 

    readBit@p	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTE(SFR_1[1]), PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), 
		 -> PORTA(SFR_1[1]), ANSELE(SFR[1]), ANSELD(SFR[1]), ANSELC(SFR[1]), 
		 -> ANSELB(SFR[1]), ANSELA(SFR[1]), 

    clearBit@p	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATE(SFR_1[1]), LATD(SFR_1[1]), LATC(SFR_1[1]), LATB(SFR_1[1]), 
		 -> LATA(SFR_1[1]), ANSELE(SFR[1]), TRISE(SFR_1[1]), ANSELD(SFR[1]), 
		 -> TRISD(SFR_1[1]), ANSELC(SFR[1]), TRISC(SFR_1[1]), ANSELB(SFR[1]), 
		 -> TRISB(SFR_1[1]), ANSELA(SFR[1]), TRISA(SFR_1[1]), 

    setBit@p	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATE(SFR_1[1]), LATD(SFR_1[1]), LATC(SFR_1[1]), LATB(SFR_1[1]), 
		 -> LATA(SFR_1[1]), ANSELE(SFR[1]), TRISE(SFR_1[1]), ANSELD(SFR[1]), 
		 -> TRISD(SFR_1[1]), ANSELC(SFR[1]), TRISC(SFR_1[1]), ANSELB(SFR[1]), 
		 -> TRISB(SFR_1[1]), ANSELA(SFR[1]), TRISA(SFR_1[1]), 

    bitWrite@number	PTR unsigned char  size(2) Largest target is 1
		 -> main@a(COMRAM[1]), 

    bitSet@number	PTR unsigned char  size(2) Largest target is 1
		 -> main@a(COMRAM[1]), 

    bitClear@number	PTR unsigned char  size(2) Largest target is 1
		 -> main@a(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _pinMode->_pinToIndex
    _setBit->_bitValue
    _clearBit->_bitValue
    _digitalRead->_pinToIndex
    _bitWrite->_bitClear
    _bitWrite->_bitSet
    _bitSet->_bitValue
    _bitClear->_bitValue

Critical Paths under _myIsr in COMRAM

    _myIsr->_bufferLoad
    _bufferLoad->_bufferPeek

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5   29353
                                             72 COMRAM     2     2      0
                                             34 BANK0      5     0      5
                            _bitRead
                           _bitValue
                           _bitWrite
                              _delay
                        _digitalRead
                            _pinMode
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    8183
                                             70 COMRAM     2     2      0
                                             30 BANK0      4     0      4
                            _bitRead (ARG)
                           _bitValue (ARG)
                        _digitalRead (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7742
                                             68 COMRAM     2     2      0
                                             24 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7269
                                             58 COMRAM    10    10      0
                                             18 BANK0      6     0      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5587
                                             40 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3231
                                             29 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             13 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1444
                                             22 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     944
                                             13 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     273
                                             31 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             13 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             13 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _pinMode                                              7     6      1   16832
                                             52 COMRAM     7     6      1
                           _clearBit
                       _convertToBit
                      _convertToPort
                         _pinToIndex
                             _setBit
 ---------------------------------------------------------------------------------
 (2) _setBit                                               4     1      3    6753
                                             16 COMRAM     4     1      3
                           _bitValue
 ---------------------------------------------------------------------------------
 (2) _clearBit                                             4     1      3    6753
                                             16 COMRAM     4     1      3
                           _bitValue
 ---------------------------------------------------------------------------------
 (1) _digitalRead                                          7     7      0    2983
                                             52 COMRAM     7     7      0
                       _convertToBit
                      _convertToPort
                         _pinToIndex
                            _readBit
 ---------------------------------------------------------------------------------
 (2) _readBit                                              5     2      3    1862
                                             13 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _pinToIndex                                          39    39      0     198
                                             13 COMRAM    39    39      0
 ---------------------------------------------------------------------------------
 (2) _convertToPort                                        1     1      0     217
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _convertToBit                                         1     1      0     372
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay                                                5     1      4     124
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _bitWrite                                             4     0      4     971
                                             20 COMRAM     4     0      4
                           _bitClear
                             _bitSet
 ---------------------------------------------------------------------------------
 (2) _bitSet                                               4     1      3     273
                                             16 COMRAM     4     1      3
                           _bitValue
 ---------------------------------------------------------------------------------
 (2) _bitClear                                             4     1      3     273
                                             16 COMRAM     4     1      3
                           _bitValue
 ---------------------------------------------------------------------------------
 (3) _bitValue                                             3     3      0      31
                                             13 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _bitRead                                              4     3      1     152
                                             13 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _myIsr                                                5     5      0    2039
                                              8 COMRAM     5     5      0
                         _bufferLoad
                         _bufferSize
                        _bufferStore
 ---------------------------------------------------------------------------------
 (10) _bufferStore                                         4     1      3     458
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (10) _bufferSize                                          2     0      2     630
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _bufferLoad                                          4     2      2     928
                                              4 COMRAM     4     2      2
                         _bufferPeek
 ---------------------------------------------------------------------------------
 (11) _bufferPeek                                          4     2      2     219
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _bitRead
   _bitValue
   _bitWrite
     _bitClear
       _bitValue
     _bitSet
       _bitValue
   _delay
   _digitalRead
     _convertToBit
     _convertToPort
     _pinToIndex
     _readBit
   _pinMode
     _clearBit
       _bitValue
     _convertToBit
     _convertToPort
     _pinToIndex
     _setBit
       _bitValue
   _printf
     _bitRead (ARG)
     _bitValue (ARG)
     _digitalRead (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 _myIsr (ROOT)
   _bufferLoad
     _bufferPeek
   _bufferSize
   _bufferStore

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0      67       5       40.2%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     27      8C       4       87.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4A      50       1       85.1%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     143       8        0.0%
DATA                 0      0     143      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 08 12:07:55 2021

                    l104 168C                      l108 1416                      l132 088E  
                    l119 1388                      l331 18D6                      l334 1888  
                    l182 10E4                      l328 18A6                      l344 17F6  
                    l337 1902                      l353 18EC                      l356 18BE  
                    l359 1844                      l369 17C0                      l568 125A  
                    l756 0EAE                      l769 1012                      _PR2 000FBB  
                    _PR4 000F52                      _PR6 000F4B                      _abs 1716  
                    _pad 10E6                      wreg 000FE8               _TXSTA1bits 000FAC  
                   ?_abs 0020                     l1320 1754                     l1411 12F2  
                   l1317 174C                     l1422 1914                     l1327 181E  
                   l1354 112A                     l1419 16D0                     l1428 178A  
                   l1357 116C                     l1365 0930                     l1359 11A6  
                   l1367 0938                     l1392 0D26                     l1385 0B70  
                   l4300 0D2C                     l4310 0D8C                     l4302 0D3A  
                   l1398 1634                     l1399 163C                     l4320 0DD6  
                   l4312 0D90                     l4304 0D5A                     l4400 0890  
                   l4330 0E46                     l4322 0DE4                     l4314 0D9C  
                   l4306 0D5E                     l4410 090A                     l4402 08B0  
                   l4332 0E58                     l4324 0DF6                     l4316 0DBA  
                   l4308 0D6C                     l4420 0966                     l4412 0924  
                   l4404 08DA                     l4500 0CF0                     l4510 1652  
                   l4326 0E24                     l4318 0DC2                     l4334 0E5E  
                   l4350 0EE6                     l4342 0EB0                     l4270 12AA  
                   l4262 125E                     l4430 0A06                     l4422 096E  
                   l4414 0940                     l4406 08FA                     l4502 0D14  
                   l4600 136C                     l4520 1678                     l4336 0E6E  
                   l4328 0E44                     l4360 0F4E                     l4352 0EF4  
                   l4344 0EB4                     l4272 12E0                     l4264 1270  
                   l4280 16AC                     l4440 0AC4                     l4432 0A0C  
                   l4424 0976                     l4416 0952                     l4408 0908  
                   l4602 137C                     l4530 139C                     l4522 167A  
                   l4338 0E8E                     l4362 0F5C                     l4370 0FC2  
                   l4354 0F14                     l4346 0EC2                     l4266 1282  
                   l4282 16B0                     l4290 177E                     l4450 0B12  
                   l4442 0ADE                     l4426 097C                     l4434 0A70  
                   l4418 0960                     l5250 11F2                     l5242 11A8  
                   l4540 13C2                     l4524 168A                     l4516 1656  
                   l4508 1640                     l4612 18D8                     l4700 04A0  
                   l4372 0FD2                     l4364 0F8A                     l4356 0F32  
                   l4348 0EE2                     l4268 128C                     l4276 168E  
                   l4284 1756                     l4380 10F4                     l4452 0B24  
                   l4436 0A8C                     l4444 0AEC                     l4428 09FE  
                   l5252 1214                     l5244 11C6                     l4462 188C  
                   l4550 13E8                     l4614 18A8                     l4710 055E  
                   l4702 04E2                     l4374 0FF2                     l4366 0FAA  
                   l4358 0F3A                     l4294 1716                     l4278 169A  
                   l4286 1762                     l4390 114A                     l4382 1108  
                   l4454 0B30                     l4446 0AFE                     l4438 0AAA  
                   l4470 0BA4                     l5254 121E                     l5246 11CA  
                   ?_pad 001E                     l4608 1384                     l4560 140E  
                   l4536 13A2                     l4528 138C                     l4616 1820  
                   l4712 0592                     l4720 063C                     l4368 0FBC  
                   l4296 1730                     l4288 1766                     l4392 114E  
                   l4384 1116                     l4456 0B38                     l4448 0B0C  
                   l4480 0C48                     l4472 0BB4                     l5256 1228  
                   l5248 11DE                     l4570 12F6                     l4538 13B2  
                   l4546 13C8                     l5370 10B4                     l4730 06EE  
                   l4714 05C6                     l4706 04F6                     l5362 04B4  
                   l4298 0D28                     l4394 117A                     l4386 1122  
                   l4378 10E6                     l4458 0B48                     l4490 0CC6  
                   l4474 0BB8                     l4466 0B72                     l4650 15E4  
                   l5258 1246                     l4644 18C0                     l4580 131C  
                   l4572 1306                     l4548 13D8                     l4556 13EE  
                   l4740 07BC                     l4732 0722                     l4724 0652  
                   l5364 060E                     l4708 052A                     l4660 0330  
                   l4396 118E                     l4388 1136                     l4484 0C80  
                   l4476 0BDC                     l4468 0B96                     l4652 15F2  
                   l4646 18EE                     l4590 1344                     l4582 132C  
                   l4558 13FE                     l4566 1414                     l4742 07E0  
                   l5366 076A                     l4726 0686                     l4750 084C  
                   l4718 05FA                     l4670 0388                     l4662 0342  
                   l4486 0CA4                     l4494 0CD4                     l4478 0C00  
                   l4654 1618                     l4592 1354                     l5368 0860  
                   l4744 0804                     l4728 06BA                     l4736 0756  
                   l4680 03C8                     l4672 0398                     l4664 0354  
                   l4656 030C                     l4496 0CE2                     l4488 0CB2  
                   l4648 15DC                     l4850 17D2                     l4578 130C  
                   l4770 101E                     l4746 0828                     l4738 0798  
                   l4690 0410                     l4682 03D0                     l4674 03AA  
                   l4666 0364                     l4658 031E                     l4844 186C  
                   l4852 17E6                     l4860 17AA                     l4588 1334  
                   l4780 1074                     l4772 1026                     l4692 0434  
                   l4684 03D8                     l4668 0378                     l4854 178C  
                   l4598 135C                     l4782 108A                     l4774 1032  
                   l4694 0458                     l4678 03C0                     l4848 17C2  
                   l4856 1790                     l4776 1048                     l4768 1016  
                   l4696 047C                     l4688 03EC                     l4858 17A0  
                   l4778 105E                     l4786 10A0                     l4866 17F8  
                   l4788 10E2                     l4868 1800                     STR_1 0301  
                   STR_2 0301                     STR_3 0305                     STR_4 0305  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     _LATE 000F8D                     u4100 0388  
                   u4101 0384                     u4110 0398                     u3310 1270  
                   u4030 1634                     u4111 0394                     u3311 126C  
                   u4031 1630                     u4120 03AA                     u4040 031E  
                   u3320 1282                     u4121 03A6                     u4041 031A  
                   u3401 0D96                     u3321 127E                     u4130 03BC  
                   u4050 0330                     u3410 0DBA                     u3330 12AA  
                   u4131 03B8                     u4051 032C                     u3411 0DB6  
                   u3331 12A6                     u4140 03E8                     u4060 0342  
                   u3420 0DE4                     u3500 0FD2                     u3340 12E0  
                   u4141 03E4                     u4061 033E                     u3421 0DE0  
                   u3501 0FCE                     u3341 12DC                     u4150 04F2  
                   u4070 0354                     u3430 0E24                     u3350 16D0  
                   u3510 10F4                     u4151 04EE                     u4071 0350  
                   u3431 0E20                     u3351 16CC                     u3511 10F0  
                   u4240 17D2                     u4160 064E                     u4080 0364  
                   u3440 0E6E                     u3360 177E                     u3520 1116  
                   u3600 0952                     u4241 17CE                     u4161 064A  
                   u4081 0360                     u3441 0E6A                     u3361 177A  
                   u3521 1112                     u3601 094E                     u4234 187E  
                   u4250 17C0                     u4090 0374                     u3450 0EC2  
                   u3370 1730                     u3530 116C                     u3610 0960  
                   u4235 187A                     u4251 17BC                     u4091 0370  
                   u3451 0EBE                     u3371 172C                     u3531 1168  
                   u3611 095C                     u3380 0D3A                     u3460 0EF4  
                   u3540 117A                     u3620 0A8C                     u3381 0D36  
                   u3461 0EF0                     u3541 1176                     u3621 0A88  
                   u3390 0D6C                     u3470 0F32                     u3630 0AAA  
                   u3550 08C2                     u3710 0B96                     u3391 0D68  
                   u3471 0F2E                     u3631 0AA6                     u3551 08BC  
                   u3711 0B92                     u3704 189E                     u3800 13C2  
                   u3480 0F5C                     u3640 0AC4                     u3560 08C4  
                   u3720 0BDC                     u3705 189A                     u3801 13BE  
                   u3481 0F58                     u3641 0AC0                     u3721 0BD8  
                   u3810 13D8                     u3490 0F8A                     u3650 0ADE  
                   u3570 08DA                     u3730 0C00                     u3811 13D4  
                   u3491 0F86                     u3651 0ADA                     u3571 08D6  
                   u3731 0BFC                     u3900 136C                     u3820 13E8  
                   u3660 0AEC                     u3580 0908                     u3740 0CA4  
                   u3901 1368                     u3821 13E4                     u3661 0AE8  
                   u3581 0904                     u3741 0CA0                     u3910 137C  
                   u3830 13FE                     u3670 0AFE                     u3590 0924  
                   u3911 1378                     u3831 13FA                     u3751 164A  
                   u3671 0AFA                     u3591 0920                     u3840 140E  
                   u3760 1674                     u3680 0B0C                     u3841 140A  
                   u3761 1670                     u3681 0B08                     u3850 1306  
                   u3770 168A                     u3690 0B24                     u3851 1302  
                   u3771 1686                     u3691 0B20                     u3860 131C  
                   u3780 139C                     u3924 183A                     u3861 1318  
                   u3781 1398                     u3925 1836                     u3870 132C  
                   u3790 13B2                     u3871 1328                     u3791 13AE  
                   u3880 1344                     u3881 1340                     u3890 1354  
                   u4587 1796                     u3891 1350                     abs@a 0020  
                   _dbuf 00CC                     _main 11A8                     _dtoa 0890  
                   _prec 004D                     _nout 00CA                     pad@i 0025  
                   pad@p 0022                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   pad@w 0027                     fsr2l 000FD9                     btemp 0051  
                   start 00A8             ___param_bank 000000            ?_convertToBit 0001  
                  ??_abs 0022                    ??_pad 0024            _convertToPort 138A  
           _BAUDCON1bits 000FB8          __end_of___aodiv 0EB0                    ?_main 00C5  
                  ?_dtoa 0029          __end_of___aomod 1014                    _EEADR 000FA9  
                  i2l510 1868                    i2l503 150C                    i2l513 1912  
                  i2l434 0094                    i2l507 149A             vfpfcnvrt@fmt 00B7  
                  _SPBRG 000FAF                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _SYNC1 007D64  
        __end_of_bitRead 188A                    _delay 178C                    _flags 004F  
        __end_of_readBit 1846                    _fputc 125E                    _fputs 168E  
                  _myIsr 0008          __end_of_pinMode 0890                    pad@fp 001E  
                  _width 004B                    _putch 1914                    main@a 004A  
                  dtoa@d 002B                    dtoa@i 00B3                    dtoa@n 00AB  
                  dtoa@p 00A5                    dtoa@s 00A9                    dtoa@w 00A7  
         pinMode@bit_val 003B                    tablat 000FF5                    plusw1 000FE3  
                  plusw2 000FDB            pinToIndex@pin 0033                    ttemp5 0052  
                  ttemp6 0055                    ttemp7 0059                    status 000FD8  
                  wtemp8 0052           ??_convertToBit 000E          __initialization 1576  
           __end_of_main 125E             __end_of_dtoa 0B72           ?_convertToPort 0001  
                 ??_main 0049                   ??_dtoa 0033            __activetblptr 000002  
   __size_of_digitalRead 00D2                   ?_delay 000E                   ?_fputc 000E  
                 ?_fputs 0017                   _ADRESH 000FC4                   ?_myIsr 0001  
                 _ADRESL 000FC3                   _EEDATA 000FA8                   _CCPR1L 000FBE  
                 _CCPR2L 000F67                   _CCPR3L 000F5E                   _CCPR4L 000F58  
                 _CCPR5L 000F55                   _EECON2 000FA7                   _ANSELA 000F38  
                 ?_putch 0001                   _ANSELB 000F39                   _ANSELC 000F3A  
                 _ANSELD 000F3B                   _ANSELE 000F3C           bufferLoad@byte 0008  
                 i2l3510 1418                   i2l3520 1468                   i2l3512 1434  
                 i2l3274 1846                   i2l3522 148A                   i2l3506 1904  
                 i2l3276 1866                   i2l3524 1498                   i2l3516 143A  
                 i2l3532 14BC                   i2l3518 1448                   i2l3534 14EA  
                 i2l3528 149C                   i2l3900 0062                   i2l3902 0070  
                 i2l3904 007E                   i2l3906 0082                   i2l3908 0092  
                 i2l3890 001A                   i2l3892 0028                   i2l3894 0036  
                 i2l3896 0052                   i2l3898 0060           bufferPeek@byte 0004  
                 _RCREG1 000FAE         __end_of_bitClear 18D8                   _TXREG1 000FAD  
       __end_of_clearBit 18C0         __end_of_bitValue 18A8         __end_of_bitWrite 17F8  
           _CCPTMRS0bits 000F49             _CCPTMRS1bits 000F48             vfprintf@cfmt 0045  
              ??___aodiv 001E                ??___aomod 001E     __size_of_bufferStore 0072  
                 _bitSet 18EE                   clear_0 15BC                ??_bitRead 000F  
                 _setBit 18D8                   isa$std 000001                   _printf 17F8  
                 pad@buf 0020                   dtoa@fp 0029                   _strlen 1756  
              ??_readBit 0011                   fputc@c 000E                   fputs@c 001B  
                 fputs@i 001C                   fputs@s 0017                ??_pinMode 0036  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8           pinToIndex@pins 000F                   putch@c 0001  
       __end_of_vfprintf 163E               __accesstop 0060  __end_of__initialization 15CE  
          ___rparam_used 000001       digitalRead@bit_val 003B              pinMode@mode 0035  
        pinMode@port_num 0038          ??_convertToPort 000E              pinMode@port 0039  
         __pcstackCOMRAM 0001           bitWrite@number 0015             __pidataBANK0 16D2  
           __pidataBANK1 150E            __end_of_delay 17C2            __end_of_fputc 12F4  
          __end_of_fputs 16D2            __end_of_myIsr 00A8              pinToIndex@i 0034  
          __end_of_putch 1916     __end_of_convertToBit 138A                  ??_delay 0012  
                ??_fputc 0012                  ??_fputs 001B                  ??_myIsr 0009  
                ??_putch 000E               __pbssBANK0 00CA                  ?_bitSet 0011  
                ?_setBit 0011                  ?_printf 00C1                  ?_strlen 000E  
          bitRead@number 0011                ?_bitClear 0011               _bufferLoad 1418  
             _bufferPeek 1846                ?_clearBit 0011                ?_bitValue 0001  
             _bufferSize 1904       __size_of_vfpfcnvrt 01B6                ?_bitWrite 0015  
        _transmit_buffer 0124                  __Hparam 0000                  __Lparam 0000  
         bitClear@number 0011                  ___aodiv 0D28                  ___aomod 0EB0  
        __size_of_bitSet 0016                ?_vfprintf 00BB             __psmallconst 0300  
                _bitRead 186A                  __pcinit 1576                  __ramtop 0300  
        __size_of_setBit 0016            convertToBit@i 000E                  __ptext0 11A8  
                __ptext1 17F8                  __ptext2 15DC                  __ptext3 0B72  
                __ptext4 0890                  __ptext5 10E6                  __ptext6 1756  
                __ptext7 168E                  __ptext8 125E                  __ptext9 1914  
        __size_of_printf 0028          __size_of_strlen 0036                  _readBit 1820  
              _T2CONbits 000FBA             __size_of_abs 0040             __size_of_pad 00C2  
             ??_bitClear 0014                  bitSet@b 0013               _pinToIndex 163E  
                _pinMode 030A                  delay@ms 000E                _T4CONbits 000F51  
             ??_clearBit 0014               ??_bitValue 000E               ??_bitWrite 0019  
              _T6CONbits 000F4A     end_of_initialization 15CE          pinToIndex@F6050 0100  
                fputc@fp 0010            __Lmediumconst 0000                  fputs@fp 0019  
         digitalRead@pin 0037                  setBit@b 0013                  setBit@p 0011  
      __end_of_vfpfcnvrt 0D28                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0045            ??_digitalRead 0035                  strlen@a 0010  
                strlen@s 000E    __size_of_convertToBit 0096          bufferStore@byte 0003  
            ?_bufferLoad 0005              ?_bufferPeek 0001              ?_bufferSize 0001  
            _CCP1CONbits 000FBD              _CCP2CONbits 000F66              _CCP3CONbits 000F5D  
            _CCP4CONbits 000F57              _CCP5CONbits 000F54            ??_bufferStore 0004  
           _convertToBit 12F4              vfpfcnvrt@ap 00B9              vfpfcnvrt@fp 00B5  
            vfpfcnvrt@ll 003D           __end_of_bitSet 1904           __end_of_setBit 18EE  
         __end_of_printf 1820              ?_pinToIndex 0001           __end_of_strlen 178C  
    start_initialization 1576      __end_of_digitalRead 10E6      digitalRead@port_num 0039  
            __end_of_abs 1756              __end_of_pad 11A8              vfprintf@fmt 00BD  
    __size_of_bufferLoad 0084      __size_of_bufferPeek 0024      __size_of_bufferSize 0010  
  __end_of_convertToPort 1418                 ??_bitSet 0014              __pdataBANK0 0060  
            __pdataBANK1 0100      __end_of_bufferStore 150E                 ??_setBit 0014  
               ??_printf 0047                 ??_strlen 0010              __pbssCOMRAM 004B  
          __pcstackBANK0 00A3               pinMode@pin 003A         ___aodiv@dividend 000E  
      __size_of_bitClear 0018        __size_of_clearBit 0018        __size_of_bitValue 001E  
      __size_of_bitWrite 0036                _dtoa$2001 00A3      __size_of_pinToIndex 0050  
              __pintcode 0008                 ?___aodiv 000E                 ?___aomod 000E  
       ___aodiv@quotient 0020                 ?_bitRead 000E              _digitalRead 1014  
      __size_of_vfprintf 0062              __smallconst 0300                 ?_readBit 000E  
               ?_pinMode 0035                bitClear@b 0013           __size_of_delay 0036  
         __size_of_fputc 0096           __size_of_fputs 0044           __size_of_myIsr 00A0  
       bufferLoad@buffer 0005           __size_of_putch 0002             bitSet@number 0011  
              clearBit@b 0013                clearBit@p 0011                bitValue@b 0010  
       bufferPeek@buffer 0001                 _PIE1bits 000F9D                bitWrite@b 0017  
            _bufferStore 149C                 i2u264_40 1434                 i2u264_41 1430  
               i2u265_40 14B8                 i2u265_41 14B4                 _PIR1bits 000F9E  
               i2u293_40 0028                 i2u293_41 0024                 i2u294_40 0036  
               i2u294_41 0032                 i2u295_40 0052                 i2u295_41 004E  
               i2u296_40 0070                 i2u296_41 006C                 i2u297_40 007E  
               i2u297_41 007A                 _PIR5bits 000F7E                 _RCONbits 000FD0  
              _vfpfcnvrt 0B72               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0             ??_bufferLoad 0007             ??_bufferPeek 0003  
           ??_bufferSize 0003                copy_data0 158A                copy_data1 15AA  
             _EECON1bits 000FA6                 __Hrparam 0000               vfprintf@ap 00BF  
               __Lrparam 0000               vfprintf@fp 00BB       __end_of_bufferLoad 149C  
     __end_of_bufferPeek 186A       __end_of_bufferSize 1914         __size_of___aodiv 0188  
       __size_of___aomod 0164               ?_vfpfcnvrt 00B5                myIsr@byte 000D  
        ___aodiv@divisor 0016         __size_of_bitRead 0020         digitalRead@value 003A  
        ___aodiv@counter 001E             ??_pinToIndex 000E                 _bitClear 18C0  
       __size_of_readBit 0026                 _clearBit 18A8                 _bitValue 188A  
       __size_of_pinMode 0586                 _bitWrite 17C2                 __ptext10 1716  
               __ptext11 0EB0                 __ptext20 12F4                 __ptext12 0D28  
               __ptext21 178C                 __ptext13 030A                 __ptext30 1418  
               __ptext22 17C2                 __ptext14 18D8                 __ptext31 1846  
               __ptext23 18EE                 __ptext15 18A8                 __ptext24 18C0  
               __ptext16 1014                 __ptext25 188A                 __ptext17 1820  
               __ptext26 186A                 __ptext18 163E                 __ptext19 138A  
               __ptext28 149C                 __ptext29 1904           convertToPort@i 000E  
          __size_of_main 00B6            __size_of_dtoa 02E2                 bitRead@b 000E  
     __end_of_pinToIndex 168E                 isa$xinst 000000                 int$flags 0051  
               _vfprintf 15DC                printf@fmt 00C1                 main@argc 00C5  
               main@argv 00C7           _receive_buffer 0060         bufferSize@buffer 0001  
       ___aomod@dividend 000E               _INTCONbits 000FF2                 readBit@b 0010  
               readBit@p 000E              bitWrite@val 0018          digitalRead@port 0038  
               intlevel2 0000               _RCSTA1bits 000FAB                 printf@ap 0047  
        ___aomod@divisor 0016              ??_vfpfcnvrt 003B          ___aomod@counter 001E  
           ?_digitalRead 0001        bufferStore@buffer 0001             ___aodiv@sign 001F  
 __size_of_convertToPort 008E             ___aomod@sign 001F             ?_bufferStore 0001  
