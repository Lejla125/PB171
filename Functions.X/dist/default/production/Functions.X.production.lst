

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 30 20:47:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,inline
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,inline
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,inline
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,inline
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,inline
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 05/05/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F44K22 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataBANK0
    79  00161C                     __pidataBANK0:
    80                           	callstack 0
    81                           
    82                           ;initializer for pinToIndex@F6037
    83  00161C  02                 	db	2
    84  00161D  03                 	db	3
    85  00161E  04                 	db	4
    86  00161F  05                 	db	5
    87  001620  06                 	db	6
    88  001621  07                 	db	7
    89  001622  0E                 	db	14
    90  001623  0D                 	db	13
    91  001624  21                 	db	33
    92  001625  22                 	db	34
    93  001626  23                 	db	35
    94  001627  24                 	db	36
    95  001628  25                 	db	37
    96  001629  26                 	db	38
    97  00162A  27                 	db	39
    98  00162B  28                 	db	40
    99  00162C  0F                 	db	15
   100  00162D  10                 	db	16
   101  00162E  11                 	db	17
   102  00162F  12                 	db	18
   103  001630  17                 	db	23
   104  001631  18                 	db	24
   105  001632  19                 	db	25
   106  001633  1A                 	db	26
   107  001634  13                 	db	19
   108  001635  14                 	db	20
   109  001636  15                 	db	21
   110  001637  16                 	db	22
   111  001638  1B                 	db	27
   112  001639  1C                 	db	28
   113  00163A  1D                 	db	29
   114  00163B  1E                 	db	30
   115  00163C  08                 	db	8
   116  00163D  09                 	db	9
   117  00163E  0A                 	db	10
   118  00163F  01                 	db	1
   119  0000                     _ANSELE	set	3900
   120  0000                     _ANSELD	set	3899
   121  0000                     _ANSELC	set	3898
   122  0000                     _ANSELB	set	3897
   123  0000                     _ANSELA	set	3896
   124  0000                     _PORTE	set	3972
   125  0000                     _PORTD	set	3971
   126  0000                     _PORTC	set	3970
   127  0000                     _PORTB	set	3969
   128  0000                     _PORTA	set	3968
   129  0000                     _LATE	set	3981
   130  0000                     _LATD	set	3980
   131  0000                     _LATC	set	3979
   132  0000                     _LATB	set	3978
   133  0000                     _LATA	set	3977
   134  0000                     _TRISE	set	3990
   135  0000                     _TRISD	set	3989
   136  0000                     _TRISC	set	3988
   137  0000                     _TRISB	set	3987
   138  0000                     _TRISA	set	3986
   139                           
   140                           	psect	smallconst
   141  000300                     __psmallconst:
   142                           	callstack 0
   143  000300  00                 	db	0
   144  000301                     STR_1:
   145  000301  25                 	db	37
   146  000302  64                 	db	100	;'d'
   147  000303  0A                 	db	10
   148  000304  00                 	db	0
   149  000305                     STR_3:
   150  000305  25                 	db	37
   151  000306  64                 	db	100	;'d'
   152  000307  00                 	db	0
   153  000308  00                 	db	0	; dummy byte at the end
   154  0000                     
   155                           ; #config settings
   156                           
   157                           	psect	cinit
   158  00152E                     __pcinit:
   159                           	callstack 0
   160  00152E                     start_initialization:
   161                           	callstack 0
   162  00152E                     __initialization:
   163                           	callstack 0
   164                           
   165                           ; Initialize objects allocated to BANK0 (36 bytes)
   166                           ; load TBLPTR registers with __pidataBANK0
   167  00152E  0E1C               	movlw	low __pidataBANK0
   168  001530  6EF6               	movwf	tblptrl,c
   169  001532  0E16               	movlw	high __pidataBANK0
   170  001534  6EF7               	movwf	tblptrh,c
   171  001536  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   172  001538  6EF8               	movwf	tblptru,c
   173  00153A  EE00  F088         	lfsr	0,__pdataBANK0
   174  00153E  EE10 F024          	lfsr	1,36
   175  001542                     copy_data0:
   176  001542  0009               	tblrd		*+
   177  001544  CFF5 FFEE          	movff	tablat,postinc0
   178  001548  50E5               	movf	postdec1,w,c
   179  00154A  50E1               	movf	fsr1l,w,c
   180  00154C  E1FA               	bnz	copy_data0
   181                           
   182                           ; Clear objects allocated to BANK0 (40 bytes)
   183  00154E  EE00  F060         	lfsr	0,__pbssBANK0
   184  001552  0E28               	movlw	40
   185  001554                     clear_0:
   186  001554  6AEE               	clrf	postinc0,c
   187  001556  06E8               	decf	wreg,f,c
   188  001558  E1FD               	bnz	clear_0
   189  00155A                     end_of_initialization:
   190                           	callstack 0
   191  00155A                     __end_of__initialization:
   192                           	callstack 0
   193  00155A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   194  00155C  6EF8               	movwf	tblptru,c
   195  00155E  0100               	movlb	0
   196  001560  EF6B  F009         	goto	_main	;jump to C main() function
   197                           
   198                           	psect	bssBANK0
   199  000060                     __pbssBANK0:
   200                           	callstack 0
   201  000060                     _nout:
   202                           	callstack 0
   203  000060                     	ds	2
   204  000062                     _width:
   205                           	callstack 0
   206  000062                     	ds	2
   207  000064                     _prec:
   208                           	callstack 0
   209  000064                     	ds	2
   210  000066                     _flags:
   211                           	callstack 0
   212  000066                     	ds	2
   213  000068                     _dbuf:
   214                           	callstack 0
   215  000068                     	ds	32
   216                           
   217                           	psect	dataBANK0
   218  000088                     __pdataBANK0:
   219                           	callstack 0
   220  000088                     pinToIndex@F6037:
   221                           	callstack 0
   222  000088                     	ds	36
   223                           
   224                           	psect	cstackBANK0
   225  0000AC                     __pcstackBANK0:
   226                           	callstack 0
   227  0000AC                     
   228                           ; 2 bytes @ 0x0
   229  0000AC                     	ds	2
   230  0000AE                     
   231                           ; 3 bytes @ 0x2
   232  0000AE                     	ds	3
   233                           
   234                           	psect	cstackCOMRAM
   235  000001                     __pcstackCOMRAM:
   236                           	callstack 0
   237  000001                     ??_bitValue:
   238  000001                     ?_strlen:
   239                           	callstack 0
   240  000001                     ?___aodiv:
   241                           	callstack 0
   242  000001                     ?___aomod:
   243                           	callstack 0
   244  000001                     bitRead@b:
   245                           	callstack 0
   246  000001                     convertToPort@i:
   247                           	callstack 0
   248  000001                     convertToBit@i:
   249                           	callstack 0
   250  000001                     readBit@p:
   251                           	callstack 0
   252  000001                     fputc@c:
   253                           	callstack 0
   254  000001                     strlen@s:
   255                           	callstack 0
   256  000001                     ___aodiv@dividend:
   257                           	callstack 0
   258  000001                     ___aomod@dividend:
   259                           	callstack 0
   260                           
   261                           ; 8 bytes @ 0x0
   262  000001                     	ds	1
   263  000002                     ??_bitRead:
   264  000002                     pinToIndex@pins:
   265                           	callstack 0
   266                           
   267                           ; 36 bytes @ 0x1
   268  000002                     	ds	1
   269  000003                     bitValue@b:
   270                           	callstack 0
   271  000003                     readBit@b:
   272                           	callstack 0
   273  000003                     fputc@fp:
   274                           	callstack 0
   275  000003                     strlen@a:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x2
   279  000003                     	ds	1
   280  000004                     ??_readBit:
   281  000004                     bitRead@number:
   282                           	callstack 0
   283  000004                     bitClear@number:
   284                           	callstack 0
   285  000004                     bitSet@number:
   286                           	callstack 0
   287  000004                     setBit@p:
   288                           	callstack 0
   289  000004                     clearBit@p:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x3
   293  000004                     	ds	1
   294  000005                     ??_fputc:
   295                           
   296                           ; 1 bytes @ 0x4
   297  000005                     	ds	1
   298  000006                     bitClear@b:
   299                           	callstack 0
   300  000006                     bitSet@b:
   301                           	callstack 0
   302  000006                     setBit@b:
   303                           	callstack 0
   304  000006                     clearBit@b:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x5
   308  000006                     	ds	1
   309  000007                     ??_bitClear:
   310  000007                     ??_bitSet:
   311  000007                     ??_setBit:
   312  000007                     ??_clearBit:
   313                           
   314                           ; 1 bytes @ 0x6
   315  000007                     	ds	1
   316  000008                     bitWrite@number:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x7
   320  000008                     	ds	1
   321  000009                     ___aodiv@divisor:
   322                           	callstack 0
   323  000009                     ___aomod@divisor:
   324                           	callstack 0
   325                           
   326                           ; 8 bytes @ 0x8
   327  000009                     	ds	1
   328  00000A                     bitWrite@b:
   329                           	callstack 0
   330  00000A                     fputs@s:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x9
   334  00000A                     	ds	1
   335  00000B                     bitWrite@val:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0xA
   339  00000B                     	ds	1
   340  00000C                     fputs@fp:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0xB
   344  00000C                     	ds	2
   345  00000E                     fputs@c:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0xD
   349  00000E                     	ds	1
   350  00000F                     fputs@i:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0xE
   354  00000F                     	ds	2
   355  000011                     ?_pad:
   356                           	callstack 0
   357  000011                     ___aodiv@counter:
   358                           	callstack 0
   359  000011                     ___aomod@counter:
   360                           	callstack 0
   361  000011                     pad@fp:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x10
   365  000011                     	ds	1
   366  000012                     ___aodiv@sign:
   367                           	callstack 0
   368  000012                     ___aomod@sign:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x11
   372  000012                     	ds	1
   373  000013                     ?_abs:
   374                           	callstack 0
   375  000013                     pad@buf:
   376                           	callstack 0
   377  000013                     abs@a:
   378                           	callstack 0
   379  000013                     ___aodiv@quotient:
   380                           	callstack 0
   381                           
   382                           ; 8 bytes @ 0x12
   383  000013                     	ds	2
   384  000015                     ??_abs:
   385  000015                     pad@p:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x14
   389  000015                     	ds	2
   390  000017                     ??_pad:
   391                           
   392                           ; 1 bytes @ 0x16
   393  000017                     	ds	1
   394  000018                     pad@i:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x17
   398  000018                     	ds	2
   399  00001A                     pad@w:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x19
   403  00001A                     	ds	2
   404  00001C                     ?_dtoa:
   405                           	callstack 0
   406  00001C                     dtoa@fp:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x1B
   410  00001C                     	ds	2
   411  00001E                     dtoa@d:
   412                           	callstack 0
   413                           
   414                           ; 8 bytes @ 0x1D
   415  00001E                     	ds	8
   416  000026                     ??_dtoa:
   417  000026                     pinToIndex@pin:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0x25
   421  000026                     	ds	1
   422  000027                     pinToIndex@i:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x26
   426  000027                     	ds	1
   427  000028                     ??_digitalRead:
   428  000028                     pinMode@mode:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x27
   432  000028                     	ds	1
   433  000029                     ??_pinMode:
   434                           
   435                           ; 1 bytes @ 0x28
   436  000029                     	ds	1
   437  00002A                     digitalRead@pin:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x29
   441  00002A                     	ds	1
   442  00002B                     pinMode@port_num:
   443                           	callstack 0
   444  00002B                     digitalRead@port:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0x2A
   448  00002B                     	ds	1
   449  00002C                     pinMode@port:
   450                           	callstack 0
   451  00002C                     digitalRead@port_num:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x2B
   455  00002C                     	ds	1
   456  00002D                     pinMode@pin:
   457                           	callstack 0
   458  00002D                     digitalRead@value:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x2C
   462  00002D                     	ds	1
   463  00002E                     pinMode@bit_val:
   464                           	callstack 0
   465  00002E                     digitalRead@bit_val:
   466                           	callstack 0
   467  00002E                     _dtoa$680:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x2D
   471  00002E                     	ds	2
   472  000030                     dtoa@p:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x2F
   476  000030                     	ds	2
   477  000032                     dtoa@w:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x31
   481  000032                     	ds	2
   482  000034                     dtoa@s:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x33
   486  000034                     	ds	2
   487  000036                     dtoa@n:
   488                           	callstack 0
   489                           
   490                           ; 8 bytes @ 0x35
   491  000036                     	ds	8
   492  00003E                     dtoa@i:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x3D
   496  00003E                     	ds	2
   497  000040                     ?_vfpfcnvrt:
   498                           	callstack 0
   499  000040                     vfpfcnvrt@fp:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x3F
   503  000040                     	ds	2
   504  000042                     vfpfcnvrt@fmt:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x41
   508  000042                     	ds	2
   509  000044                     vfpfcnvrt@ap:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x43
   513  000044                     	ds	2
   514  000046                     ??_vfpfcnvrt:
   515                           
   516                           ; 1 bytes @ 0x45
   517  000046                     	ds	2
   518  000048                     vfpfcnvrt@ll:
   519                           	callstack 0
   520                           
   521                           ; 8 bytes @ 0x47
   522  000048                     	ds	8
   523  000050                     ?_vfprintf:
   524                           	callstack 0
   525  000050                     vfprintf@fp:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x4F
   529  000050                     	ds	2
   530  000052                     vfprintf@fmt:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x51
   534  000052                     	ds	2
   535  000054                     vfprintf@ap:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x53
   539  000054                     	ds	2
   540  000056                     vfprintf@cfmt:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x55
   544  000056                     	ds	2
   545  000058                     ?_printf:
   546                           	callstack 0
   547  000058                     printf@fmt:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x57
   551  000058                     	ds	4
   552  00005C                     printf@ap:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x5B
   556  00005C                     	ds	2
   557  00005E                     ??_main:
   558                           
   559                           ; 1 bytes @ 0x5D
   560  00005E                     	ds	1
   561  00005F                     main@a:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x5E
   565  00005F                     	ds	1
   566                           
   567 ;;
   568 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   569 ;;
   570 ;; *************** function _main *****************
   571 ;; Defined at:
   572 ;;		line 18 in file "fun.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;  argc            2    0[BANK0 ] int 
   575 ;;  argv            3    2[BANK0 ] PTR PTR unsigned char 
   576 ;; Auto vars:     Size  Location     Type
   577 ;;  a               1   94[COMRAM] unsigned char 
   578 ;; Return value:  Size  Location     Type
   579 ;;                  2    0[BANK0 ] int 
   580 ;; Registers used:
   581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   587 ;;      Params:         0       5       0       0
   588 ;;      Locals:         1       0       0       0
   589 ;;      Temps:          1       0       0       0
   590 ;;      Totals:         2       5       0       0
   591 ;;Total ram usage:        7 bytes
   592 ;; Hardware stack levels required when called: 8
   593 ;; This function calls:
   594 ;;		_bitRead
   595 ;;		_bitValue
   596 ;;		_bitWrite
   597 ;;		_digitalRead
   598 ;;		_pinMode
   599 ;;		_printf
   600 ;; This function is called by:
   601 ;;		Startup code after reset
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text0
   606  0012D6                     __ptext0:
   607                           	callstack 0
   608  0012D6                     _main:
   609                           	callstack 23
   610  0012D6                     
   611                           ;fun.c: 20:     printf("%d\n", bitValue(5));
   612  0012D6  0E01               	movlw	low STR_1
   613  0012D8  6E58               	movwf	printf@fmt^0,c
   614  0012DA  0E03               	movlw	high STR_1
   615  0012DC  6E59               	movwf	(printf@fmt+1)^0,c
   616  0012DE  0E05               	movlw	5
   617  0012E0  EC30  F00B         	call	_bitValue
   618  0012E4  6E5E               	movwf	??_main^0,c
   619  0012E6  505E               	movf	??_main^0,w,c
   620  0012E8  6E5A               	movwf	(?_printf+2)^0,c
   621  0012EA  6A5B               	clrf	(?_printf+3)^0,c
   622  0012EC  ECE8  F00A         	call	_printf	;wreg free
   623  0012F0                     
   624                           ;fun.c: 21:     uint8_t a = 14;
   625  0012F0  0E0E               	movlw	14
   626  0012F2  6E5F               	movwf	main@a^0,c
   627  0012F4                     
   628                           ;fun.c: 22:     bitWrite(&a, 0, 1);
   629  0012F4  0E5F               	movlw	low main@a
   630  0012F6  6E08               	movwf	bitWrite@number^0,c
   631  0012F8  0E00               	movlw	high main@a
   632  0012FA  6E09               	movwf	(bitWrite@number+1)^0,c
   633  0012FC  0E00               	movlw	0
   634  0012FE  6E0A               	movwf	bitWrite@b^0,c
   635  001300  0E01               	movlw	1
   636  001302  6E0B               	movwf	bitWrite@val^0,c
   637  001304  ECCD  F00A         	call	_bitWrite	;wreg free
   638  001308                     
   639                           ;fun.c: 23:     printf("%d\n",a);
   640  001308  0E01               	movlw	low STR_1
   641  00130A  6E58               	movwf	printf@fmt^0,c
   642  00130C  0E03               	movlw	high STR_1
   643  00130E  6E59               	movwf	(printf@fmt+1)^0,c
   644  001310  C05F  F05A         	movff	main@a,?_printf+2
   645  001314  6A5B               	clrf	(?_printf+3)^0,c
   646  001316  ECE8  F00A         	call	_printf	;wreg free
   647  00131A                     
   648                           ;fun.c: 24:     printf("%d", bitRead(8,3));
   649  00131A  0E05               	movlw	low STR_3
   650  00131C  6E58               	movwf	printf@fmt^0,c
   651  00131E  0E03               	movlw	high STR_3
   652  001320  6E59               	movwf	(printf@fmt+1)^0,c
   653  001322  0E03               	movlw	3
   654  001324  6E01               	movwf	bitRead@b^0,c
   655  001326  0E08               	movlw	8
   656  001328  EC20  F00B         	call	_bitRead
   657  00132C  6E5E               	movwf	??_main^0,c
   658  00132E  505E               	movf	??_main^0,w,c
   659  001330  6E5A               	movwf	(?_printf+2)^0,c
   660  001332  6A5B               	clrf	(?_printf+3)^0,c
   661  001334  ECE8  F00A         	call	_printf	;wreg free
   662  001338                     
   663                           ;fun.c: 26:     pinMode(33, OUTPUT);
   664  001338  0E02               	movlw	2
   665  00133A  6E28               	movwf	pinMode@mode^0,c
   666  00133C  0E21               	movlw	33
   667  00133E  EC85  F001         	call	_pinMode
   668  001342                     
   669                           ;fun.c: 27:     pinMode(15, INPUT);
   670  001342  0E01               	movlw	1
   671  001344  6E28               	movwf	pinMode@mode^0,c
   672  001346  0E0F               	movlw	15
   673  001348  EC85  F001         	call	_pinMode
   674  00134C                     
   675                           ;fun.c: 28:     printf("%d", digitalRead(18));
   676  00134C  0E05               	movlw	low STR_3
   677  00134E  6E58               	movwf	printf@fmt^0,c
   678  001350  0E03               	movlw	high STR_3
   679  001352  6E59               	movwf	(printf@fmt+1)^0,c
   680  001354  0E12               	movlw	18
   681  001356  EC09  F008         	call	_digitalRead
   682  00135A  6E5E               	movwf	??_main^0,c
   683  00135C  505E               	movf	??_main^0,w,c
   684  00135E  6E5A               	movwf	(?_printf+2)^0,c
   685  001360  6A5B               	clrf	(?_printf+3)^0,c
   686  001362  ECE8  F00A         	call	_printf	;wreg free
   687  001366  EF00  F000         	goto	start
   688  00136A                     __end_of_main:
   689                           	callstack 0
   690                           
   691 ;; *************** function _printf *****************
   692 ;; Defined at:
   693 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
   696 ;;		 -> STR_4(3), STR_3(3), STR_2(4), STR_1(4), 
   697 ;; Auto vars:     Size  Location     Type
   698 ;;  ap              2   91[COMRAM] PTR void [1]
   699 ;;		 -> ?_printf(2), 
   700 ;;  ret             2    0        int 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  2   87[COMRAM] int 
   703 ;; Registers used:
   704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   710 ;;      Params:         4       0       0       0
   711 ;;      Locals:         2       0       0       0
   712 ;;      Temps:          0       0       0       0
   713 ;;      Totals:         6       0       0       0
   714 ;;Total ram usage:        6 bytes
   715 ;; Hardware stack levels used: 1
   716 ;; Hardware stack levels required when called: 7
   717 ;; This function calls:
   718 ;;		_vfprintf
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text1
   725  0015D0                     __ptext1:
   726                           	callstack 0
   727  0015D0                     _printf:
   728                           	callstack 23
   729  0015D0  0E5A               	movlw	low (?_printf+2)
   730  0015D2  6E5C               	movwf	printf@ap^0,c
   731  0015D4  0E00               	movlw	high (?_printf+2)
   732  0015D6  6E5D               	movwf	(printf@ap+1)^0,c
   733  0015D8  0E00               	movlw	0
   734  0015DA  6E50               	movwf	vfprintf@fp^0,c
   735  0015DC  0E00               	movlw	0
   736  0015DE  6E51               	movwf	(vfprintf@fp+1)^0,c
   737  0015E0  C058  F052         	movff	printf@fmt,vfprintf@fmt
   738  0015E4  C059  F053         	movff	printf@fmt+1,vfprintf@fmt+1
   739  0015E8  0E5C               	movlw	low printf@ap
   740  0015EA  6E54               	movwf	vfprintf@ap^0,c
   741  0015EC  0E00               	movlw	high printf@ap
   742  0015EE  6E55               	movwf	(vfprintf@ap+1)^0,c
   743  0015F0  ECFC  F009         	call	_vfprintf	;wreg free
   744  0015F4  0012               	return		;funcret
   745  0015F6                     __end_of_printf:
   746                           	callstack 0
   747                           
   748 ;; *************** function _vfprintf *****************
   749 ;; Defined at:
   750 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   753 ;;		 -> NULL(0), 
   754 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   755 ;;		 -> STR_4(3), STR_3(3), STR_2(4), STR_1(4), 
   756 ;;  ap              2   83[COMRAM] PTR PTR void 
   757 ;;		 -> printf@ap(2), 
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   760 ;;		 -> STR_4(3), STR_3(3), STR_2(4), STR_1(4), 
   761 ;; Return value:  Size  Location     Type
   762 ;;                  2   79[COMRAM] int 
   763 ;; Registers used:
   764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   770 ;;      Params:         6       0       0       0
   771 ;;      Locals:         2       0       0       0
   772 ;;      Temps:          0       0       0       0
   773 ;;      Totals:         8       0       0       0
   774 ;;Total ram usage:        8 bytes
   775 ;; Hardware stack levels used: 1
   776 ;; Hardware stack levels required when called: 6
   777 ;; This function calls:
   778 ;;		_vfpfcnvrt
   779 ;; This function is called by:
   780 ;;		_printf
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           	psect	text2
   785  0013F8                     __ptext2:
   786                           	callstack 0
   787  0013F8                     _vfprintf:
   788                           	callstack 23
   789  0013F8                     
   790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   791  0013F8  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
   792  0013FC  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   793  001400                     
   794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   795  001400  0E00               	movlw	0
   796  001402  0100               	movlb	0	; () banked
   797  001404  6F61               	movwf	(_nout+1)& (0+255),b
   798  001406  0E00               	movlw	0
   799  001408  6F60               	movwf	_nout& (0+255),b
   800                           
   801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   802  00140A  EF1A  F00A         	goto	l1822
   803  00140E                     l1820:
   804                           
   805                           ; BSR set to: 0
   806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   807  00140E  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
   808  001412  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   809  001416  0E56               	movlw	low vfprintf@cfmt
   810  001418  6E42               	movwf	vfpfcnvrt@fmt^0,c
   811  00141A  0E00               	movlw	high vfprintf@cfmt
   812  00141C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
   813  00141E  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
   814  001422  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   815  001426  ECB9  F005         	call	_vfpfcnvrt	;wreg free
   816  00142A  5040               	movf	?_vfpfcnvrt^0,w,c
   817  00142C  0100               	movlb	0	; () banked
   818  00142E  2760               	addwf	_nout& (0+255),f,b
   819  001430  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
   820  001432  2361               	addwfc	(_nout+1)& (0+255),f,b
   821  001434                     l1822:
   822                           
   823                           ; BSR set to: 0
   824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   825  001434  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
   826  001438  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   827  00143C                     	if	0	;tblptru may be non-zero
   828  00143C                     	endif
   829  00143C                     	if	0	;tblptru may be non-zero
   830  00143C                     	endif
   831  00143C  0008               	tblrd		*
   832  00143E  50F5               	movf	tablat,w,c
   833  001440  0900               	iorlw	0
   834  001442  A4D8               	btfss	status,2,c
   835  001444  EF26  F00A         	goto	u1261
   836  001448  EF28  F00A         	goto	u1260
   837  00144C                     u1261:
   838  00144C  EF07  F00A         	goto	l1820
   839  001450                     u1260:
   840  001450                     
   841                           ; BSR set to: 0
   842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   843  001450  C060  F050         	movff	_nout,?_vfprintf
   844  001454  C061  F051         	movff	_nout+1,?_vfprintf+1
   845  001458                     
   846                           ; BSR set to: 0
   847  001458  0012               	return		;funcret
   848  00145A                     __end_of_vfprintf:
   849                           	callstack 0
   850                           
   851 ;; *************** function _vfpfcnvrt *****************
   852 ;; Defined at:
   853 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
   856 ;;		 -> NULL(0), 
   857 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
   858 ;;		 -> vfprintf@cfmt(2), 
   859 ;;  ap              2   67[COMRAM] PTR PTR void 
   860 ;;		 -> printf@ap(2), 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  ll              8   71[COMRAM] long long 
   863 ;;  llu             8    0        unsigned long long 
   864 ;;  f               4    0        unsigned long long 
   865 ;;  vp              3    0        PTR void 
   866 ;;  ct              3    0        unsigned char [3]
   867 ;;  cp              3    0        PTR unsigned char 
   868 ;;  i               2    0        int 
   869 ;;  done            2    0        int 
   870 ;;  c               1    0        unsigned char 
   871 ;; Return value:  Size  Location     Type
   872 ;;                  2   63[COMRAM] int 
   873 ;; Registers used:
   874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   880 ;;      Params:         6       0       0       0
   881 ;;      Locals:         8       0       0       0
   882 ;;      Temps:          2       0       0       0
   883 ;;      Totals:        16       0       0       0
   884 ;;Total ram usage:       16 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; Hardware stack levels required when called: 5
   887 ;; This function calls:
   888 ;;		_dtoa
   889 ;;		_fputc
   890 ;; This function is called by:
   891 ;;		_vfprintf
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text3
   896  000B72                     __ptext3:
   897                           	callstack 0
   898  000B72                     _vfpfcnvrt:
   899                           	callstack 23
   900  000B72                     
   901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   902  000B72  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   903  000B76  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   904  000B7A  CFDE FFF6          	movff	postinc2,tblptrl
   905  000B7E  CFDD FFF7          	movff	postdec2,tblptrh
   906  000B82                     	if	0	;tblptru may be non-zero
   907  000B82                     	endif
   908  000B82                     	if	0	;tblptru may be non-zero
   909  000B82                     	endif
   910  000B82  0008               	tblrd		*
   911  000B84  50F5               	movf	tablat,w,c
   912  000B86  0A25               	xorlw	37
   913  000B88  A4D8               	btfss	status,2,c
   914  000B8A  EFC9  F005         	goto	u1181
   915  000B8E  EFCB  F005         	goto	u1180
   916  000B92                     u1181:
   917  000B92  EF77  F006         	goto	l1776
   918  000B96                     u1180:
   919  000B96                     
   920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
   921  000B96  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   922  000B9A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   923  000B9E  2ADE               	incf	postinc2,f,c
   924  000BA0  0E00               	movlw	0
   925  000BA2  22DD               	addwfc	postdec2,f,c
   926  000BA4                     
   927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
   928  000BA4  0E00               	movlw	0
   929  000BA6  0100               	movlb	0	; () banked
   930  000BA8  6F63               	movwf	(_width+1)& (0+255),b
   931  000BAA  0E00               	movlw	0
   932  000BAC  6F62               	movwf	_width& (0+255),b
   933  000BAE  C062  F066         	movff	_width,_flags
   934  000BB2  C063  F067         	movff	_width+1,_flags+1
   935  000BB6                     
   936                           ; BSR set to: 0
   937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
   938  000BB6  6964               	setf	_prec& (0+255),b
   939  000BB8  6965               	setf	(_prec+1)& (0+255),b
   940  000BBA                     
   941                           ; BSR set to: 0
   942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
   943  000BBA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   944  000BBE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   945  000BC2  CFDE FFF6          	movff	postinc2,tblptrl
   946  000BC6  CFDD FFF7          	movff	postdec2,tblptrh
   947  000BCA                     	if	0	;tblptru may be non-zero
   948  000BCA                     	endif
   949  000BCA                     	if	0	;tblptru may be non-zero
   950  000BCA                     	endif
   951  000BCA  0008               	tblrd		*
   952  000BCC  50F5               	movf	tablat,w,c
   953  000BCE  0A64               	xorlw	100
   954  000BD0  B4D8               	btfsc	status,2,c
   955  000BD2  EFED  F005         	goto	u1191
   956  000BD6  EFEF  F005         	goto	u1190
   957  000BDA                     u1191:
   958  000BDA  EF01  F006         	goto	l1754
   959  000BDE                     u1190:
   960  000BDE                     
   961                           ; BSR set to: 0
   962  000BDE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   963  000BE2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   964  000BE6  CFDE FFF6          	movff	postinc2,tblptrl
   965  000BEA  CFDD FFF7          	movff	postdec2,tblptrh
   966  000BEE                     	if	0	;tblptru may be non-zero
   967  000BEE                     	endif
   968  000BEE                     	if	0	;tblptru may be non-zero
   969  000BEE                     	endif
   970  000BEE  0008               	tblrd		*
   971  000BF0  50F5               	movf	tablat,w,c
   972  000BF2  0A69               	xorlw	105
   973  000BF4  A4D8               	btfss	status,2,c
   974  000BF6  EFFF  F005         	goto	u1201
   975  000BFA  EF01  F006         	goto	u1200
   976  000BFE                     u1201:
   977  000BFE  EF41  F006         	goto	l1760
   978  000C02                     u1200:
   979  000C02                     l1754:
   980                           
   981                           ; BSR set to: 0
   982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
   983  000C02  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   984  000C06  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   985  000C0A  2ADE               	incf	postinc2,f,c
   986  000C0C  0E00               	movlw	0
   987  000C0E  22DD               	addwfc	postdec2,f,c
   988                           
   989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
   990  000C10  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   991  000C14  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   992  000C18  CFDF F046          	movff	indf2,??_vfpfcnvrt
   993  000C1C  0E02               	movlw	2
   994  000C1E  26DE               	addwf	postinc2,f,c
   995  000C20  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
   996  000C24  0E00               	movlw	0
   997  000C26  22DD               	addwfc	postdec2,f,c
   998  000C28  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
   999  000C2C  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1000  000C30  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1001  000C34  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1002  000C38  0E00               	movlw	0
  1003  000C3A  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1004  000C3C  0EFF               	movlw	-1
  1005  000C3E  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1006  000C40  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1007  000C42  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1008  000C44  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1009  000C46  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1010  000C48  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1011  000C4A                     
  1012                           ; BSR set to: 0
  1013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1014  000C4A  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1015  000C4E  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1016  000C52  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1017  000C56  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1018  000C5A  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1019  000C5E  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1020  000C62  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1021  000C66  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1022  000C6A  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1023  000C6E  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1024  000C72  EC48  F004         	call	_dtoa	;wreg free
  1025  000C76  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1026  000C7A  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1027  000C7E  EF92  F006         	goto	l929
  1028  000C82                     l1760:
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1032  000C82  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1033  000C86  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1034  000C8A  CFDE FFF6          	movff	postinc2,tblptrl
  1035  000C8E  CFDD FFF7          	movff	postdec2,tblptrh
  1036  000C92                     	if	0	;tblptru may be non-zero
  1037  000C92                     	endif
  1038  000C92                     	if	0	;tblptru may be non-zero
  1039  000C92                     	endif
  1040  000C92  0008               	tblrd		*
  1041  000C94  50F5               	movf	tablat,w,c
  1042  000C96  0A25               	xorlw	37
  1043  000C98  A4D8               	btfss	status,2,c
  1044  000C9A  EF51  F006         	goto	u1211
  1045  000C9E  EF53  F006         	goto	u1210
  1046  000CA2                     u1211:
  1047  000CA2  EF6A  F006         	goto	l1770
  1048  000CA6                     u1210:
  1049  000CA6                     
  1050                           ; BSR set to: 0
  1051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1052  000CA6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1053  000CAA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1054  000CAE  2ADE               	incf	postinc2,f,c
  1055  000CB0  0E00               	movlw	0
  1056  000CB2  22DD               	addwfc	postdec2,f,c
  1057  000CB4                     
  1058                           ; BSR set to: 0
  1059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1060  000CB4  0E00               	movlw	0
  1061  000CB6  6E02               	movwf	(fputc@c+1)^0,c
  1062  000CB8  0E25               	movlw	37
  1063  000CBA  6E01               	movwf	fputc@c^0,c
  1064  000CBC  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1065  000CC0  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1066  000CC4  ECD5  F008         	call	_fputc	;wreg free
  1067  000CC8                     l1766:
  1068                           
  1069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1070  000CC8  0E00               	movlw	0
  1071  000CCA  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1072  000CCC  0E01               	movlw	1
  1073  000CCE  6E40               	movwf	?_vfpfcnvrt^0,c
  1074  000CD0  EF92  F006         	goto	l929
  1075  000CD4                     l1770:
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1079  000CD4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1080  000CD8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1081  000CDC  2ADE               	incf	postinc2,f,c
  1082  000CDE  0E00               	movlw	0
  1083  000CE0  22DD               	addwfc	postdec2,f,c
  1084  000CE2                     
  1085                           ; BSR set to: 0
  1086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1087  000CE2  0E00               	movlw	0
  1088  000CE4  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1089  000CE6  0E00               	movlw	0
  1090  000CE8  6E40               	movwf	?_vfpfcnvrt^0,c
  1091  000CEA  EF92  F006         	goto	l929
  1092  000CEE                     l1776:
  1093                           
  1094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1095  000CEE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1096  000CF2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1097  000CF6  CFDE FFF6          	movff	postinc2,tblptrl
  1098  000CFA  CFDD FFF7          	movff	postdec2,tblptrh
  1099  000CFE                     	if	0	;tblptru may be non-zero
  1100  000CFE                     	endif
  1101  000CFE                     	if	0	;tblptru may be non-zero
  1102  000CFE                     	endif
  1103  000CFE  0008               	tblrd		*
  1104  000D00  50F5               	movf	tablat,w,c
  1105  000D02  6E01               	movwf	fputc@c^0,c
  1106  000D04  6A02               	clrf	(fputc@c+1)^0,c
  1107  000D06  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1108  000D0A  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1109  000D0E  ECD5  F008         	call	_fputc	;wreg free
  1110  000D12                     
  1111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1112  000D12  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1113  000D16  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1114  000D1A  2ADE               	incf	postinc2,f,c
  1115  000D1C  0E00               	movlw	0
  1116  000D1E  22DD               	addwfc	postdec2,f,c
  1117  000D20  EF64  F006         	goto	l1766
  1118  000D24                     l929:
  1119  000D24  0012               	return		;funcret
  1120  000D26                     __end_of_vfpfcnvrt:
  1121                           	callstack 0
  1122                           
  1123 ;; *************** function _dtoa *****************
  1124 ;; Defined at:
  1125 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1128 ;;		 -> NULL(0), 
  1129 ;;  d               8   29[COMRAM] long long 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  n               8   53[COMRAM] long long 
  1132 ;;  i               2   61[COMRAM] int 
  1133 ;;  s               2   51[COMRAM] int 
  1134 ;;  w               2   49[COMRAM] int 
  1135 ;;  p               2   47[COMRAM] int 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  2   27[COMRAM] int 
  1138 ;; Registers used:
  1139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1145 ;;      Params:        10       0       0       0
  1146 ;;      Locals:        18       0       0       0
  1147 ;;      Temps:          8       0       0       0
  1148 ;;      Totals:        36       0       0       0
  1149 ;;Total ram usage:       36 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 4
  1152 ;; This function calls:
  1153 ;;		___aodiv
  1154 ;;		___aomod
  1155 ;;		_abs
  1156 ;;		_pad
  1157 ;; This function is called by:
  1158 ;;		_vfpfcnvrt
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text4
  1163  000890                     __ptext4:
  1164                           	callstack 0
  1165  000890                     _dtoa:
  1166                           	callstack 23
  1167  000890                     
  1168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1169  000890  C01E  F036         	movff	dtoa@d,dtoa@n
  1170  000894  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1171  000898  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1172  00089C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1173  0008A0  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1174  0008A4  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1175  0008A8  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1176  0008AC  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1177  0008B0                     
  1178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1179  0008B0  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1180  0008B2  EF5D  F004         	goto	u1031
  1181  0008B6  EF60  F004         	goto	u1030
  1182  0008BA                     u1031:
  1183  0008BA  0E01               	movlw	1
  1184  0008BC  EF61  F004         	goto	u1040
  1185  0008C0                     u1030:
  1186  0008C0  0E00               	movlw	0
  1187  0008C2                     u1040:
  1188  0008C2  6E34               	movwf	dtoa@s^0,c
  1189  0008C4  6A35               	clrf	(dtoa@s+1)^0,c
  1190                           
  1191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1192  0008C6  5034               	movf	dtoa@s^0,w,c
  1193  0008C8  1035               	iorwf	(dtoa@s+1)^0,w,c
  1194  0008CA  B4D8               	btfsc	status,2,c
  1195  0008CC  EF6A  F004         	goto	u1051
  1196  0008D0  EF6C  F004         	goto	u1050
  1197  0008D4                     u1051:
  1198  0008D4  EF7C  F004         	goto	l1686
  1199  0008D8                     u1050:
  1200  0008D8                     
  1201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1202  0008D8  1E3D               	comf	(dtoa@n+7)^0,f,c
  1203  0008DA  1E3C               	comf	(dtoa@n+6)^0,f,c
  1204  0008DC  1E3B               	comf	(dtoa@n+5)^0,f,c
  1205  0008DE  1E3A               	comf	(dtoa@n+4)^0,f,c
  1206  0008E0  1E39               	comf	(dtoa@n+3)^0,f,c
  1207  0008E2  1E38               	comf	(dtoa@n+2)^0,f,c
  1208  0008E4  1E37               	comf	(dtoa@n+1)^0,f,c
  1209  0008E6  6C36               	negf	dtoa@n^0,c
  1210  0008E8  0E00               	movlw	0
  1211  0008EA  2237               	addwfc	(dtoa@n+1)^0,f,c
  1212  0008EC  2238               	addwfc	(dtoa@n+2)^0,f,c
  1213  0008EE  2239               	addwfc	(dtoa@n+3)^0,f,c
  1214  0008F0  223A               	addwfc	(dtoa@n+4)^0,f,c
  1215  0008F2  223B               	addwfc	(dtoa@n+5)^0,f,c
  1216  0008F4  223C               	addwfc	(dtoa@n+6)^0,f,c
  1217  0008F6  223D               	addwfc	(dtoa@n+7)^0,f,c
  1218  0008F8                     l1686:
  1219                           
  1220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1221  0008F8  0100               	movlb	0	; () banked
  1222  0008FA  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1223  0008FC  EF82  F004         	goto	u1061
  1224  000900  EF84  F004         	goto	u1060
  1225  000904                     u1061:
  1226  000904  EF85  F004         	goto	l1690
  1227  000908                     u1060:
  1228  000908                     
  1229                           ; BSR set to: 0
  1230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1231  000908  9366               	bcf	_flags& (0+255),1,b
  1232  00090A                     l1690:
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1236  00090A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1237  00090C  EF92  F004         	goto	u1070
  1238  000910  5165               	movf	(_prec+1)& (0+255),w,b
  1239  000912  E106               	bnz	u1071
  1240  000914  0564               	decf	_prec& (0+255),w,b
  1241  000916  B0D8               	btfsc	status,0,c
  1242  000918  EF90  F004         	goto	u1071
  1243  00091C  EF92  F004         	goto	u1070
  1244  000920                     u1071:
  1245  000920  EF98  F004         	goto	l902
  1246  000924                     u1070:
  1247  000924                     
  1248                           ; BSR set to: 0
  1249  000924  0E00               	movlw	0
  1250  000926  6E31               	movwf	(dtoa@p+1)^0,c
  1251  000928  0E01               	movlw	1
  1252  00092A  6E30               	movwf	dtoa@p^0,c
  1253  00092C  EF9C  F004         	goto	l904
  1254  000930                     l902:
  1255                           
  1256                           ; BSR set to: 0
  1257  000930  C064  F030         	movff	_prec,dtoa@p
  1258  000934  C065  F031         	movff	_prec+1,dtoa@p+1
  1259  000938                     l904:
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1263  000938  C062  F032         	movff	_width,dtoa@w
  1264  00093C  C063  F033         	movff	_width+1,dtoa@w+1
  1265  000940                     
  1266                           ; BSR set to: 0
  1267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1268  000940  5034               	movf	dtoa@s^0,w,c
  1269  000942  1035               	iorwf	(dtoa@s+1)^0,w,c
  1270  000944  A4D8               	btfss	status,2,c
  1271  000946  EFA7  F004         	goto	u1081
  1272  00094A  EFA9  F004         	goto	u1080
  1273  00094E                     u1081:
  1274  00094E  EFB0  F004         	goto	l1698
  1275  000952                     u1080:
  1276  000952                     
  1277                           ; BSR set to: 0
  1278  000952  A566               	btfss	_flags& (0+255),2,b
  1279  000954  EFAE  F004         	goto	u1091
  1280  000958  EFB0  F004         	goto	u1090
  1281  00095C                     u1091:
  1282  00095C  EFB3  F004         	goto	l1700
  1283  000960                     u1090:
  1284  000960                     l1698:
  1285                           
  1286                           ; BSR set to: 0
  1287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1288  000960  0632               	decf	dtoa@w^0,f,c
  1289  000962  A0D8               	btfss	status,0,c
  1290  000964  0633               	decf	(dtoa@w+1)^0,f,c
  1291  000966                     l1700:
  1292                           
  1293                           ; BSR set to: 0
  1294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1295  000966  0E00               	movlw	0
  1296  000968  6E3F               	movwf	(dtoa@i+1)^0,c
  1297  00096A  0E1F               	movlw	31
  1298  00096C  6E3E               	movwf	dtoa@i^0,c
  1299  00096E                     
  1300                           ; BSR set to: 0
  1301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1302  00096E  0E00               	movlw	0
  1303  000970  6F87               	movwf	(_dbuf+31)& (0+255),b
  1304                           
  1305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1306  000972  EF37  F005         	goto	l1714
  1307  000976                     l1704:
  1308                           
  1309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1310  000976  063E               	decf	dtoa@i^0,f,c
  1311  000978  A0D8               	btfss	status,0,c
  1312  00097A  063F               	decf	(dtoa@i+1)^0,f,c
  1313  00097C                     
  1314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1315  00097C  0E68               	movlw	low _dbuf
  1316  00097E  243E               	addwf	dtoa@i^0,w,c
  1317  000980  6ED9               	movwf	fsr2l,c
  1318  000982  0E00               	movlw	high _dbuf
  1319  000984  203F               	addwfc	(dtoa@i+1)^0,w,c
  1320  000986  6EDA               	movwf	fsr2h,c
  1321  000988  C036  F001         	movff	dtoa@n,___aomod@dividend
  1322  00098C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1323  000990  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1324  000994  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1325  000998  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1326  00099C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1327  0009A0  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1328  0009A4  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1329  0009A8  0E0A               	movlw	10
  1330  0009AA  6E09               	movwf	___aomod@divisor^0,c
  1331  0009AC  0E00               	movlw	0
  1332  0009AE  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1333  0009B0  0E00               	movlw	0
  1334  0009B2  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1335  0009B4  0E00               	movlw	0
  1336  0009B6  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1337  0009B8  0E00               	movlw	0
  1338  0009BA  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1339  0009BC  0E00               	movlw	0
  1340  0009BE  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1341  0009C0  0E00               	movlw	0
  1342  0009C2  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1343  0009C4  0E00               	movlw	0
  1344  0009C6  6E10               	movwf	(___aomod@divisor+7)^0,c
  1345  0009C8  EC57  F007         	call	___aomod	;wreg free
  1346  0009CC  C001  F026         	movff	?___aomod,??_dtoa
  1347  0009D0  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1348  0009D4  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1349  0009D8  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1350  0009DC  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1351  0009E0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1352  0009E4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1353  0009E8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1354  0009EC  C026  F013         	movff	??_dtoa,abs@a
  1355  0009F0  C028  F014         	movff	??_dtoa+2,abs@a+1
  1356  0009F4  EC77  F00A         	call	_abs	;wreg free
  1357  0009F8  5013               	movf	?_abs^0,w,c
  1358  0009FA  0F30               	addlw	48
  1359  0009FC  6EDF               	movwf	indf2,c
  1360  0009FE                     
  1361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  1362  0009FE  0630               	decf	dtoa@p^0,f,c
  1363  000A00  A0D8               	btfss	status,0,c
  1364  000A02  0631               	decf	(dtoa@p+1)^0,f,c
  1365  000A04                     
  1366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  1367  000A04  0632               	decf	dtoa@w^0,f,c
  1368  000A06  A0D8               	btfss	status,0,c
  1369  000A08  0633               	decf	(dtoa@w+1)^0,f,c
  1370  000A0A                     
  1371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1372  000A0A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1373  000A0E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1374  000A12  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1375  000A16  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1376  000A1A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1377  000A1E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1378  000A22  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1379  000A26  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1380  000A2A  0E0A               	movlw	10
  1381  000A2C  6E09               	movwf	___aodiv@divisor^0,c
  1382  000A2E  0E00               	movlw	0
  1383  000A30  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1384  000A32  0E00               	movlw	0
  1385  000A34  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1386  000A36  0E00               	movlw	0
  1387  000A38  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1388  000A3A  0E00               	movlw	0
  1389  000A3C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1390  000A3E  0E00               	movlw	0
  1391  000A40  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1392  000A42  0E00               	movlw	0
  1393  000A44  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1394  000A46  0E00               	movlw	0
  1395  000A48  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1396  000A4A  EC93  F006         	call	___aodiv	;wreg free
  1397  000A4E  C001  F036         	movff	?___aodiv,dtoa@n
  1398  000A52  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1399  000A56  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1400  000A5A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1401  000A5E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1402  000A62  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1403  000A66  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1404  000A6A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1405  000A6E                     l1714:
  1406                           
  1407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1408  000A6E  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1409  000A70  EF42  F005         	goto	u1101
  1410  000A74  503F               	movf	(dtoa@i+1)^0,w,c
  1411  000A76  E108               	bnz	u1100
  1412  000A78  043E               	decf	dtoa@i^0,w,c
  1413  000A7A  A0D8               	btfss	status,0,c
  1414  000A7C  EF42  F005         	goto	u1101
  1415  000A80  EF44  F005         	goto	u1100
  1416  000A84                     u1101:
  1417  000A84  EF75  F005         	goto	l1724
  1418  000A88                     u1100:
  1419  000A88  5036               	movf	dtoa@n^0,w,c
  1420  000A8A  1037               	iorwf	(dtoa@n+1)^0,w,c
  1421  000A8C  1038               	iorwf	(dtoa@n+2)^0,w,c
  1422  000A8E  1039               	iorwf	(dtoa@n+3)^0,w,c
  1423  000A90  103A               	iorwf	(dtoa@n+4)^0,w,c
  1424  000A92  103B               	iorwf	(dtoa@n+5)^0,w,c
  1425  000A94  103C               	iorwf	(dtoa@n+6)^0,w,c
  1426  000A96  103D               	iorwf	(dtoa@n+7)^0,w,c
  1427  000A98  A4D8               	btfss	status,2,c
  1428  000A9A  EF51  F005         	goto	u1111
  1429  000A9E  EF53  F005         	goto	u1110
  1430  000AA2                     u1111:
  1431  000AA2  EFBB  F004         	goto	l1704
  1432  000AA6                     u1110:
  1433  000AA6  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1434  000AA8  EF60  F005         	goto	u1120
  1435  000AAC  5031               	movf	(dtoa@p+1)^0,w,c
  1436  000AAE  E106               	bnz	u1121
  1437  000AB0  0430               	decf	dtoa@p^0,w,c
  1438  000AB2  B0D8               	btfsc	status,0,c
  1439  000AB4  EF5E  F005         	goto	u1121
  1440  000AB8  EF60  F005         	goto	u1120
  1441  000ABC                     u1121:
  1442  000ABC  EFBB  F004         	goto	l1704
  1443  000AC0                     u1120:
  1444  000AC0  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1445  000AC2  EF6B  F005         	goto	u1131
  1446  000AC6  5033               	movf	(dtoa@w+1)^0,w,c
  1447  000AC8  E108               	bnz	u1130
  1448  000ACA  0432               	decf	dtoa@w^0,w,c
  1449  000ACC  A0D8               	btfss	status,0,c
  1450  000ACE  EF6B  F005         	goto	u1131
  1451  000AD2  EF6D  F005         	goto	u1130
  1452  000AD6                     u1131:
  1453  000AD6  EF75  F005         	goto	l1724
  1454  000ADA                     u1130:
  1455  000ADA  0100               	movlb	0	; () banked
  1456  000ADC  B366               	btfsc	_flags& (0+255),1,b
  1457  000ADE  EF73  F005         	goto	u1141
  1458  000AE2  EF75  F005         	goto	u1140
  1459  000AE6                     u1141:
  1460  000AE6  EFBB  F004         	goto	l1704
  1461  000AEA                     u1140:
  1462  000AEA                     l1724:
  1463                           
  1464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1465  000AEA  5034               	movf	dtoa@s^0,w,c
  1466  000AEC  1035               	iorwf	(dtoa@s+1)^0,w,c
  1467  000AEE  A4D8               	btfss	status,2,c
  1468  000AF0  EF7C  F005         	goto	u1151
  1469  000AF4  EF7E  F005         	goto	u1150
  1470  000AF8                     u1151:
  1471  000AF8  EF86  F005         	goto	l1728
  1472  000AFC                     u1150:
  1473  000AFC  0100               	movlb	0	; () banked
  1474  000AFE  A566               	btfss	_flags& (0+255),2,b
  1475  000B00  EF84  F005         	goto	u1161
  1476  000B04  EF86  F005         	goto	u1160
  1477  000B08                     u1161:
  1478  000B08  EFA4  F005         	goto	l1738
  1479  000B0C                     u1160:
  1480  000B0C                     l1728:
  1481                           
  1482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  1483  000B0C  063E               	decf	dtoa@i^0,f,c
  1484  000B0E  A0D8               	btfss	status,0,c
  1485  000B10  063F               	decf	(dtoa@i+1)^0,f,c
  1486  000B12                     
  1487                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1488  000B12  5034               	movf	dtoa@s^0,w,c
  1489  000B14  1035               	iorwf	(dtoa@s+1)^0,w,c
  1490  000B16  A4D8               	btfss	status,2,c
  1491  000B18  EF90  F005         	goto	u1171
  1492  000B1C  EF92  F005         	goto	u1170
  1493  000B20                     u1171:
  1494  000B20  EF98  F005         	goto	l1734
  1495  000B24                     u1170:
  1496  000B24  0E00               	movlw	0
  1497  000B26  6E2F               	movwf	(_dtoa$680+1)^0,c
  1498  000B28  0E2B               	movlw	43
  1499  000B2A  6E2E               	movwf	_dtoa$680^0,c
  1500  000B2C  EF9C  F005         	goto	l1736
  1501  000B30                     l1734:
  1502  000B30  0E00               	movlw	0
  1503  000B32  6E2F               	movwf	(_dtoa$680+1)^0,c
  1504  000B34  0E2D               	movlw	45
  1505  000B36  6E2E               	movwf	_dtoa$680^0,c
  1506  000B38                     l1736:
  1507  000B38  0E68               	movlw	low _dbuf
  1508  000B3A  243E               	addwf	dtoa@i^0,w,c
  1509  000B3C  6ED9               	movwf	fsr2l,c
  1510  000B3E  0E00               	movlw	high _dbuf
  1511  000B40  203F               	addwfc	(dtoa@i+1)^0,w,c
  1512  000B42  6EDA               	movwf	fsr2h,c
  1513  000B44  C02E  FFDF         	movff	_dtoa$680,indf2
  1514  000B48                     l1738:
  1515                           
  1516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1517  000B48  C01C  F011         	movff	dtoa@fp,pad@fp
  1518  000B4C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1519  000B50  0E68               	movlw	low _dbuf
  1520  000B52  243E               	addwf	dtoa@i^0,w,c
  1521  000B54  6E13               	movwf	pad@buf^0,c
  1522  000B56  0E00               	movlw	high _dbuf
  1523  000B58  203F               	addwfc	(dtoa@i+1)^0,w,c
  1524  000B5A  6E14               	movwf	(pad@buf+1)^0,c
  1525  000B5C  C032  F015         	movff	dtoa@w,pad@p
  1526  000B60  C033  F016         	movff	dtoa@w+1,pad@p+1
  1527  000B64  EC72  F008         	call	_pad	;wreg free
  1528  000B68  C011  F01C         	movff	?_pad,?_dtoa
  1529  000B6C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1530  000B70  0012               	return		;funcret
  1531  000B72                     __end_of_dtoa:
  1532                           	callstack 0
  1533                           
  1534 ;; *************** function _pad *****************
  1535 ;; Defined at:
  1536 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1539 ;;		 -> NULL(0), 
  1540 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1541 ;;		 -> dbuf(32), 
  1542 ;;  p               2   20[COMRAM] int 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  w               2   25[COMRAM] int 
  1545 ;;  i               2   23[COMRAM] int 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  2   16[COMRAM] int 
  1548 ;; Registers used:
  1549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1555 ;;      Params:         6       0       0       0
  1556 ;;      Locals:         4       0       0       0
  1557 ;;      Temps:          1       0       0       0
  1558 ;;      Totals:        11       0       0       0
  1559 ;;Total ram usage:       11 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 3
  1562 ;; This function calls:
  1563 ;;		_fputc
  1564 ;;		_fputs
  1565 ;;		_strlen
  1566 ;; This function is called by:
  1567 ;;		_dtoa
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text5
  1572  0010E4                     __ptext5:
  1573                           	callstack 0
  1574  0010E4                     _pad:
  1575                           	callstack 23
  1576  0010E4                     
  1577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1578  0010E4  0100               	movlb	0	; () banked
  1579  0010E6  A166               	btfss	_flags& (0+255),0,b
  1580  0010E8  EF78  F008         	goto	u981
  1581  0010EC  EF7A  F008         	goto	u980
  1582  0010F0                     u981:
  1583  0010F0  EF84  F008         	goto	l1658
  1584  0010F4                     u980:
  1585  0010F4                     
  1586                           ; BSR set to: 0
  1587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1588  0010F4  C013  F00A         	movff	pad@buf,fputs@s
  1589  0010F8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1590  0010FC  C011  F00C         	movff	pad@fp,fputs@fp
  1591  001100  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1592  001104  EC55  F00A         	call	_fputs	;wreg free
  1593  001108                     l1658:
  1594                           
  1595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1596  001108  BE16               	btfsc	(pad@p+1)^0,7,c
  1597  00110A  EF89  F008         	goto	u991
  1598  00110E  EF8B  F008         	goto	u990
  1599  001112                     u991:
  1600  001112  EF91  F008         	goto	l1662
  1601  001116                     u990:
  1602  001116  C015  F01A         	movff	pad@p,pad@w
  1603  00111A  C016  F01B         	movff	pad@p+1,pad@w+1
  1604  00111E  EF95  F008         	goto	l891
  1605  001122                     l1662:
  1606  001122  0E00               	movlw	0
  1607  001124  6E1B               	movwf	(pad@w+1)^0,c
  1608  001126  0E00               	movlw	0
  1609  001128  6E1A               	movwf	pad@w^0,c
  1610  00112A                     l891:
  1611                           
  1612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1613  00112A  0E00               	movlw	0
  1614  00112C  6E19               	movwf	(pad@i+1)^0,c
  1615  00112E  0E00               	movlw	0
  1616  001130  6E18               	movwf	pad@i^0,c
  1617                           
  1618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1619  001132  EFA7  F008         	goto	l1668
  1620  001136                     l1664:
  1621                           
  1622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1623  001136  0E00               	movlw	0
  1624  001138  6E02               	movwf	(fputc@c+1)^0,c
  1625  00113A  0E20               	movlw	32
  1626  00113C  6E01               	movwf	fputc@c^0,c
  1627  00113E  C011  F003         	movff	pad@fp,fputc@fp
  1628  001142  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1629  001146  ECD5  F008         	call	_fputc	;wreg free
  1630  00114A                     
  1631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1632  00114A  4A18               	infsnz	pad@i^0,f,c
  1633  00114C  2A19               	incf	(pad@i+1)^0,f,c
  1634  00114E                     l1668:
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1637  00114E  501A               	movf	pad@w^0,w,c
  1638  001150  5C18               	subwf	pad@i^0,w,c
  1639  001152  5019               	movf	(pad@i+1)^0,w,c
  1640  001154  0A80               	xorlw	128
  1641  001156  6E17               	movwf	??_pad^0,c
  1642  001158  501B               	movf	(pad@w+1)^0,w,c
  1643  00115A  0A80               	xorlw	128
  1644  00115C  5817               	subwfb	??_pad^0,w,c
  1645  00115E  A0D8               	btfss	status,0,c
  1646  001160  EFB4  F008         	goto	u1001
  1647  001164  EFB6  F008         	goto	u1000
  1648  001168                     u1001:
  1649  001168  EF9B  F008         	goto	l1664
  1650  00116C                     u1000:
  1651  00116C                     
  1652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1653  00116C  0100               	movlb	0	; () banked
  1654  00116E  B166               	btfsc	_flags& (0+255),0,b
  1655  001170  EFBC  F008         	goto	u1011
  1656  001174  EFBE  F008         	goto	u1010
  1657  001178                     u1011:
  1658  001178  EFC8  F008         	goto	l1672
  1659  00117C                     u1010:
  1660  00117C                     
  1661                           ; BSR set to: 0
  1662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1663  00117C  C013  F00A         	movff	pad@buf,fputs@s
  1664  001180  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1665  001184  C011  F00C         	movff	pad@fp,fputs@fp
  1666  001188  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1667  00118C  EC55  F00A         	call	_fputs	;wreg free
  1668  001190                     l1672:
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1671  001190  C013  F001         	movff	pad@buf,strlen@s
  1672  001194  C014  F002         	movff	pad@buf+1,strlen@s+1
  1673  001198  ECB2  F00A         	call	_strlen	;wreg free
  1674  00119C  501A               	movf	pad@w^0,w,c
  1675  00119E  2401               	addwf	?_strlen^0,w,c
  1676  0011A0  6E11               	movwf	?_pad^0,c
  1677  0011A2  501B               	movf	(pad@w+1)^0,w,c
  1678  0011A4  2002               	addwfc	(?_strlen+1)^0,w,c
  1679  0011A6  6E12               	movwf	(?_pad+1)^0,c
  1680  0011A8  0012               	return		;funcret
  1681  0011AA                     __end_of_pad:
  1682                           	callstack 0
  1683                           
  1684 ;; *************** function _strlen *****************
  1685 ;; Defined at:
  1686 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1689 ;;		 -> dbuf(32), 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1692 ;;		 -> dbuf(32), 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  2    0[COMRAM] unsigned int 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1702 ;;      Params:         2       0       0       0
  1703 ;;      Locals:         2       0       0       0
  1704 ;;      Temps:          0       0       0       0
  1705 ;;      Totals:         4       0       0       0
  1706 ;;Total ram usage:        4 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_pad
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text6
  1716  001564                     __ptext6:
  1717                           	callstack 0
  1718  001564                     _strlen:
  1719                           	callstack 25
  1720  001564  C001  F003         	movff	strlen@s,strlen@a
  1721  001568  C002  F004         	movff	strlen@s+1,strlen@a+1
  1722  00156C  EFBA  F00A         	goto	l1568
  1723  001570                     l1566:
  1724  001570  4A01               	infsnz	strlen@s^0,f,c
  1725  001572  2A02               	incf	(strlen@s+1)^0,f,c
  1726  001574                     l1568:
  1727  001574  C001  FFD9         	movff	strlen@s,fsr2l
  1728  001578  C002  FFDA         	movff	strlen@s+1,fsr2h
  1729  00157C  50DF               	movf	indf2,w,c
  1730  00157E  A4D8               	btfss	status,2,c
  1731  001580  EFC4  F00A         	goto	u841
  1732  001584  EFC6  F00A         	goto	u840
  1733  001588                     u841:
  1734  001588  EFB8  F00A         	goto	l1566
  1735  00158C                     u840:
  1736  00158C  5003               	movf	strlen@a^0,w,c
  1737  00158E  5C01               	subwf	strlen@s^0,w,c
  1738  001590  6E01               	movwf	?_strlen^0,c
  1739  001592  5004               	movf	(strlen@a+1)^0,w,c
  1740  001594  5802               	subwfb	(strlen@s+1)^0,w,c
  1741  001596  6E02               	movwf	(?_strlen+1)^0,c
  1742  001598  0012               	return		;funcret
  1743  00159A                     __end_of_strlen:
  1744                           	callstack 0
  1745                           
  1746 ;; *************** function _fputs *****************
  1747 ;; Defined at:
  1748 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1751 ;;		 -> dbuf(32), 
  1752 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1753 ;;		 -> NULL(0), 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  i               2   14[COMRAM] int 
  1756 ;;  c               1   13[COMRAM] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  2    9[COMRAM] int 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1766 ;;      Params:         4       0       0       0
  1767 ;;      Locals:         3       0       0       0
  1768 ;;      Temps:          0       0       0       0
  1769 ;;      Totals:         7       0       0       0
  1770 ;;Total ram usage:        7 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 2
  1773 ;; This function calls:
  1774 ;;		_fputc
  1775 ;; This function is called by:
  1776 ;;		_pad
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text7
  1781  0014AA                     __ptext7:
  1782                           	callstack 0
  1783  0014AA                     _fputs:
  1784                           	callstack 23
  1785  0014AA  0E00               	movlw	0
  1786  0014AC  6E10               	movwf	(fputs@i+1)^0,c
  1787  0014AE  0E00               	movlw	0
  1788  0014B0  6E0F               	movwf	fputs@i^0,c
  1789  0014B2  EF66  F00A         	goto	l1562
  1790  0014B6                     l1558:
  1791  0014B6  C00E  F001         	movff	fputs@c,fputc@c
  1792  0014BA  6A02               	clrf	(fputc@c+1)^0,c
  1793  0014BC  C00C  F003         	movff	fputs@fp,fputc@fp
  1794  0014C0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1795  0014C4  ECD5  F008         	call	_fputc	;wreg free
  1796  0014C8  4A0F               	infsnz	fputs@i^0,f,c
  1797  0014CA  2A10               	incf	(fputs@i+1)^0,f,c
  1798  0014CC                     l1562:
  1799  0014CC  500F               	movf	fputs@i^0,w,c
  1800  0014CE  240A               	addwf	fputs@s^0,w,c
  1801  0014D0  6ED9               	movwf	fsr2l,c
  1802  0014D2  5010               	movf	(fputs@i+1)^0,w,c
  1803  0014D4  200B               	addwfc	(fputs@s+1)^0,w,c
  1804  0014D6  6EDA               	movwf	fsr2h,c
  1805  0014D8  50DF               	movf	indf2,w,c
  1806  0014DA  6E0E               	movwf	fputs@c^0,c
  1807  0014DC  500E               	movf	fputs@c^0,w,c
  1808  0014DE  A4D8               	btfss	status,2,c
  1809  0014E0  EF74  F00A         	goto	u831
  1810  0014E4  EF76  F00A         	goto	u830
  1811  0014E8                     u831:
  1812  0014E8  EF5B  F00A         	goto	l1558
  1813  0014EC                     u830:
  1814  0014EC  0012               	return		;funcret
  1815  0014EE                     __end_of_fputs:
  1816                           	callstack 0
  1817                           
  1818 ;; *************** function _fputc *****************
  1819 ;; Defined at:
  1820 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  c               2    0[COMRAM] int 
  1823 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1824 ;;		 -> NULL(0), 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  2    0[COMRAM] int 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1836 ;;      Params:         4       0       0       0
  1837 ;;      Locals:         0       0       0       0
  1838 ;;      Temps:          5       0       0       0
  1839 ;;      Totals:         9       0       0       0
  1840 ;;Total ram usage:        9 bytes
  1841 ;; Hardware stack levels used: 1
  1842 ;; Hardware stack levels required when called: 1
  1843 ;; This function calls:
  1844 ;;		_putch
  1845 ;; This function is called by:
  1846 ;;		_pad
  1847 ;;		_vfpfcnvrt
  1848 ;;		_fputs
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           	psect	text8
  1853  0011AA                     __ptext8:
  1854                           	callstack 0
  1855  0011AA                     _fputc:
  1856                           	callstack 26
  1857  0011AA  5003               	movf	fputc@fp^0,w,c
  1858  0011AC  1004               	iorwf	(fputc@fp+1)^0,w,c
  1859  0011AE  B4D8               	btfsc	status,2,c
  1860  0011B0  EFDC  F008         	goto	u791
  1861  0011B4  EFDE  F008         	goto	u790
  1862  0011B8                     u791:
  1863  0011B8  EFE7  F008         	goto	l1546
  1864  0011BC                     u790:
  1865  0011BC  5003               	movf	fputc@fp^0,w,c
  1866  0011BE  1004               	iorwf	(fputc@fp+1)^0,w,c
  1867  0011C0  A4D8               	btfss	status,2,c
  1868  0011C2  EFE5  F008         	goto	u801
  1869  0011C6  EFE7  F008         	goto	u800
  1870  0011CA                     u801:
  1871  0011CA  EFEC  F008         	goto	l1548
  1872  0011CE                     u800:
  1873  0011CE                     l1546:
  1874  0011CE  5001               	movf	fputc@c^0,w,c
  1875  0011D0  EC6D  F00B         	call	_putch
  1876  0011D4  EF1F  F009         	goto	l955
  1877  0011D8                     l1548:
  1878  0011D8  EE20 F004          	lfsr	2,4
  1879  0011DC  5003               	movf	fputc@fp^0,w,c
  1880  0011DE  26D9               	addwf	fsr2l,f,c
  1881  0011E0  5004               	movf	(fputc@fp+1)^0,w,c
  1882  0011E2  22DA               	addwfc	fsr2h,f,c
  1883  0011E4  50DE               	movf	postinc2,w,c
  1884  0011E6  10DE               	iorwf	postinc2,w,c
  1885  0011E8  B4D8               	btfsc	status,2,c
  1886  0011EA  EFF9  F008         	goto	u811
  1887  0011EE  EFFB  F008         	goto	u810
  1888  0011F2                     u811:
  1889  0011F2  EF16  F009         	goto	l1552
  1890  0011F6                     u810:
  1891  0011F6  EE20 F004          	lfsr	2,4
  1892  0011FA  5003               	movf	fputc@fp^0,w,c
  1893  0011FC  26D9               	addwf	fsr2l,f,c
  1894  0011FE  5004               	movf	(fputc@fp+1)^0,w,c
  1895  001200  22DA               	addwfc	fsr2h,f,c
  1896  001202  EE10 F002          	lfsr	1,2
  1897  001206  5003               	movf	fputc@fp^0,w,c
  1898  001208  26E1               	addwf	fsr1l,f,c
  1899  00120A  5004               	movf	(fputc@fp+1)^0,w,c
  1900  00120C  22E2               	addwfc	fsr1h,f,c
  1901  00120E  50DE               	movf	postinc2,w,c
  1902  001210  5CE6               	subwf	postinc1,w,c
  1903  001212  50E6               	movf	postinc1,w,c
  1904  001214  0A80               	xorlw	128
  1905  001216  6E09               	movwf	(??_fputc+4)^0,c
  1906  001218  50DE               	movf	postinc2,w,c
  1907  00121A  0A80               	xorlw	128
  1908  00121C  5809               	subwfb	(??_fputc+4)^0,w,c
  1909  00121E  B0D8               	btfsc	status,0,c
  1910  001220  EF14  F009         	goto	u821
  1911  001224  EF16  F009         	goto	u820
  1912  001228                     u821:
  1913  001228  EF1F  F009         	goto	l955
  1914  00122C                     u820:
  1915  00122C                     l1552:
  1916  00122C  EE20 F002          	lfsr	2,2
  1917  001230  5003               	movf	fputc@fp^0,w,c
  1918  001232  26D9               	addwf	fsr2l,f,c
  1919  001234  5004               	movf	(fputc@fp+1)^0,w,c
  1920  001236  22DA               	addwfc	fsr2h,f,c
  1921  001238  2ADE               	incf	postinc2,f,c
  1922  00123A  0E00               	movlw	0
  1923  00123C  22DD               	addwfc	postdec2,f,c
  1924  00123E                     l955:
  1925  00123E  0012               	return		;funcret
  1926  001240                     __end_of_fputc:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _putch *****************
  1930 ;; Defined at:
  1931 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  c               1    wreg     unsigned char 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  c               1    0[COMRAM] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1945 ;;      Params:         0       0       0       0
  1946 ;;      Locals:         0       0       0       0
  1947 ;;      Temps:          0       0       0       0
  1948 ;;      Totals:         0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_fputc
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text9
  1959  0016DA                     __ptext9:
  1960                           	callstack 0
  1961  0016DA                     _putch:
  1962                           	callstack 26
  1963  0016DA  0012               	return		;funcret
  1964  0016DC                     __end_of_putch:
  1965                           	callstack 0
  1966                           
  1967 ;; *************** function _abs *****************
  1968 ;; Defined at:
  1969 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  a               2   18[COMRAM] int 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  2   18[COMRAM] int 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1983 ;;      Params:         2       0       0       0
  1984 ;;      Locals:         0       0       0       0
  1985 ;;      Temps:          2       0       0       0
  1986 ;;      Totals:         4       0       0       0
  1987 ;;Total ram usage:        4 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_dtoa
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text10
  1997  0014EE                     __ptext10:
  1998                           	callstack 0
  1999  0014EE                     _abs:
  2000                           	callstack 26
  2001  0014EE  BE14               	btfsc	(abs@a+1)^0,7,c
  2002  0014F0  EF84  F00A         	goto	u1020
  2003  0014F4  5014               	movf	(abs@a+1)^0,w,c
  2004  0014F6  E106               	bnz	u1021
  2005  0014F8  0413               	decf	abs@a^0,w,c
  2006  0014FA  B0D8               	btfsc	status,0,c
  2007  0014FC  EF82  F00A         	goto	u1021
  2008  001500  EF84  F00A         	goto	u1020
  2009  001504                     u1021:
  2010  001504  EF92  F00A         	goto	l940
  2011  001508                     u1020:
  2012  001508  C013  F015         	movff	abs@a,??_abs
  2013  00150C  C014  F016         	movff	abs@a+1,??_abs+1
  2014  001510  1E15               	comf	??_abs^0,f,c
  2015  001512  1E16               	comf	(??_abs+1)^0,f,c
  2016  001514  4A15               	infsnz	??_abs^0,f,c
  2017  001516  2A16               	incf	(??_abs+1)^0,f,c
  2018  001518  C015  F013         	movff	??_abs,?_abs
  2019  00151C  C016  F014         	movff	??_abs+1,?_abs+1
  2020  001520  EF96  F00A         	goto	l943
  2021  001524                     l940:
  2022  001524  C013  F013         	movff	abs@a,?_abs
  2023  001528  C014  F014         	movff	abs@a+1,?_abs+1
  2024  00152C                     l943:
  2025  00152C  0012               	return		;funcret
  2026  00152E                     __end_of_abs:
  2027                           	callstack 0
  2028                           
  2029 ;; *************** function ___aomod *****************
  2030 ;; Defined at:
  2031 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  dividend        8    0[COMRAM] long long 
  2034 ;;  divisor         8    8[COMRAM] long long 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  sign            1   17[COMRAM] unsigned char 
  2037 ;;  counter         1   16[COMRAM] unsigned char 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  8    0[COMRAM] long long 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2047 ;;      Params:        16       0       0       0
  2048 ;;      Locals:         2       0       0       0
  2049 ;;      Temps:          0       0       0       0
  2050 ;;      Totals:        18       0       0       0
  2051 ;;Total ram usage:       18 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_dtoa
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text11
  2061  000EAE                     __ptext11:
  2062                           	callstack 0
  2063  000EAE                     ___aomod:
  2064                           	callstack 26
  2065  000EAE  0E00               	movlw	0
  2066  000EB0  6E12               	movwf	___aomod@sign^0,c
  2067  000EB2  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2068  000EB4  EF60  F007         	goto	u920
  2069  000EB8  EF5E  F007         	goto	u921
  2070  000EBC                     u921:
  2071  000EBC  EF72  F007         	goto	l1626
  2072  000EC0                     u920:
  2073  000EC0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2074  000EC2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2075  000EC4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2076  000EC6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2077  000EC8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2078  000ECA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2079  000ECC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2080  000ECE  6C01               	negf	___aomod@dividend^0,c
  2081  000ED0  0E00               	movlw	0
  2082  000ED2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2083  000ED4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2084  000ED6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2085  000ED8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2086  000EDA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2087  000EDC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2088  000EDE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2089  000EE0  0E01               	movlw	1
  2090  000EE2  6E12               	movwf	___aomod@sign^0,c
  2091  000EE4                     l1626:
  2092  000EE4  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2093  000EE6  EF79  F007         	goto	u930
  2094  000EEA  EF77  F007         	goto	u931
  2095  000EEE                     u931:
  2096  000EEE  EF89  F007         	goto	l1630
  2097  000EF2                     u930:
  2098  000EF2  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2099  000EF4  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2100  000EF6  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2101  000EF8  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2102  000EFA  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2103  000EFC  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2104  000EFE  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2105  000F00  6C09               	negf	___aomod@divisor^0,c
  2106  000F02  0E00               	movlw	0
  2107  000F04  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2108  000F06  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2109  000F08  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2110  000F0A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2111  000F0C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2112  000F0E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2113  000F10  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2114  000F12                     l1630:
  2115  000F12  5009               	movf	___aomod@divisor^0,w,c
  2116  000F14  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2117  000F16  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2118  000F18  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2119  000F1A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2120  000F1C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2121  000F1E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2122  000F20  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2123  000F22  B4D8               	btfsc	status,2,c
  2124  000F24  EF96  F007         	goto	u941
  2125  000F28  EF98  F007         	goto	u940
  2126  000F2C                     u941:
  2127  000F2C  EFE0  F007         	goto	l1646
  2128  000F30                     u940:
  2129  000F30  0E01               	movlw	1
  2130  000F32  6E11               	movwf	___aomod@counter^0,c
  2131  000F34  EFA6  F007         	goto	l1636
  2132  000F38                     l1634:
  2133  000F38  90D8               	bcf	status,0,c
  2134  000F3A  3609               	rlcf	___aomod@divisor^0,f,c
  2135  000F3C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2136  000F3E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2137  000F40  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2138  000F42  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2139  000F44  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2140  000F46  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2141  000F48  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2142  000F4A  2A11               	incf	___aomod@counter^0,f,c
  2143  000F4C                     l1636:
  2144  000F4C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2145  000F4E  EFAB  F007         	goto	u951
  2146  000F52  EFAD  F007         	goto	u950
  2147  000F56                     u951:
  2148  000F56  EF9C  F007         	goto	l1634
  2149  000F5A                     u950:
  2150  000F5A                     l1638:
  2151  000F5A  5009               	movf	___aomod@divisor^0,w,c
  2152  000F5C  5C01               	subwf	___aomod@dividend^0,w,c
  2153  000F5E  500A               	movf	(___aomod@divisor+1)^0,w,c
  2154  000F60  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2155  000F62  500B               	movf	(___aomod@divisor+2)^0,w,c
  2156  000F64  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2157  000F66  500C               	movf	(___aomod@divisor+3)^0,w,c
  2158  000F68  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2159  000F6A  500D               	movf	(___aomod@divisor+4)^0,w,c
  2160  000F6C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2161  000F6E  500E               	movf	(___aomod@divisor+5)^0,w,c
  2162  000F70  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2163  000F72  500F               	movf	(___aomod@divisor+6)^0,w,c
  2164  000F74  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2165  000F76  5010               	movf	(___aomod@divisor+7)^0,w,c
  2166  000F78  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2167  000F7A  A0D8               	btfss	status,0,c
  2168  000F7C  EFC2  F007         	goto	u961
  2169  000F80  EFC4  F007         	goto	u960
  2170  000F84                     u961:
  2171  000F84  EFD4  F007         	goto	l1642
  2172  000F88                     u960:
  2173  000F88  5009               	movf	___aomod@divisor^0,w,c
  2174  000F8A  5E01               	subwf	___aomod@dividend^0,f,c
  2175  000F8C  500A               	movf	(___aomod@divisor+1)^0,w,c
  2176  000F8E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2177  000F90  500B               	movf	(___aomod@divisor+2)^0,w,c
  2178  000F92  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2179  000F94  500C               	movf	(___aomod@divisor+3)^0,w,c
  2180  000F96  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2181  000F98  500D               	movf	(___aomod@divisor+4)^0,w,c
  2182  000F9A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2183  000F9C  500E               	movf	(___aomod@divisor+5)^0,w,c
  2184  000F9E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2185  000FA0  500F               	movf	(___aomod@divisor+6)^0,w,c
  2186  000FA2  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2187  000FA4  5010               	movf	(___aomod@divisor+7)^0,w,c
  2188  000FA6  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2189  000FA8                     l1642:
  2190  000FA8  90D8               	bcf	status,0,c
  2191  000FAA  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2192  000FAC  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2193  000FAE  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2194  000FB0  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2195  000FB2  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2196  000FB4  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2197  000FB6  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2198  000FB8  3209               	rrcf	___aomod@divisor^0,f,c
  2199  000FBA  2E11               	decfsz	___aomod@counter^0,f,c
  2200  000FBC  EFAD  F007         	goto	l1638
  2201  000FC0                     l1646:
  2202  000FC0  5012               	movf	___aomod@sign^0,w,c
  2203  000FC2  B4D8               	btfsc	status,2,c
  2204  000FC4  EFE6  F007         	goto	u971
  2205  000FC8  EFE8  F007         	goto	u970
  2206  000FCC                     u971:
  2207  000FCC  EFF8  F007         	goto	l1650
  2208  000FD0                     u970:
  2209  000FD0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2210  000FD2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2211  000FD4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2212  000FD6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2213  000FD8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2214  000FDA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2215  000FDC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2216  000FDE  6C01               	negf	___aomod@dividend^0,c
  2217  000FE0  0E00               	movlw	0
  2218  000FE2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2219  000FE4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2220  000FE6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2221  000FE8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2222  000FEA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2223  000FEC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2224  000FEE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2225  000FF0                     l1650:
  2226  000FF0  C001  F001         	movff	___aomod@dividend,?___aomod
  2227  000FF4  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2228  000FF8  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2229  000FFC  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2230  001000  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2231  001004  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2232  001008  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2233  00100C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2234  001010  0012               	return		;funcret
  2235  001012                     __end_of___aomod:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function ___aodiv *****************
  2239 ;; Defined at:
  2240 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  dividend        8    0[COMRAM] long long 
  2243 ;;  divisor         8    8[COMRAM] long long 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  quotient        8   18[COMRAM] long long 
  2246 ;;  sign            1   17[COMRAM] unsigned char 
  2247 ;;  counter         1   16[COMRAM] unsigned char 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  8    0[COMRAM] long long 
  2250 ;; Registers used:
  2251 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2257 ;;      Params:        16       0       0       0
  2258 ;;      Locals:        10       0       0       0
  2259 ;;      Temps:          0       0       0       0
  2260 ;;      Totals:        26       0       0       0
  2261 ;;Total ram usage:       26 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_dtoa
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text12
  2271  000D26                     __ptext12:
  2272                           	callstack 0
  2273  000D26                     ___aodiv:
  2274                           	callstack 26
  2275  000D26  0E00               	movlw	0
  2276  000D28  6E12               	movwf	___aodiv@sign^0,c
  2277  000D2A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2278  000D2C  EF9C  F006         	goto	u850
  2279  000D30  EF9A  F006         	goto	u851
  2280  000D34                     u851:
  2281  000D34  EFAE  F006         	goto	l1582
  2282  000D38                     u850:
  2283  000D38  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2284  000D3A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2285  000D3C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2286  000D3E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2287  000D40  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2288  000D42  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2289  000D44  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2290  000D46  6C09               	negf	___aodiv@divisor^0,c
  2291  000D48  0E00               	movlw	0
  2292  000D4A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2293  000D4C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2294  000D4E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2295  000D50  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2296  000D52  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2297  000D54  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2298  000D56  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2299  000D58  0E01               	movlw	1
  2300  000D5A  6E12               	movwf	___aodiv@sign^0,c
  2301  000D5C                     l1582:
  2302  000D5C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2303  000D5E  EFB5  F006         	goto	u860
  2304  000D62  EFB3  F006         	goto	u861
  2305  000D66                     u861:
  2306  000D66  EFC7  F006         	goto	l1588
  2307  000D6A                     u860:
  2308  000D6A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2309  000D6C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2310  000D6E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2311  000D70  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2312  000D72  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2313  000D74  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2314  000D76  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2315  000D78  6C01               	negf	___aodiv@dividend^0,c
  2316  000D7A  0E00               	movlw	0
  2317  000D7C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2318  000D7E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2319  000D80  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2320  000D82  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2321  000D84  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2322  000D86  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2323  000D88  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2324  000D8A  0E01               	movlw	1
  2325  000D8C  1A12               	xorwf	___aodiv@sign^0,f,c
  2326  000D8E                     l1588:
  2327  000D8E  EE20  F013         	lfsr	2,___aodiv@quotient
  2328  000D92  0E07               	movlw	7
  2329  000D94                     u871:
  2330  000D94  6ADE               	clrf	postinc2,c
  2331  000D96  06E8               	decf	wreg,f,c
  2332  000D98  E2FD               	bc	u871
  2333  000D9A  5009               	movf	___aodiv@divisor^0,w,c
  2334  000D9C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2335  000D9E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2336  000DA0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2337  000DA2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2338  000DA4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2339  000DA6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2340  000DA8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2341  000DAA  B4D8               	btfsc	status,2,c
  2342  000DAC  EFDA  F006         	goto	u881
  2343  000DB0  EFDC  F006         	goto	u880
  2344  000DB4                     u881:
  2345  000DB4  EF2E  F007         	goto	l1610
  2346  000DB8                     u880:
  2347  000DB8  0E01               	movlw	1
  2348  000DBA  6E11               	movwf	___aodiv@counter^0,c
  2349  000DBC  EFEA  F006         	goto	l1596
  2350  000DC0                     l1594:
  2351  000DC0  90D8               	bcf	status,0,c
  2352  000DC2  3609               	rlcf	___aodiv@divisor^0,f,c
  2353  000DC4  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2354  000DC6  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2355  000DC8  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2356  000DCA  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2357  000DCC  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2358  000DCE  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2359  000DD0  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2360  000DD2  2A11               	incf	___aodiv@counter^0,f,c
  2361  000DD4                     l1596:
  2362  000DD4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2363  000DD6  EFEF  F006         	goto	u891
  2364  000DDA  EFF1  F006         	goto	u890
  2365  000DDE                     u891:
  2366  000DDE  EFE0  F006         	goto	l1594
  2367  000DE2                     u890:
  2368  000DE2                     l1598:
  2369  000DE2  90D8               	bcf	status,0,c
  2370  000DE4  3613               	rlcf	___aodiv@quotient^0,f,c
  2371  000DE6  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2372  000DE8  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2373  000DEA  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2374  000DEC  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2375  000DEE  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2376  000DF0  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2377  000DF2  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2378  000DF4  5009               	movf	___aodiv@divisor^0,w,c
  2379  000DF6  5C01               	subwf	___aodiv@dividend^0,w,c
  2380  000DF8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2381  000DFA  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2382  000DFC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2383  000DFE  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2384  000E00  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2385  000E02  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2386  000E04  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2387  000E06  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2388  000E08  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2389  000E0A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2390  000E0C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2391  000E0E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2392  000E10  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2393  000E12  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2394  000E14  A0D8               	btfss	status,0,c
  2395  000E16  EF0F  F007         	goto	u901
  2396  000E1A  EF11  F007         	goto	u900
  2397  000E1E                     u901:
  2398  000E1E  EF22  F007         	goto	l1606
  2399  000E22                     u900:
  2400  000E22  5009               	movf	___aodiv@divisor^0,w,c
  2401  000E24  5E01               	subwf	___aodiv@dividend^0,f,c
  2402  000E26  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2403  000E28  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2404  000E2A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2405  000E2C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2406  000E2E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2407  000E30  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2408  000E32  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2409  000E34  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2410  000E36  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2411  000E38  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2412  000E3A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2413  000E3C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2414  000E3E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2415  000E40  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2416  000E42  8013               	bsf	___aodiv@quotient^0,0,c
  2417  000E44                     l1606:
  2418  000E44  90D8               	bcf	status,0,c
  2419  000E46  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2420  000E48  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2421  000E4A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2422  000E4C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2423  000E4E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2424  000E50  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2425  000E52  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2426  000E54  3209               	rrcf	___aodiv@divisor^0,f,c
  2427  000E56  2E11               	decfsz	___aodiv@counter^0,f,c
  2428  000E58  EFF1  F006         	goto	l1598
  2429  000E5C                     l1610:
  2430  000E5C  5012               	movf	___aodiv@sign^0,w,c
  2431  000E5E  B4D8               	btfsc	status,2,c
  2432  000E60  EF34  F007         	goto	u911
  2433  000E64  EF36  F007         	goto	u910
  2434  000E68                     u911:
  2435  000E68  EF46  F007         	goto	l1614
  2436  000E6C                     u910:
  2437  000E6C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2438  000E6E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2439  000E70  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2440  000E72  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2441  000E74  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2442  000E76  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2443  000E78  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2444  000E7A  6C13               	negf	___aodiv@quotient^0,c
  2445  000E7C  0E00               	movlw	0
  2446  000E7E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2447  000E80  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2448  000E82  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2449  000E84  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2450  000E86  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2451  000E88  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2452  000E8A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2453  000E8C                     l1614:
  2454  000E8C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2455  000E90  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2456  000E94  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2457  000E98  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2458  000E9C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2459  000EA0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2460  000EA4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2461  000EA8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2462  000EAC  0012               	return		;funcret
  2463  000EAE                     __end_of___aodiv:
  2464                           	callstack 0
  2465                           
  2466 ;; *************** function _pinMode *****************
  2467 ;; Defined at:
  2468 ;;		line 60 in file "pins.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  pin             1    wreg     unsigned char 
  2471 ;;  mode            1   39[COMRAM] unsigned char 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  pin             1   44[COMRAM] unsigned char 
  2474 ;;  bit_val         1   45[COMRAM] unsigned char 
  2475 ;;  port            1   43[COMRAM] enum E6026
  2476 ;;  port_num        1   42[COMRAM] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2486 ;;      Params:         1       0       0       0
  2487 ;;      Locals:         4       0       0       0
  2488 ;;      Temps:          2       0       0       0
  2489 ;;      Totals:         7       0       0       0
  2490 ;;Total ram usage:        7 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; Hardware stack levels required when called: 2
  2493 ;; This function calls:
  2494 ;;		_clearBit
  2495 ;;		_convertToBit
  2496 ;;		_convertToPort
  2497 ;;		_pinToIndex
  2498 ;;		_setBit
  2499 ;; This function is called by:
  2500 ;;		_main
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text13
  2505  00030A                     __ptext13:
  2506                           	callstack 0
  2507  00030A                     _pinMode:
  2508                           	callstack 28
  2509                           
  2510                           ;incstack = 0
  2511                           ;pinMode@pin stored from wreg
  2512  00030A  6E2D               	movwf	pinMode@pin^0,c
  2513  00030C                     
  2514                           ;pins.c: 61:      if (pin == 11 ||
  2515  00030C  0E0B               	movlw	11
  2516  00030E  182D               	xorwf	pinMode@pin^0,w,c
  2517  000310  B4D8               	btfsc	status,2,c
  2518  000312  EF8D  F001         	goto	u1291
  2519  000316  EF8F  F001         	goto	u1290
  2520  00031A                     u1291:
  2521  00031A  EF47  F004         	goto	l133
  2522  00031E                     u1290:
  2523  00031E  0E0C               	movlw	12
  2524  000320  182D               	xorwf	pinMode@pin^0,w,c
  2525  000322  B4D8               	btfsc	status,2,c
  2526  000324  EF96  F001         	goto	u1301
  2527  000328  EF98  F001         	goto	u1300
  2528  00032C                     u1301:
  2529  00032C  EF47  F004         	goto	l133
  2530  000330                     u1300:
  2531  000330  0E1F               	movlw	31
  2532  000332  182D               	xorwf	pinMode@pin^0,w,c
  2533  000334  B4D8               	btfsc	status,2,c
  2534  000336  EF9F  F001         	goto	u1311
  2535  00033A  EFA1  F001         	goto	u1310
  2536  00033E                     u1311:
  2537  00033E  EF47  F004         	goto	l133
  2538  000342                     u1310:
  2539  000342  0E20               	movlw	32
  2540  000344  182D               	xorwf	pinMode@pin^0,w,c
  2541  000346  B4D8               	btfsc	status,2,c
  2542  000348  EFA8  F001         	goto	u1321
  2543  00034C  EFAA  F001         	goto	u1320
  2544  000350                     u1321:
  2545  000350  EF47  F004         	goto	l133
  2546  000354                     u1320:
  2547  000354  502D               	movf	pinMode@pin^0,w,c
  2548  000356  B4D8               	btfsc	status,2,c
  2549  000358  EFB0  F001         	goto	u1331
  2550  00035C  EFB2  F001         	goto	u1330
  2551  000360                     u1331:
  2552  000360  EF47  F004         	goto	l133
  2553  000364                     u1330:
  2554  000364  0E28               	movlw	40
  2555  000366  642D               	cpfsgt	pinMode@pin^0,c
  2556  000368  EFB8  F001         	goto	u1341
  2557  00036C  EFBA  F001         	goto	u1340
  2558  000370                     u1341:
  2559  000370  EFBC  F001         	goto	l1852
  2560  000374                     u1340:
  2561  000374  EF47  F004         	goto	l133
  2562  000378                     l1852:
  2563                           
  2564                           ;pins.c: 67:      if(mode != ANALOG_INPUT && mode != INPUT && mode != INPUT_PULLUP && mo
      +                          de != OUTPUT) return;
  2565  000378  5028               	movf	pinMode@mode^0,w,c
  2566  00037A  B4D8               	btfsc	status,2,c
  2567  00037C  EFC2  F001         	goto	u1351
  2568  000380  EFC4  F001         	goto	u1350
  2569  000384                     u1351:
  2570  000384  EFE0  F001         	goto	l1862
  2571  000388                     u1350:
  2572  000388  0428               	decf	pinMode@mode^0,w,c
  2573  00038A  B4D8               	btfsc	status,2,c
  2574  00038C  EFCA  F001         	goto	u1361
  2575  000390  EFCC  F001         	goto	u1360
  2576  000394                     u1361:
  2577  000394  EFE0  F001         	goto	l1862
  2578  000398                     u1360:
  2579  000398  0E02               	movlw	2
  2580  00039A  1828               	xorwf	pinMode@mode^0,w,c
  2581  00039C  B4D8               	btfsc	status,2,c
  2582  00039E  EFD3  F001         	goto	u1371
  2583  0003A2  EFD5  F001         	goto	u1370
  2584  0003A6                     u1371:
  2585  0003A6  EFE0  F001         	goto	l1862
  2586  0003AA                     u1370:
  2587  0003AA  0E03               	movlw	3
  2588  0003AC  1828               	xorwf	pinMode@mode^0,w,c
  2589  0003AE  B4D8               	btfsc	status,2,c
  2590  0003B0  EFDC  F001         	goto	u1381
  2591  0003B4  EFDE  F001         	goto	u1380
  2592  0003B8                     u1381:
  2593  0003B8  EFE0  F001         	goto	l1862
  2594  0003BC                     u1380:
  2595  0003BC  EF47  F004         	goto	l133
  2596  0003C0                     l1862:
  2597                           
  2598                           ;pins.c: 69:      uint8_t port_num = pinToIndex(pin);
  2599  0003C0  502D               	movf	pinMode@pin^0,w,c
  2600  0003C2  EC2D  F00A         	call	_pinToIndex
  2601  0003C6  6E2B               	movwf	pinMode@port_num^0,c
  2602  0003C8                     
  2603                           ;pins.c: 70:      enum ports port = convertToPort(port_num);
  2604  0003C8  502B               	movf	pinMode@port_num^0,w,c
  2605  0003CA  ECB5  F009         	call	_convertToPort
  2606  0003CE  6E2C               	movwf	pinMode@port^0,c
  2607  0003D0                     
  2608                           ;pins.c: 71:      uint8_t bit_val = convertToBit(port_num);
  2609  0003D0  502B               	movf	pinMode@port_num^0,w,c
  2610  0003D2  EC20  F009         	call	_convertToBit
  2611  0003D6  6E2E               	movwf	pinMode@bit_val^0,c
  2612  0003D8                     
  2613                           ;pins.c: 73:      if(mode == ANALOG_INPUT){
  2614  0003D8  5028               	movf	pinMode@mode^0,w,c
  2615  0003DA  A4D8               	btfss	status,2,c
  2616  0003DC  EFF2  F001         	goto	u1391
  2617  0003E0  EFF4  F001         	goto	u1390
  2618  0003E4                     u1391:
  2619  0003E4  EF71  F002         	goto	l1886
  2620  0003E8                     u1390:
  2621  0003E8  EF50  F002         	goto	l1884
  2622  0003EC                     l1872:
  2623                           
  2624                           ;pins.c: 76:                  setBit(&TRISA, bit_val);
  2625  0003EC  0E92               	movlw	146
  2626  0003EE  6E04               	movwf	setBit@p^0,c
  2627  0003F0  0E0F               	movlw	15
  2628  0003F2  6E05               	movwf	(setBit@p+1)^0,c
  2629  0003F4  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2630  0003F8  EC57  F00B         	call	_setBit	;wreg free
  2631                           
  2632                           ;pins.c: 77:                  setBit(&ANSELA, bit_val);
  2633  0003FC  0E38               	movlw	56
  2634  0003FE  6E04               	movwf	setBit@p^0,c
  2635  000400  0E0F               	movlw	15
  2636  000402  6E05               	movwf	(setBit@p+1)^0,c
  2637  000404  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2638  000408  EC57  F00B         	call	_setBit	;wreg free
  2639                           
  2640                           ;pins.c: 78:                  break;
  2641  00040C  EF47  F004         	goto	l133
  2642  000410                     l1874:
  2643                           
  2644                           ;pins.c: 80:                  setBit(&TRISB, bit_val);
  2645  000410  0E93               	movlw	147
  2646  000412  6E04               	movwf	setBit@p^0,c
  2647  000414  0E0F               	movlw	15
  2648  000416  6E05               	movwf	(setBit@p+1)^0,c
  2649  000418  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2650  00041C  EC57  F00B         	call	_setBit	;wreg free
  2651                           
  2652                           ;pins.c: 81:                  setBit(&ANSELB, bit_val);
  2653  000420  0E39               	movlw	57
  2654  000422  6E04               	movwf	setBit@p^0,c
  2655  000424  0E0F               	movlw	15
  2656  000426  6E05               	movwf	(setBit@p+1)^0,c
  2657  000428  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2658  00042C  EC57  F00B         	call	_setBit	;wreg free
  2659                           
  2660                           ;pins.c: 82:                  break;
  2661  000430  EF47  F004         	goto	l133
  2662  000434                     l1876:
  2663                           
  2664                           ;pins.c: 84:                  setBit(&TRISC, bit_val);
  2665  000434  0E94               	movlw	148
  2666  000436  6E04               	movwf	setBit@p^0,c
  2667  000438  0E0F               	movlw	15
  2668  00043A  6E05               	movwf	(setBit@p+1)^0,c
  2669  00043C  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2670  000440  EC57  F00B         	call	_setBit	;wreg free
  2671                           
  2672                           ;pins.c: 85:                  setBit(&ANSELC, bit_val);
  2673  000444  0E3A               	movlw	58
  2674  000446  6E04               	movwf	setBit@p^0,c
  2675  000448  0E0F               	movlw	15
  2676  00044A  6E05               	movwf	(setBit@p+1)^0,c
  2677  00044C  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2678  000450  EC57  F00B         	call	_setBit	;wreg free
  2679                           
  2680                           ;pins.c: 86:                  break;
  2681  000454  EF47  F004         	goto	l133
  2682  000458                     l1878:
  2683                           
  2684                           ;pins.c: 88:                  setBit(&TRISD, bit_val);
  2685  000458  0E95               	movlw	149
  2686  00045A  6E04               	movwf	setBit@p^0,c
  2687  00045C  0E0F               	movlw	15
  2688  00045E  6E05               	movwf	(setBit@p+1)^0,c
  2689  000460  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2690  000464  EC57  F00B         	call	_setBit	;wreg free
  2691                           
  2692                           ;pins.c: 89:                  setBit(&ANSELD, bit_val);
  2693  000468  0E3B               	movlw	59
  2694  00046A  6E04               	movwf	setBit@p^0,c
  2695  00046C  0E0F               	movlw	15
  2696  00046E  6E05               	movwf	(setBit@p+1)^0,c
  2697  000470  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2698  000474  EC57  F00B         	call	_setBit	;wreg free
  2699                           
  2700                           ;pins.c: 90:                  break;
  2701  000478  EF47  F004         	goto	l133
  2702  00047C                     l1880:
  2703                           
  2704                           ;pins.c: 92:                  setBit(&TRISE, bit_val);
  2705  00047C  0E96               	movlw	150
  2706  00047E  6E04               	movwf	setBit@p^0,c
  2707  000480  0E0F               	movlw	15
  2708  000482  6E05               	movwf	(setBit@p+1)^0,c
  2709  000484  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2710  000488  EC57  F00B         	call	_setBit	;wreg free
  2711                           
  2712                           ;pins.c: 93:                  setBit(&ANSELE, bit_val);
  2713  00048C  0E3C               	movlw	60
  2714  00048E  6E04               	movwf	setBit@p^0,c
  2715  000490  0E0F               	movlw	15
  2716  000492  6E05               	movwf	(setBit@p+1)^0,c
  2717  000494  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2718  000498  EC57  F00B         	call	_setBit	;wreg free
  2719                           
  2720                           ;pins.c: 94:                  break;
  2721  00049C  EF47  F004         	goto	l133
  2722  0004A0                     l1884:
  2723  0004A0  502C               	movf	pinMode@port^0,w,c
  2724  0004A2  6E29               	movwf	??_pinMode^0,c
  2725  0004A4  6A2A               	clrf	(??_pinMode+1)^0,c
  2726                           
  2727                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2728                           ; Switch size 1, requested type "simple"
  2729                           ; Number of cases is 1, Range of values is 0 to 0
  2730                           ; switch strategies available:
  2731                           ; Name         Instructions Cycles
  2732                           ; simple_byte            4     3 (average)
  2733                           ;	Chosen strategy is simple_byte
  2734  0004A6  502A               	movf	(??_pinMode+1)^0,w,c
  2735  0004A8  0A00               	xorlw	0	; case 0
  2736  0004AA  B4D8               	btfsc	status,2,c
  2737  0004AC  EF5A  F002         	goto	l2098
  2738  0004B0  EF47  F004         	goto	l133
  2739  0004B4                     l2098:
  2740                           
  2741                           ; Switch size 1, requested type "simple"
  2742                           ; Number of cases is 5, Range of values is 0 to 4
  2743                           ; switch strategies available:
  2744                           ; Name         Instructions Cycles
  2745                           ; simple_byte           16     9 (average)
  2746                           ;	Chosen strategy is simple_byte
  2747  0004B4  5029               	movf	??_pinMode^0,w,c
  2748  0004B6  0A00               	xorlw	0	; case 0
  2749  0004B8  B4D8               	btfsc	status,2,c
  2750  0004BA  EFF6  F001         	goto	l1872
  2751  0004BE  0A01               	xorlw	1	; case 1
  2752  0004C0  B4D8               	btfsc	status,2,c
  2753  0004C2  EF08  F002         	goto	l1874
  2754  0004C6  0A03               	xorlw	3	; case 2
  2755  0004C8  B4D8               	btfsc	status,2,c
  2756  0004CA  EF1A  F002         	goto	l1876
  2757  0004CE  0A01               	xorlw	1	; case 3
  2758  0004D0  B4D8               	btfsc	status,2,c
  2759  0004D2  EF2C  F002         	goto	l1878
  2760  0004D6  0A07               	xorlw	7	; case 4
  2761  0004D8  B4D8               	btfsc	status,2,c
  2762  0004DA  EF3E  F002         	goto	l1880
  2763  0004DE  EF47  F004         	goto	l133
  2764  0004E2                     l1886:
  2765  0004E2  0428               	decf	pinMode@mode^0,w,c
  2766  0004E4  A4D8               	btfss	status,2,c
  2767  0004E6  EF77  F002         	goto	u1401
  2768  0004EA  EF79  F002         	goto	u1400
  2769  0004EE                     u1401:
  2770  0004EE  EF1E  F003         	goto	l1904
  2771  0004F2                     u1400:
  2772  0004F2  EFFD  F002         	goto	l1902
  2773  0004F6                     l1890:
  2774                           
  2775                           ;pins.c: 102:                  setBit(&TRISA, bit_val);
  2776  0004F6  0E92               	movlw	146
  2777  0004F8  6E04               	movwf	setBit@p^0,c
  2778  0004FA  0E0F               	movlw	15
  2779  0004FC  6E05               	movwf	(setBit@p+1)^0,c
  2780  0004FE  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2781  000502  EC57  F00B         	call	_setBit	;wreg free
  2782                           
  2783                           ;pins.c: 103:                  clearBit(&LATA, bit_val);
  2784  000506  0E89               	movlw	137
  2785  000508  6E04               	movwf	clearBit@p^0,c
  2786  00050A  0E0F               	movlw	15
  2787  00050C  6E05               	movwf	(clearBit@p+1)^0,c
  2788  00050E  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2789  000512  EC3F  F00B         	call	_clearBit	;wreg free
  2790                           
  2791                           ;pins.c: 104:                  clearBit(&ANSELA, bit_val);
  2792  000516  0E38               	movlw	56
  2793  000518  6E04               	movwf	clearBit@p^0,c
  2794  00051A  0E0F               	movlw	15
  2795  00051C  6E05               	movwf	(clearBit@p+1)^0,c
  2796  00051E  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2797  000522  EC3F  F00B         	call	_clearBit	;wreg free
  2798                           
  2799                           ;pins.c: 105:                  break;
  2800  000526  EF47  F004         	goto	l133
  2801  00052A                     l1892:
  2802                           
  2803                           ;pins.c: 107:                  setBit(&TRISB, bit_val);
  2804  00052A  0E93               	movlw	147
  2805  00052C  6E04               	movwf	setBit@p^0,c
  2806  00052E  0E0F               	movlw	15
  2807  000530  6E05               	movwf	(setBit@p+1)^0,c
  2808  000532  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2809  000536  EC57  F00B         	call	_setBit	;wreg free
  2810                           
  2811                           ;pins.c: 108:                  clearBit(&LATB, bit_val);
  2812  00053A  0E8A               	movlw	138
  2813  00053C  6E04               	movwf	clearBit@p^0,c
  2814  00053E  0E0F               	movlw	15
  2815  000540  6E05               	movwf	(clearBit@p+1)^0,c
  2816  000542  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2817  000546  EC3F  F00B         	call	_clearBit	;wreg free
  2818                           
  2819                           ;pins.c: 109:                  clearBit(&ANSELB, bit_val);
  2820  00054A  0E39               	movlw	57
  2821  00054C  6E04               	movwf	clearBit@p^0,c
  2822  00054E  0E0F               	movlw	15
  2823  000550  6E05               	movwf	(clearBit@p+1)^0,c
  2824  000552  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2825  000556  EC3F  F00B         	call	_clearBit	;wreg free
  2826                           
  2827                           ;pins.c: 110:                  break;
  2828  00055A  EF47  F004         	goto	l133
  2829  00055E                     l1894:
  2830                           
  2831                           ;pins.c: 112:                  setBit(&TRISC, bit_val);
  2832  00055E  0E94               	movlw	148
  2833  000560  6E04               	movwf	setBit@p^0,c
  2834  000562  0E0F               	movlw	15
  2835  000564  6E05               	movwf	(setBit@p+1)^0,c
  2836  000566  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2837  00056A  EC57  F00B         	call	_setBit	;wreg free
  2838                           
  2839                           ;pins.c: 113:                  clearBit(&LATC, bit_val);
  2840  00056E  0E8B               	movlw	139
  2841  000570  6E04               	movwf	clearBit@p^0,c
  2842  000572  0E0F               	movlw	15
  2843  000574  6E05               	movwf	(clearBit@p+1)^0,c
  2844  000576  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2845  00057A  EC3F  F00B         	call	_clearBit	;wreg free
  2846                           
  2847                           ;pins.c: 114:                  clearBit(&ANSELC, bit_val);
  2848  00057E  0E3A               	movlw	58
  2849  000580  6E04               	movwf	clearBit@p^0,c
  2850  000582  0E0F               	movlw	15
  2851  000584  6E05               	movwf	(clearBit@p+1)^0,c
  2852  000586  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2853  00058A  EC3F  F00B         	call	_clearBit	;wreg free
  2854                           
  2855                           ;pins.c: 115:                  break;
  2856  00058E  EF47  F004         	goto	l133
  2857  000592                     l1896:
  2858                           
  2859                           ;pins.c: 117:                  setBit(&TRISD, bit_val);
  2860  000592  0E95               	movlw	149
  2861  000594  6E04               	movwf	setBit@p^0,c
  2862  000596  0E0F               	movlw	15
  2863  000598  6E05               	movwf	(setBit@p+1)^0,c
  2864  00059A  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2865  00059E  EC57  F00B         	call	_setBit	;wreg free
  2866                           
  2867                           ;pins.c: 118:                  clearBit(&LATD, bit_val);
  2868  0005A2  0E8C               	movlw	140
  2869  0005A4  6E04               	movwf	clearBit@p^0,c
  2870  0005A6  0E0F               	movlw	15
  2871  0005A8  6E05               	movwf	(clearBit@p+1)^0,c
  2872  0005AA  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2873  0005AE  EC3F  F00B         	call	_clearBit	;wreg free
  2874                           
  2875                           ;pins.c: 119:                  clearBit(&ANSELD, bit_val);
  2876  0005B2  0E3B               	movlw	59
  2877  0005B4  6E04               	movwf	clearBit@p^0,c
  2878  0005B6  0E0F               	movlw	15
  2879  0005B8  6E05               	movwf	(clearBit@p+1)^0,c
  2880  0005BA  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2881  0005BE  EC3F  F00B         	call	_clearBit	;wreg free
  2882                           
  2883                           ;pins.c: 120:                  break;
  2884  0005C2  EF47  F004         	goto	l133
  2885  0005C6                     l1898:
  2886                           
  2887                           ;pins.c: 122:                  setBit(&TRISE, bit_val);
  2888  0005C6  0E96               	movlw	150
  2889  0005C8  6E04               	movwf	setBit@p^0,c
  2890  0005CA  0E0F               	movlw	15
  2891  0005CC  6E05               	movwf	(setBit@p+1)^0,c
  2892  0005CE  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2893  0005D2  EC57  F00B         	call	_setBit	;wreg free
  2894                           
  2895                           ;pins.c: 123:                  clearBit(&LATE, bit_val);
  2896  0005D6  0E8D               	movlw	141
  2897  0005D8  6E04               	movwf	clearBit@p^0,c
  2898  0005DA  0E0F               	movlw	15
  2899  0005DC  6E05               	movwf	(clearBit@p+1)^0,c
  2900  0005DE  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2901  0005E2  EC3F  F00B         	call	_clearBit	;wreg free
  2902                           
  2903                           ;pins.c: 124:                  clearBit(&ANSELE, bit_val);
  2904  0005E6  0E3C               	movlw	60
  2905  0005E8  6E04               	movwf	clearBit@p^0,c
  2906  0005EA  0E0F               	movlw	15
  2907  0005EC  6E05               	movwf	(clearBit@p+1)^0,c
  2908  0005EE  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2909  0005F2  EC3F  F00B         	call	_clearBit	;wreg free
  2910                           
  2911                           ;pins.c: 125:                  break;
  2912  0005F6  EF47  F004         	goto	l133
  2913  0005FA                     l1902:
  2914  0005FA  502C               	movf	pinMode@port^0,w,c
  2915  0005FC  6E29               	movwf	??_pinMode^0,c
  2916  0005FE  6A2A               	clrf	(??_pinMode+1)^0,c
  2917                           
  2918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2919                           ; Switch size 1, requested type "simple"
  2920                           ; Number of cases is 1, Range of values is 0 to 0
  2921                           ; switch strategies available:
  2922                           ; Name         Instructions Cycles
  2923                           ; simple_byte            4     3 (average)
  2924                           ;	Chosen strategy is simple_byte
  2925  000600  502A               	movf	(??_pinMode+1)^0,w,c
  2926  000602  0A00               	xorlw	0	; case 0
  2927  000604  B4D8               	btfsc	status,2,c
  2928  000606  EF07  F003         	goto	l2100
  2929  00060A  EF47  F004         	goto	l133
  2930  00060E                     l2100:
  2931                           
  2932                           ; Switch size 1, requested type "simple"
  2933                           ; Number of cases is 5, Range of values is 0 to 4
  2934                           ; switch strategies available:
  2935                           ; Name         Instructions Cycles
  2936                           ; simple_byte           16     9 (average)
  2937                           ;	Chosen strategy is simple_byte
  2938  00060E  5029               	movf	??_pinMode^0,w,c
  2939  000610  0A00               	xorlw	0	; case 0
  2940  000612  B4D8               	btfsc	status,2,c
  2941  000614  EF7B  F002         	goto	l1890
  2942  000618  0A01               	xorlw	1	; case 1
  2943  00061A  B4D8               	btfsc	status,2,c
  2944  00061C  EF95  F002         	goto	l1892
  2945  000620  0A03               	xorlw	3	; case 2
  2946  000622  B4D8               	btfsc	status,2,c
  2947  000624  EFAF  F002         	goto	l1894
  2948  000628  0A01               	xorlw	1	; case 3
  2949  00062A  B4D8               	btfsc	status,2,c
  2950  00062C  EFC9  F002         	goto	l1896
  2951  000630  0A07               	xorlw	7	; case 4
  2952  000632  B4D8               	btfsc	status,2,c
  2953  000634  EFE3  F002         	goto	l1898
  2954  000638  EF47  F004         	goto	l133
  2955  00063C                     l1904:
  2956  00063C  0E02               	movlw	2
  2957  00063E  1828               	xorwf	pinMode@mode^0,w,c
  2958  000640  A4D8               	btfss	status,2,c
  2959  000642  EF25  F003         	goto	u1411
  2960  000646  EF27  F003         	goto	u1410
  2961  00064A                     u1411:
  2962  00064A  EF26  F004         	goto	l1934
  2963  00064E                     u1410:
  2964  00064E  EFAB  F003         	goto	l1920
  2965  000652                     l1908:
  2966                           
  2967                           ;pins.c: 133:                  setBit(&TRISA, bit_val);
  2968  000652  0E92               	movlw	146
  2969  000654  6E04               	movwf	setBit@p^0,c
  2970  000656  0E0F               	movlw	15
  2971  000658  6E05               	movwf	(setBit@p+1)^0,c
  2972  00065A  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2973  00065E  EC57  F00B         	call	_setBit	;wreg free
  2974                           
  2975                           ;pins.c: 134:                  setBit(&LATA, bit_val);
  2976  000662  0E89               	movlw	137
  2977  000664  6E04               	movwf	setBit@p^0,c
  2978  000666  0E0F               	movlw	15
  2979  000668  6E05               	movwf	(setBit@p+1)^0,c
  2980  00066A  C02E  F006         	movff	pinMode@bit_val,setBit@b
  2981  00066E  EC57  F00B         	call	_setBit	;wreg free
  2982                           
  2983                           ;pins.c: 135:                  clearBit(&ANSELA, bit_val);
  2984  000672  0E38               	movlw	56
  2985  000674  6E04               	movwf	clearBit@p^0,c
  2986  000676  0E0F               	movlw	15
  2987  000678  6E05               	movwf	(clearBit@p+1)^0,c
  2988  00067A  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  2989  00067E  EC3F  F00B         	call	_clearBit	;wreg free
  2990                           
  2991                           ;pins.c: 136:                  break;
  2992  000682  EF47  F004         	goto	l133
  2993  000686                     l1910:
  2994                           
  2995                           ;pins.c: 138:                  setBit(&TRISB, bit_val);
  2996  000686  0E93               	movlw	147
  2997  000688  6E04               	movwf	setBit@p^0,c
  2998  00068A  0E0F               	movlw	15
  2999  00068C  6E05               	movwf	(setBit@p+1)^0,c
  3000  00068E  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3001  000692  EC57  F00B         	call	_setBit	;wreg free
  3002                           
  3003                           ;pins.c: 139:                  setBit(&LATB, bit_val);
  3004  000696  0E8A               	movlw	138
  3005  000698  6E04               	movwf	setBit@p^0,c
  3006  00069A  0E0F               	movlw	15
  3007  00069C  6E05               	movwf	(setBit@p+1)^0,c
  3008  00069E  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3009  0006A2  EC57  F00B         	call	_setBit	;wreg free
  3010                           
  3011                           ;pins.c: 140:                  clearBit(&ANSELB, bit_val);
  3012  0006A6  0E39               	movlw	57
  3013  0006A8  6E04               	movwf	clearBit@p^0,c
  3014  0006AA  0E0F               	movlw	15
  3015  0006AC  6E05               	movwf	(clearBit@p+1)^0,c
  3016  0006AE  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3017  0006B2  EC3F  F00B         	call	_clearBit	;wreg free
  3018                           
  3019                           ;pins.c: 141:                  break;
  3020  0006B6  EF47  F004         	goto	l133
  3021  0006BA                     l1912:
  3022                           
  3023                           ;pins.c: 143:                  setBit(&TRISC, bit_val);
  3024  0006BA  0E94               	movlw	148
  3025  0006BC  6E04               	movwf	setBit@p^0,c
  3026  0006BE  0E0F               	movlw	15
  3027  0006C0  6E05               	movwf	(setBit@p+1)^0,c
  3028  0006C2  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3029  0006C6  EC57  F00B         	call	_setBit	;wreg free
  3030                           
  3031                           ;pins.c: 144:                  setBit(&LATC, bit_val);
  3032  0006CA  0E8B               	movlw	139
  3033  0006CC  6E04               	movwf	setBit@p^0,c
  3034  0006CE  0E0F               	movlw	15
  3035  0006D0  6E05               	movwf	(setBit@p+1)^0,c
  3036  0006D2  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3037  0006D6  EC57  F00B         	call	_setBit	;wreg free
  3038                           
  3039                           ;pins.c: 145:                  clearBit(&ANSELC, bit_val);
  3040  0006DA  0E3A               	movlw	58
  3041  0006DC  6E04               	movwf	clearBit@p^0,c
  3042  0006DE  0E0F               	movlw	15
  3043  0006E0  6E05               	movwf	(clearBit@p+1)^0,c
  3044  0006E2  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3045  0006E6  EC3F  F00B         	call	_clearBit	;wreg free
  3046                           
  3047                           ;pins.c: 146:                  break;
  3048  0006EA  EF47  F004         	goto	l133
  3049  0006EE                     l1914:
  3050                           
  3051                           ;pins.c: 148:                  setBit(&TRISD, bit_val);
  3052  0006EE  0E95               	movlw	149
  3053  0006F0  6E04               	movwf	setBit@p^0,c
  3054  0006F2  0E0F               	movlw	15
  3055  0006F4  6E05               	movwf	(setBit@p+1)^0,c
  3056  0006F6  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3057  0006FA  EC57  F00B         	call	_setBit	;wreg free
  3058                           
  3059                           ;pins.c: 149:                  setBit(&LATD, bit_val);
  3060  0006FE  0E8C               	movlw	140
  3061  000700  6E04               	movwf	setBit@p^0,c
  3062  000702  0E0F               	movlw	15
  3063  000704  6E05               	movwf	(setBit@p+1)^0,c
  3064  000706  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3065  00070A  EC57  F00B         	call	_setBit	;wreg free
  3066                           
  3067                           ;pins.c: 150:                  clearBit(&ANSELD, bit_val);
  3068  00070E  0E3B               	movlw	59
  3069  000710  6E04               	movwf	clearBit@p^0,c
  3070  000712  0E0F               	movlw	15
  3071  000714  6E05               	movwf	(clearBit@p+1)^0,c
  3072  000716  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3073  00071A  EC3F  F00B         	call	_clearBit	;wreg free
  3074                           
  3075                           ;pins.c: 151:                  break;
  3076  00071E  EF47  F004         	goto	l133
  3077  000722                     l1916:
  3078                           
  3079                           ;pins.c: 153:                  setBit(&TRISE, bit_val);
  3080  000722  0E96               	movlw	150
  3081  000724  6E04               	movwf	setBit@p^0,c
  3082  000726  0E0F               	movlw	15
  3083  000728  6E05               	movwf	(setBit@p+1)^0,c
  3084  00072A  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3085  00072E  EC57  F00B         	call	_setBit	;wreg free
  3086                           
  3087                           ;pins.c: 154:                  setBit(&LATE, bit_val);
  3088  000732  0E8D               	movlw	141
  3089  000734  6E04               	movwf	setBit@p^0,c
  3090  000736  0E0F               	movlw	15
  3091  000738  6E05               	movwf	(setBit@p+1)^0,c
  3092  00073A  C02E  F006         	movff	pinMode@bit_val,setBit@b
  3093  00073E  EC57  F00B         	call	_setBit	;wreg free
  3094                           
  3095                           ;pins.c: 155:                  clearBit(&ANSELE, bit_val);
  3096  000742  0E3C               	movlw	60
  3097  000744  6E04               	movwf	clearBit@p^0,c
  3098  000746  0E0F               	movlw	15
  3099  000748  6E05               	movwf	(clearBit@p+1)^0,c
  3100  00074A  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3101  00074E  EC3F  F00B         	call	_clearBit	;wreg free
  3102                           
  3103                           ;pins.c: 156:                  break;
  3104  000752  EF47  F004         	goto	l133
  3105  000756                     l1920:
  3106  000756  502C               	movf	pinMode@port^0,w,c
  3107  000758  6E29               	movwf	??_pinMode^0,c
  3108  00075A  6A2A               	clrf	(??_pinMode+1)^0,c
  3109                           
  3110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3111                           ; Switch size 1, requested type "simple"
  3112                           ; Number of cases is 1, Range of values is 0 to 0
  3113                           ; switch strategies available:
  3114                           ; Name         Instructions Cycles
  3115                           ; simple_byte            4     3 (average)
  3116                           ;	Chosen strategy is simple_byte
  3117  00075C  502A               	movf	(??_pinMode+1)^0,w,c
  3118  00075E  0A00               	xorlw	0	; case 0
  3119  000760  B4D8               	btfsc	status,2,c
  3120  000762  EFB5  F003         	goto	l2102
  3121  000766  EF47  F004         	goto	l133
  3122  00076A                     l2102:
  3123                           
  3124                           ; Switch size 1, requested type "simple"
  3125                           ; Number of cases is 5, Range of values is 0 to 4
  3126                           ; switch strategies available:
  3127                           ; Name         Instructions Cycles
  3128                           ; simple_byte           16     9 (average)
  3129                           ;	Chosen strategy is simple_byte
  3130  00076A  5029               	movf	??_pinMode^0,w,c
  3131  00076C  0A00               	xorlw	0	; case 0
  3132  00076E  B4D8               	btfsc	status,2,c
  3133  000770  EF29  F003         	goto	l1908
  3134  000774  0A01               	xorlw	1	; case 1
  3135  000776  B4D8               	btfsc	status,2,c
  3136  000778  EF43  F003         	goto	l1910
  3137  00077C  0A03               	xorlw	3	; case 2
  3138  00077E  B4D8               	btfsc	status,2,c
  3139  000780  EF5D  F003         	goto	l1912
  3140  000784  0A01               	xorlw	1	; case 3
  3141  000786  B4D8               	btfsc	status,2,c
  3142  000788  EF77  F003         	goto	l1914
  3143  00078C  0A07               	xorlw	7	; case 4
  3144  00078E  B4D8               	btfsc	status,2,c
  3145  000790  EF91  F003         	goto	l1916
  3146  000794  EF47  F004         	goto	l133
  3147  000798                     l1922:
  3148                           
  3149                           ;pins.c: 164:                  clearBit(&TRISA, bit_val);
  3150  000798  0E92               	movlw	146
  3151  00079A  6E04               	movwf	clearBit@p^0,c
  3152  00079C  0E0F               	movlw	15
  3153  00079E  6E05               	movwf	(clearBit@p+1)^0,c
  3154  0007A0  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3155  0007A4  EC3F  F00B         	call	_clearBit	;wreg free
  3156                           
  3157                           ;pins.c: 165:                  clearBit(&ANSELA, bit_val);
  3158  0007A8  0E38               	movlw	56
  3159  0007AA  6E04               	movwf	clearBit@p^0,c
  3160  0007AC  0E0F               	movlw	15
  3161  0007AE  6E05               	movwf	(clearBit@p+1)^0,c
  3162  0007B0  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3163  0007B4  EC3F  F00B         	call	_clearBit	;wreg free
  3164                           
  3165                           ;pins.c: 166:                  break;
  3166  0007B8  EF47  F004         	goto	l133
  3167  0007BC                     l1924:
  3168                           
  3169                           ;pins.c: 168:                  clearBit(&TRISB, bit_val);
  3170  0007BC  0E93               	movlw	147
  3171  0007BE  6E04               	movwf	clearBit@p^0,c
  3172  0007C0  0E0F               	movlw	15
  3173  0007C2  6E05               	movwf	(clearBit@p+1)^0,c
  3174  0007C4  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3175  0007C8  EC3F  F00B         	call	_clearBit	;wreg free
  3176                           
  3177                           ;pins.c: 169:                  clearBit(&ANSELB, bit_val);
  3178  0007CC  0E39               	movlw	57
  3179  0007CE  6E04               	movwf	clearBit@p^0,c
  3180  0007D0  0E0F               	movlw	15
  3181  0007D2  6E05               	movwf	(clearBit@p+1)^0,c
  3182  0007D4  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3183  0007D8  EC3F  F00B         	call	_clearBit	;wreg free
  3184                           
  3185                           ;pins.c: 170:                  break;
  3186  0007DC  EF47  F004         	goto	l133
  3187  0007E0                     l1926:
  3188                           
  3189                           ;pins.c: 172:                  clearBit(&TRISC, bit_val);
  3190  0007E0  0E94               	movlw	148
  3191  0007E2  6E04               	movwf	clearBit@p^0,c
  3192  0007E4  0E0F               	movlw	15
  3193  0007E6  6E05               	movwf	(clearBit@p+1)^0,c
  3194  0007E8  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3195  0007EC  EC3F  F00B         	call	_clearBit	;wreg free
  3196                           
  3197                           ;pins.c: 173:                  clearBit(&ANSELC, bit_val);
  3198  0007F0  0E3A               	movlw	58
  3199  0007F2  6E04               	movwf	clearBit@p^0,c
  3200  0007F4  0E0F               	movlw	15
  3201  0007F6  6E05               	movwf	(clearBit@p+1)^0,c
  3202  0007F8  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3203  0007FC  EC3F  F00B         	call	_clearBit	;wreg free
  3204                           
  3205                           ;pins.c: 174:                  break;
  3206  000800  EF47  F004         	goto	l133
  3207  000804                     l1928:
  3208                           
  3209                           ;pins.c: 176:                  clearBit(&TRISD, bit_val);
  3210  000804  0E95               	movlw	149
  3211  000806  6E04               	movwf	clearBit@p^0,c
  3212  000808  0E0F               	movlw	15
  3213  00080A  6E05               	movwf	(clearBit@p+1)^0,c
  3214  00080C  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3215  000810  EC3F  F00B         	call	_clearBit	;wreg free
  3216                           
  3217                           ;pins.c: 177:                  clearBit(&ANSELD, bit_val);
  3218  000814  0E3B               	movlw	59
  3219  000816  6E04               	movwf	clearBit@p^0,c
  3220  000818  0E0F               	movlw	15
  3221  00081A  6E05               	movwf	(clearBit@p+1)^0,c
  3222  00081C  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3223  000820  EC3F  F00B         	call	_clearBit	;wreg free
  3224                           
  3225                           ;pins.c: 178:                  break;
  3226  000824  EF47  F004         	goto	l133
  3227  000828                     l1930:
  3228                           
  3229                           ;pins.c: 180:                  clearBit(&TRISA, bit_val);
  3230  000828  0E92               	movlw	146
  3231  00082A  6E04               	movwf	clearBit@p^0,c
  3232  00082C  0E0F               	movlw	15
  3233  00082E  6E05               	movwf	(clearBit@p+1)^0,c
  3234  000830  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3235  000834  EC3F  F00B         	call	_clearBit	;wreg free
  3236                           
  3237                           ;pins.c: 181:                  clearBit(&ANSELE, bit_val);
  3238  000838  0E3C               	movlw	60
  3239  00083A  6E04               	movwf	clearBit@p^0,c
  3240  00083C  0E0F               	movlw	15
  3241  00083E  6E05               	movwf	(clearBit@p+1)^0,c
  3242  000840  C02E  F006         	movff	pinMode@bit_val,clearBit@b
  3243  000844  EC3F  F00B         	call	_clearBit	;wreg free
  3244                           
  3245                           ;pins.c: 182:                  break;
  3246  000848  EF47  F004         	goto	l133
  3247  00084C                     l1934:
  3248  00084C  502C               	movf	pinMode@port^0,w,c
  3249  00084E  6E29               	movwf	??_pinMode^0,c
  3250  000850  6A2A               	clrf	(??_pinMode+1)^0,c
  3251                           
  3252                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3253                           ; Switch size 1, requested type "simple"
  3254                           ; Number of cases is 1, Range of values is 0 to 0
  3255                           ; switch strategies available:
  3256                           ; Name         Instructions Cycles
  3257                           ; simple_byte            4     3 (average)
  3258                           ;	Chosen strategy is simple_byte
  3259  000852  502A               	movf	(??_pinMode+1)^0,w,c
  3260  000854  0A00               	xorlw	0	; case 0
  3261  000856  B4D8               	btfsc	status,2,c
  3262  000858  EF30  F004         	goto	l2104
  3263  00085C  EF47  F004         	goto	l133
  3264  000860                     l2104:
  3265                           
  3266                           ; Switch size 1, requested type "simple"
  3267                           ; Number of cases is 5, Range of values is 0 to 4
  3268                           ; switch strategies available:
  3269                           ; Name         Instructions Cycles
  3270                           ; simple_byte           16     9 (average)
  3271                           ;	Chosen strategy is simple_byte
  3272  000860  5029               	movf	??_pinMode^0,w,c
  3273  000862  0A00               	xorlw	0	; case 0
  3274  000864  B4D8               	btfsc	status,2,c
  3275  000866  EFCC  F003         	goto	l1922
  3276  00086A  0A01               	xorlw	1	; case 1
  3277  00086C  B4D8               	btfsc	status,2,c
  3278  00086E  EFDE  F003         	goto	l1924
  3279  000872  0A03               	xorlw	3	; case 2
  3280  000874  B4D8               	btfsc	status,2,c
  3281  000876  EFF0  F003         	goto	l1926
  3282  00087A  0A01               	xorlw	1	; case 3
  3283  00087C  B4D8               	btfsc	status,2,c
  3284  00087E  EF02  F004         	goto	l1928
  3285  000882  0A07               	xorlw	7	; case 4
  3286  000884  B4D8               	btfsc	status,2,c
  3287  000886  EF14  F004         	goto	l1930
  3288  00088A  EF47  F004         	goto	l133
  3289  00088E                     l133:
  3290  00088E  0012               	return		;funcret
  3291  000890                     __end_of_pinMode:
  3292                           	callstack 0
  3293                           
  3294 ;; *************** function _setBit *****************
  3295 ;; Defined at:
  3296 ;;		line 30 in file "mylib.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;  p               2    3[COMRAM] PTR volatile unsigned ch
  3299 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  3300 ;;		 -> LATA(1), ANSELE(1), TRISE(1), ANSELD(1), 
  3301 ;;		 -> TRISD(1), ANSELC(1), TRISC(1), ANSELB(1), 
  3302 ;;		 -> TRISB(1), ANSELA(1), TRISA(1), 
  3303 ;;  b               1    5[COMRAM] unsigned char 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3315 ;;      Params:         3       0       0       0
  3316 ;;      Locals:         0       0       0       0
  3317 ;;      Temps:          1       0       0       0
  3318 ;;      Totals:         4       0       0       0
  3319 ;;Total ram usage:        4 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; Hardware stack levels required when called: 1
  3322 ;; This function calls:
  3323 ;;		_bitValue
  3324 ;; This function is called by:
  3325 ;;		_pinMode
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text14
  3330  0016AE                     __ptext14:
  3331                           	callstack 0
  3332  0016AE                     _setBit:
  3333                           	callstack 28
  3334  0016AE                     
  3335                           ;mylib.c: 31:      *p |= bitValue(b);
  3336  0016AE  5006               	movf	setBit@b^0,w,c
  3337  0016B0  EC30  F00B         	call	_bitValue
  3338  0016B4  6E07               	movwf	??_setBit^0,c
  3339  0016B6  C004  FFD9         	movff	setBit@p,fsr2l
  3340  0016BA  C005  FFDA         	movff	setBit@p+1,fsr2h
  3341  0016BE  5007               	movf	??_setBit^0,w,c
  3342  0016C0  12DF               	iorwf	indf2,f,c
  3343  0016C2  0012               	return		;funcret
  3344  0016C4                     __end_of_setBit:
  3345                           	callstack 0
  3346                           
  3347 ;; *************** function _clearBit *****************
  3348 ;; Defined at:
  3349 ;;		line 34 in file "mylib.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  p               2    3[COMRAM] PTR volatile unsigned ch
  3352 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  3353 ;;		 -> LATA(1), ANSELE(1), ANSELD(1), TRISD(1), 
  3354 ;;		 -> ANSELC(1), TRISC(1), ANSELB(1), TRISB(1), 
  3355 ;;		 -> ANSELA(1), TRISA(1), 
  3356 ;;  b               1    5[COMRAM] unsigned char 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3368 ;;      Params:         3       0       0       0
  3369 ;;      Locals:         0       0       0       0
  3370 ;;      Temps:          1       0       0       0
  3371 ;;      Totals:         4       0       0       0
  3372 ;;Total ram usage:        4 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; Hardware stack levels required when called: 1
  3375 ;; This function calls:
  3376 ;;		_bitValue
  3377 ;; This function is called by:
  3378 ;;		_pinMode
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text15
  3383  00167E                     __ptext15:
  3384                           	callstack 0
  3385  00167E                     _clearBit:
  3386                           	callstack 28
  3387  00167E                     
  3388                           ;mylib.c: 35:      *p |= ~bitValue(b);
  3389  00167E  5006               	movf	clearBit@b^0,w,c
  3390  001680  EC30  F00B         	call	_bitValue
  3391  001684  0AFF               	xorlw	255
  3392  001686  6E07               	movwf	??_clearBit^0,c
  3393  001688  C004  FFD9         	movff	clearBit@p,fsr2l
  3394  00168C  C005  FFDA         	movff	clearBit@p+1,fsr2h
  3395  001690  5007               	movf	??_clearBit^0,w,c
  3396  001692  12DF               	iorwf	indf2,f,c
  3397  001694  0012               	return		;funcret
  3398  001696                     __end_of_clearBit:
  3399                           	callstack 0
  3400                           
  3401 ;; *************** function _digitalRead *****************
  3402 ;; Defined at:
  3403 ;;		line 189 in file "pins.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  pin             1    wreg     unsigned char 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;  pin             1   41[COMRAM] unsigned char 
  3408 ;;  bit_val         1   45[COMRAM] unsigned char 
  3409 ;;  value           1   44[COMRAM] enum E6032
  3410 ;;  port_num        1   43[COMRAM] unsigned char 
  3411 ;;  port            1   42[COMRAM] enum E6026
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      enum E6339
  3414 ;; Registers used:
  3415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3421 ;;      Params:         0       0       0       0
  3422 ;;      Locals:         5       0       0       0
  3423 ;;      Temps:          2       0       0       0
  3424 ;;      Totals:         7       0       0       0
  3425 ;;Total ram usage:        7 bytes
  3426 ;; Hardware stack levels used: 1
  3427 ;; Hardware stack levels required when called: 1
  3428 ;; This function calls:
  3429 ;;		_convertToBit
  3430 ;;		_convertToPort
  3431 ;;		_pinToIndex
  3432 ;;		_readBit
  3433 ;; This function is called by:
  3434 ;;		_main
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text16
  3439  001012                     __ptext16:
  3440                           	callstack 0
  3441  001012                     _digitalRead:
  3442                           	callstack 29
  3443                           
  3444                           ;incstack = 0
  3445                           ;digitalRead@pin stored from wreg
  3446  001012  6E2A               	movwf	digitalRead@pin^0,c
  3447  001014                     
  3448                           ;pins.c: 190:      uint8_t port_num = pinToIndex(pin);
  3449  001014  502A               	movf	digitalRead@pin^0,w,c
  3450  001016  EC2D  F00A         	call	_pinToIndex
  3451  00101A  6E2C               	movwf	digitalRead@port_num^0,c
  3452  00101C                     
  3453                           ;pins.c: 191:      enum ports port = convertToPort(port_num);
  3454  00101C  502C               	movf	digitalRead@port_num^0,w,c
  3455  00101E  ECB5  F009         	call	_convertToPort
  3456  001022  6E2B               	movwf	digitalRead@port^0,c
  3457  001024                     
  3458                           ;pins.c: 192:      uint8_t bit_val = convertToBit(port_num);
  3459  001024  502C               	movf	digitalRead@port_num^0,w,c
  3460  001026  EC20  F009         	call	_convertToBit
  3461  00102A  6E2E               	movwf	digitalRead@bit_val^0,c
  3462                           
  3463                           ;pins.c: 193:      enum values value;;pins.c: 195:      switch(port) {
  3464  00102C  EF4F  F008         	goto	l1970
  3465  001030                     l1958:
  3466                           
  3467                           ;pins.c: 197:              value = readBit(&PORTA, bit_val);
  3468  001030  0E80               	movlw	128
  3469  001032  6E01               	movwf	readBit@p^0,c
  3470  001034  0E0F               	movlw	15
  3471  001036  6E02               	movwf	(readBit@p+1)^0,c
  3472  001038  C02E  F003         	movff	digitalRead@bit_val,readBit@b
  3473  00103C  ECFB  F00A         	call	_readBit	;wreg free
  3474  001040  6E2D               	movwf	digitalRead@value^0,c
  3475                           
  3476                           ;pins.c: 198:              break;
  3477  001042  EF70  F008         	goto	l1972
  3478  001046                     l1960:
  3479                           
  3480                           ;pins.c: 200:              value = readBit(&PORTB, bit_val);
  3481  001046  0E81               	movlw	129
  3482  001048  6E01               	movwf	readBit@p^0,c
  3483  00104A  0E0F               	movlw	15
  3484  00104C  6E02               	movwf	(readBit@p+1)^0,c
  3485  00104E  C02E  F003         	movff	digitalRead@bit_val,readBit@b
  3486  001052  ECFB  F00A         	call	_readBit	;wreg free
  3487  001056  6E2D               	movwf	digitalRead@value^0,c
  3488                           
  3489                           ;pins.c: 201:              break;
  3490  001058  EF70  F008         	goto	l1972
  3491  00105C                     l1962:
  3492                           
  3493                           ;pins.c: 203:              value = readBit(&PORTC, bit_val);
  3494  00105C  0E82               	movlw	130
  3495  00105E  6E01               	movwf	readBit@p^0,c
  3496  001060  0E0F               	movlw	15
  3497  001062  6E02               	movwf	(readBit@p+1)^0,c
  3498  001064  C02E  F003         	movff	digitalRead@bit_val,readBit@b
  3499  001068  ECFB  F00A         	call	_readBit	;wreg free
  3500  00106C  6E2D               	movwf	digitalRead@value^0,c
  3501                           
  3502                           ;pins.c: 204:              break;
  3503  00106E  EF70  F008         	goto	l1972
  3504  001072                     l1964:
  3505                           
  3506                           ;pins.c: 206:              value = readBit(&PORTD, bit_val);
  3507  001072  0E83               	movlw	131
  3508  001074  6E01               	movwf	readBit@p^0,c
  3509  001076  0E0F               	movlw	15
  3510  001078  6E02               	movwf	(readBit@p+1)^0,c
  3511  00107A  C02E  F003         	movff	digitalRead@bit_val,readBit@b
  3512  00107E  ECFB  F00A         	call	_readBit	;wreg free
  3513  001082  6E2D               	movwf	digitalRead@value^0,c
  3514                           
  3515                           ;pins.c: 207:              break;
  3516  001084  EF70  F008         	goto	l1972
  3517  001088                     l1966:
  3518                           
  3519                           ;pins.c: 209:              value = readBit(&PORTE, bit_val);
  3520  001088  0E84               	movlw	132
  3521  00108A  6E01               	movwf	readBit@p^0,c
  3522  00108C  0E0F               	movlw	15
  3523  00108E  6E02               	movwf	(readBit@p+1)^0,c
  3524  001090  C02E  F003         	movff	digitalRead@bit_val,readBit@b
  3525  001094  ECFB  F00A         	call	_readBit	;wreg free
  3526  001098  6E2D               	movwf	digitalRead@value^0,c
  3527                           
  3528                           ;pins.c: 210:              break;
  3529  00109A  EF70  F008         	goto	l1972
  3530  00109E                     l1970:
  3531  00109E  502B               	movf	digitalRead@port^0,w,c
  3532  0010A0  6E28               	movwf	??_digitalRead^0,c
  3533  0010A2  6A29               	clrf	(??_digitalRead+1)^0,c
  3534                           
  3535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3536                           ; Switch size 1, requested type "simple"
  3537                           ; Number of cases is 1, Range of values is 0 to 0
  3538                           ; switch strategies available:
  3539                           ; Name         Instructions Cycles
  3540                           ; simple_byte            4     3 (average)
  3541                           ;	Chosen strategy is simple_byte
  3542  0010A4  5029               	movf	(??_digitalRead+1)^0,w,c
  3543  0010A6  0A00               	xorlw	0	; case 0
  3544  0010A8  B4D8               	btfsc	status,2,c
  3545  0010AA  EF59  F008         	goto	l2106
  3546  0010AE  EF70  F008         	goto	l1972
  3547  0010B2                     l2106:
  3548                           
  3549                           ; Switch size 1, requested type "simple"
  3550                           ; Number of cases is 5, Range of values is 0 to 4
  3551                           ; switch strategies available:
  3552                           ; Name         Instructions Cycles
  3553                           ; simple_byte           16     9 (average)
  3554                           ;	Chosen strategy is simple_byte
  3555  0010B2  5028               	movf	??_digitalRead^0,w,c
  3556  0010B4  0A00               	xorlw	0	; case 0
  3557  0010B6  B4D8               	btfsc	status,2,c
  3558  0010B8  EF18  F008         	goto	l1958
  3559  0010BC  0A01               	xorlw	1	; case 1
  3560  0010BE  B4D8               	btfsc	status,2,c
  3561  0010C0  EF23  F008         	goto	l1960
  3562  0010C4  0A03               	xorlw	3	; case 2
  3563  0010C6  B4D8               	btfsc	status,2,c
  3564  0010C8  EF2E  F008         	goto	l1962
  3565  0010CC  0A01               	xorlw	1	; case 3
  3566  0010CE  B4D8               	btfsc	status,2,c
  3567  0010D0  EF39  F008         	goto	l1964
  3568  0010D4  0A07               	xorlw	7	; case 4
  3569  0010D6  B4D8               	btfsc	status,2,c
  3570  0010D8  EF44  F008         	goto	l1966
  3571  0010DC  EF70  F008         	goto	l1972
  3572  0010E0                     l1972:
  3573                           
  3574                           ;pins.c: 214:      return value;
  3575  0010E0  502D               	movf	digitalRead@value^0,w,c
  3576  0010E2  0012               	return		;funcret
  3577  0010E4                     __end_of_digitalRead:
  3578                           	callstack 0
  3579                           
  3580 ;; *************** function _readBit *****************
  3581 ;; Defined at:
  3582 ;;		line 37 in file "mylib.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  p               2    0[COMRAM] PTR volatile unsigned ch
  3585 ;;		 -> PORTE(1), PORTD(1), PORTC(1), PORTB(1), 
  3586 ;;		 -> PORTA(1), 
  3587 ;;  b               1    2[COMRAM] unsigned char 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;		None
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      unsigned char 
  3592 ;; Registers used:
  3593 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3599 ;;      Params:         3       0       0       0
  3600 ;;      Locals:         0       0       0       0
  3601 ;;      Temps:          2       0       0       0
  3602 ;;      Totals:         5       0       0       0
  3603 ;;Total ram usage:        5 bytes
  3604 ;; Hardware stack levels used: 1
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_digitalRead
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text17
  3613  0015F6                     __ptext17:
  3614                           	callstack 0
  3615  0015F6                     _readBit:
  3616                           	callstack 29
  3617  0015F6                     
  3618                           ;mylib.c: 38:     return (*p >> b) & 0x01;
  3619  0015F6  C003  F004         	movff	readBit@b,??_readBit
  3620  0015FA  C001  FFD9         	movff	readBit@p,fsr2l
  3621  0015FE  C002  FFDA         	movff	readBit@p+1,fsr2h
  3622  001602  50DF               	movf	indf2,w,c
  3623  001604  6E05               	movwf	(??_readBit+1)^0,c
  3624  001606  2A04               	incf	??_readBit^0,f,c
  3625  001608  EF08  F00B         	goto	u1224
  3626  00160C                     u1225:
  3627  00160C  90D8               	bcf	status,0,c
  3628  00160E  3205               	rrcf	(??_readBit+1)^0,f,c
  3629  001610                     u1224:
  3630  001610  2E04               	decfsz	??_readBit^0,f,c
  3631  001612  EF06  F00B         	goto	u1225
  3632  001616  5005               	movf	(??_readBit+1)^0,w,c
  3633  001618  0B01               	andlw	1
  3634  00161A  0012               	return		;funcret
  3635  00161C                     __end_of_readBit:
  3636                           	callstack 0
  3637                           
  3638 ;; *************** function _pinToIndex *****************
  3639 ;; Defined at:
  3640 ;;		line 9 in file "pins.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  pin             1    wreg     unsigned char 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  pin             1   37[COMRAM] unsigned char 
  3645 ;;  pins           36    1[COMRAM] unsigned char [36]
  3646 ;;  i               1   38[COMRAM] unsigned char 
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      unsigned char 
  3649 ;; Registers used:
  3650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3656 ;;      Params:         0       0       0       0
  3657 ;;      Locals:        38       0       0       0
  3658 ;;      Temps:          1       0       0       0
  3659 ;;      Totals:        39       0       0       0
  3660 ;;Total ram usage:       39 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_pinMode
  3666 ;;		_digitalRead
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text18
  3671  00145A                     __ptext18:
  3672                           	callstack 0
  3673  00145A                     _pinToIndex:
  3674                           	callstack 29
  3675                           
  3676                           ;incstack = 0
  3677                           ;pinToIndex@pin stored from wreg
  3678  00145A  6E26               	movwf	pinToIndex@pin^0,c
  3679  00145C                     
  3680                           ;pins.c: 10:     uint8_t pins[36] = {2, 3, 4, 5, 6, 7, 14, 13,
  3681  00145C  EE20  F088         	lfsr	2,pinToIndex@F6037
  3682  001460  EE10  F002         	lfsr	1,pinToIndex@pins
  3683  001464  0E23               	movlw	35
  3684  001466                     u1231:
  3685  001466  CFDB FFE3          	movff	plusw2,plusw1
  3686  00146A  06E8               	decf	wreg,f,c
  3687  00146C  E2FC               	bc	u1231
  3688  00146E                     
  3689                           ;pins.c: 15:     uint8_t i;;pins.c: 16:     for(i=0; i<36; i++){
  3690  00146E  0E00               	movlw	0
  3691  001470  6E27               	movwf	pinToIndex@i^0,c
  3692  001472                     l1804:
  3693                           
  3694                           ;pins.c: 17:         if (pins[i] == pin){
  3695  001472  0E02               	movlw	low pinToIndex@pins
  3696  001474  2427               	addwf	pinToIndex@i^0,w,c
  3697  001476  6ED9               	movwf	fsr2l,c
  3698  001478  6ADA               	clrf	fsr2h,c
  3699  00147A  0E00               	movlw	high pinToIndex@pins
  3700  00147C  22DA               	addwfc	fsr2h,f,c
  3701  00147E  5026               	movf	pinToIndex@pin^0,w,c
  3702  001480  18DE               	xorwf	postinc2,w,c
  3703  001482  A4D8               	btfss	status,2,c
  3704  001484  EF46  F00A         	goto	u1241
  3705  001488  EF48  F00A         	goto	u1240
  3706  00148C                     u1241:
  3707  00148C  EF4A  F00A         	goto	l1808
  3708  001490                     u1240:
  3709  001490  EF53  F00A         	goto	l1812
  3710  001494                     l1808:
  3711                           
  3712                           ;pins.c: 20:     }
  3713  001494  2A27               	incf	pinToIndex@i^0,f,c
  3714  001496  0E23               	movlw	35
  3715  001498  6427               	cpfsgt	pinToIndex@i^0,c
  3716  00149A  EF51  F00A         	goto	u1251
  3717  00149E  EF53  F00A         	goto	u1250
  3718  0014A2                     u1251:
  3719  0014A2  EF39  F00A         	goto	l1804
  3720  0014A6                     u1250:
  3721  0014A6                     l1812:
  3722                           
  3723                           ;pins.c: 21:     return i;
  3724  0014A6  5027               	movf	pinToIndex@i^0,w,c
  3725  0014A8  0012               	return		;funcret
  3726  0014AA                     __end_of_pinToIndex:
  3727                           	callstack 0
  3728                           
  3729 ;; *************** function _convertToPort *****************
  3730 ;; Defined at:
  3731 ;;		line 24 in file "pins.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  i               1    wreg     unsigned char 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  i               1    0[COMRAM] unsigned char 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      enum E6026
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3745 ;;      Params:         0       0       0       0
  3746 ;;      Locals:         1       0       0       0
  3747 ;;      Temps:          0       0       0       0
  3748 ;;      Totals:         1       0       0       0
  3749 ;;Total ram usage:        1 bytes
  3750 ;; Hardware stack levels used: 1
  3751 ;; This function calls:
  3752 ;;		Nothing
  3753 ;; This function is called by:
  3754 ;;		_pinMode
  3755 ;;		_digitalRead
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text19
  3760  00136A                     __ptext19:
  3761                           	callstack 0
  3762  00136A                     _convertToPort:
  3763                           	callstack 29
  3764                           
  3765                           ;incstack = 0
  3766                           ;convertToPort@i stored from wreg
  3767  00136A  6E01               	movwf	convertToPort@i^0,c
  3768  00136C                     
  3769                           ;pins.c: 25:     if(i >= 0 && i <= 7) {
  3770  00136C  0E08               	movlw	8
  3771  00136E  6001               	cpfslt	convertToPort@i^0,c
  3772  001370  EFBC  F009         	goto	u491
  3773  001374  EFBE  F009         	goto	u490
  3774  001378                     u491:
  3775  001378  EFC1  F009         	goto	l1260
  3776  00137C                     u490:
  3777  00137C                     
  3778                           ;pins.c: 26:         return A;
  3779  00137C  0E00               	movlw	0
  3780  00137E  EFFB  F009         	goto	l109
  3781  001382                     l1260:
  3782  001382  0E07               	movlw	7
  3783  001384  6401               	cpfsgt	convertToPort@i^0,c
  3784  001386  EFC7  F009         	goto	u501
  3785  00138A  EFC9  F009         	goto	u500
  3786  00138E                     u501:
  3787  00138E  EFD4  F009         	goto	l1270
  3788  001392                     u500:
  3789  001392  0E10               	movlw	16
  3790  001394  6001               	cpfslt	convertToPort@i^0,c
  3791  001396  EFCF  F009         	goto	u511
  3792  00139A  EFD1  F009         	goto	u510
  3793  00139E                     u511:
  3794  00139E  EFD4  F009         	goto	l1270
  3795  0013A2                     u510:
  3796  0013A2                     
  3797                           ;pins.c: 29:         return B;
  3798  0013A2  0E01               	movlw	1
  3799  0013A4  EFFB  F009         	goto	l109
  3800  0013A8                     l1270:
  3801  0013A8  0E0F               	movlw	15
  3802  0013AA  6401               	cpfsgt	convertToPort@i^0,c
  3803  0013AC  EFDA  F009         	goto	u521
  3804  0013B0  EFDC  F009         	goto	u520
  3805  0013B4                     u521:
  3806  0013B4  EFE7  F009         	goto	l1280
  3807  0013B8                     u520:
  3808  0013B8  0E18               	movlw	24
  3809  0013BA  6001               	cpfslt	convertToPort@i^0,c
  3810  0013BC  EFE2  F009         	goto	u531
  3811  0013C0  EFE4  F009         	goto	u530
  3812  0013C4                     u531:
  3813  0013C4  EFE7  F009         	goto	l1280
  3814  0013C8                     u530:
  3815  0013C8                     
  3816                           ;pins.c: 32:        return C;
  3817  0013C8  0E02               	movlw	2
  3818  0013CA  EFFB  F009         	goto	l109
  3819  0013CE                     l1280:
  3820  0013CE  0E17               	movlw	23
  3821  0013D0  6401               	cpfsgt	convertToPort@i^0,c
  3822  0013D2  EFED  F009         	goto	u541
  3823  0013D6  EFEF  F009         	goto	u540
  3824  0013DA                     u541:
  3825  0013DA  EFFA  F009         	goto	l1290
  3826  0013DE                     u540:
  3827  0013DE  0E20               	movlw	32
  3828  0013E0  6001               	cpfslt	convertToPort@i^0,c
  3829  0013E2  EFF5  F009         	goto	u551
  3830  0013E6  EFF7  F009         	goto	u550
  3831  0013EA                     u551:
  3832  0013EA  EFFA  F009         	goto	l1290
  3833  0013EE                     u550:
  3834  0013EE                     
  3835                           ;pins.c: 35:         return D;
  3836  0013EE  0E03               	movlw	3
  3837  0013F0  EFFB  F009         	goto	l109
  3838  0013F4                     l1290:
  3839                           
  3840                           ;pins.c: 38:         return E;
  3841  0013F4  0E04               	movlw	4
  3842  0013F6                     l109:
  3843  0013F6  0012               	return		;funcret
  3844  0013F8                     __end_of_convertToPort:
  3845                           	callstack 0
  3846                           
  3847 ;; *************** function _convertToBit *****************
  3848 ;; Defined at:
  3849 ;;		line 42 in file "pins.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  i               1    wreg     unsigned char 
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;  i               1    0[COMRAM] unsigned char 
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      unsigned char 
  3856 ;; Registers used:
  3857 ;;		wreg, status,2, status,0
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3863 ;;      Params:         0       0       0       0
  3864 ;;      Locals:         1       0       0       0
  3865 ;;      Temps:          0       0       0       0
  3866 ;;      Totals:         1       0       0       0
  3867 ;;Total ram usage:        1 bytes
  3868 ;; Hardware stack levels used: 1
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_pinMode
  3873 ;;		_digitalRead
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text20
  3878  001240                     __ptext20:
  3879                           	callstack 0
  3880  001240                     _convertToBit:
  3881                           	callstack 29
  3882                           
  3883                           ;incstack = 0
  3884                           ;convertToBit@i stored from wreg
  3885  001240  6E01               	movwf	convertToBit@i^0,c
  3886  001242                     
  3887                           ;pins.c: 43:     if(i >= 0 && i <= 7) {
  3888  001242  0E08               	movlw	8
  3889  001244  6001               	cpfslt	convertToBit@i^0,c
  3890  001246  EF27  F009         	goto	u561
  3891  00124A  EF29  F009         	goto	u560
  3892  00124E                     u561:
  3893  00124E  EF2C  F009         	goto	l1302
  3894  001252                     u560:
  3895  001252                     
  3896                           ;pins.c: 44:         return i;
  3897  001252  5001               	movf	convertToBit@i^0,w,c
  3898  001254  EF6A  F009         	goto	l120
  3899  001258                     l1302:
  3900  001258  0E07               	movlw	7
  3901  00125A  6401               	cpfsgt	convertToBit@i^0,c
  3902  00125C  EF32  F009         	goto	u571
  3903  001260  EF34  F009         	goto	u570
  3904  001264                     u571:
  3905  001264  EF40  F009         	goto	l1312
  3906  001268                     u570:
  3907  001268  0E10               	movlw	16
  3908  00126A  6001               	cpfslt	convertToBit@i^0,c
  3909  00126C  EF3A  F009         	goto	u581
  3910  001270  EF3C  F009         	goto	u580
  3911  001274                     u581:
  3912  001274  EF40  F009         	goto	l1312
  3913  001278                     u580:
  3914  001278                     
  3915                           ;pins.c: 47:         return i-8;
  3916  001278  5001               	movf	convertToBit@i^0,w,c
  3917  00127A  0FF8               	addlw	248
  3918  00127C  EF6A  F009         	goto	l120
  3919  001280                     l1312:
  3920  001280  0E0F               	movlw	15
  3921  001282  6401               	cpfsgt	convertToBit@i^0,c
  3922  001284  EF46  F009         	goto	u591
  3923  001288  EF48  F009         	goto	u590
  3924  00128C                     u591:
  3925  00128C  EF54  F009         	goto	l1322
  3926  001290                     u590:
  3927  001290  0E18               	movlw	24
  3928  001292  6001               	cpfslt	convertToBit@i^0,c
  3929  001294  EF4E  F009         	goto	u601
  3930  001298  EF50  F009         	goto	u600
  3931  00129C                     u601:
  3932  00129C  EF54  F009         	goto	l1322
  3933  0012A0                     u600:
  3934  0012A0                     
  3935                           ;pins.c: 50:         return i-16;
  3936  0012A0  5001               	movf	convertToBit@i^0,w,c
  3937  0012A2  0FF0               	addlw	240
  3938  0012A4  EF6A  F009         	goto	l120
  3939  0012A8                     l1322:
  3940  0012A8  0E17               	movlw	23
  3941  0012AA  6401               	cpfsgt	convertToBit@i^0,c
  3942  0012AC  EF5A  F009         	goto	u611
  3943  0012B0  EF5C  F009         	goto	u610
  3944  0012B4                     u611:
  3945  0012B4  EF68  F009         	goto	l1332
  3946  0012B8                     u610:
  3947  0012B8  0E20               	movlw	32
  3948  0012BA  6001               	cpfslt	convertToBit@i^0,c
  3949  0012BC  EF62  F009         	goto	u621
  3950  0012C0  EF64  F009         	goto	u620
  3951  0012C4                     u621:
  3952  0012C4  EF68  F009         	goto	l1332
  3953  0012C8                     u620:
  3954  0012C8                     
  3955                           ;pins.c: 53:         return i-24;
  3956  0012C8  5001               	movf	convertToBit@i^0,w,c
  3957  0012CA  0FE8               	addlw	232
  3958  0012CC  EF6A  F009         	goto	l120
  3959  0012D0                     l1332:
  3960                           
  3961                           ;pins.c: 56:         return i-32;
  3962  0012D0  5001               	movf	convertToBit@i^0,w,c
  3963  0012D2  0FE0               	addlw	224
  3964  0012D4                     l120:
  3965  0012D4  0012               	return		;funcret
  3966  0012D6                     __end_of_convertToBit:
  3967                           	callstack 0
  3968                           
  3969 ;; *************** function _bitWrite *****************
  3970 ;; Defined at:
  3971 ;;		line 19 in file "mylib.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  number          2    7[COMRAM] PTR unsigned char 
  3974 ;;		 -> main@a(1), 
  3975 ;;  b               1    9[COMRAM] unsigned char 
  3976 ;;  val             1   10[COMRAM] unsigned char 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1    wreg      void 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3988 ;;      Params:         4       0       0       0
  3989 ;;      Locals:         0       0       0       0
  3990 ;;      Temps:          0       0       0       0
  3991 ;;      Totals:         4       0       0       0
  3992 ;;Total ram usage:        4 bytes
  3993 ;; Hardware stack levels used: 1
  3994 ;; Hardware stack levels required when called: 2
  3995 ;; This function calls:
  3996 ;;		_bitClear
  3997 ;;		_bitSet
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text21
  4004  00159A                     __ptext21:
  4005                           	callstack 0
  4006  00159A                     _bitWrite:
  4007                           	callstack 28
  4008  00159A                     
  4009                           ;mylib.c: 20:     val ? bitSet(number, b) : bitClear(number, b);
  4010  00159A  500B               	movf	bitWrite@val^0,w,c
  4011  00159C  B4D8               	btfsc	status,2,c
  4012  00159E  EFD3  F00A         	goto	u1281
  4013  0015A2  EFD5  F00A         	goto	u1280
  4014  0015A6                     u1281:
  4015  0015A6  EFDF  F00A         	goto	l1832
  4016  0015AA                     u1280:
  4017  0015AA  C008  F004         	movff	bitWrite@number,bitSet@number
  4018  0015AE  C009  F005         	movff	bitWrite@number+1,bitSet@number+1
  4019  0015B2  C00A  F006         	movff	bitWrite@b,bitSet@b
  4020  0015B6  EC62  F00B         	call	_bitSet	;wreg free
  4021  0015BA  EFE7  F00A         	goto	l19
  4022  0015BE                     l1832:
  4023  0015BE  C008  F004         	movff	bitWrite@number,bitClear@number
  4024  0015C2  C009  F005         	movff	bitWrite@number+1,bitClear@number+1
  4025  0015C6  C00A  F006         	movff	bitWrite@b,bitClear@b
  4026  0015CA  EC4B  F00B         	call	_bitClear	;wreg free
  4027  0015CE                     l19:
  4028  0015CE  0012               	return		;funcret
  4029  0015D0                     __end_of_bitWrite:
  4030                           	callstack 0
  4031                           
  4032 ;; *************** function _bitSet *****************
  4033 ;; Defined at:
  4034 ;;		line 15 in file "mylib.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  number          2    3[COMRAM] PTR unsigned char 
  4037 ;;		 -> main@a(1), 
  4038 ;;  b               1    5[COMRAM] unsigned char 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;		None
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  1    wreg      void 
  4043 ;; Registers used:
  4044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4050 ;;      Params:         3       0       0       0
  4051 ;;      Locals:         0       0       0       0
  4052 ;;      Temps:          1       0       0       0
  4053 ;;      Totals:         4       0       0       0
  4054 ;;Total ram usage:        4 bytes
  4055 ;; Hardware stack levels used: 1
  4056 ;; Hardware stack levels required when called: 1
  4057 ;; This function calls:
  4058 ;;		_bitValue
  4059 ;; This function is called by:
  4060 ;;		_bitWrite
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text22
  4065  0016C4                     __ptext22:
  4066                           	callstack 0
  4067  0016C4                     _bitSet:
  4068                           	callstack 28
  4069  0016C4                     
  4070                           ;mylib.c: 16:     *number |= bitValue(b);
  4071  0016C4  5006               	movf	bitSet@b^0,w,c
  4072  0016C6  EC30  F00B         	call	_bitValue
  4073  0016CA  6E07               	movwf	??_bitSet^0,c
  4074  0016CC  C004  FFD9         	movff	bitSet@number,fsr2l
  4075  0016D0  C005  FFDA         	movff	bitSet@number+1,fsr2h
  4076  0016D4  5007               	movf	??_bitSet^0,w,c
  4077  0016D6  12DF               	iorwf	indf2,f,c
  4078  0016D8  0012               	return		;funcret
  4079  0016DA                     __end_of_bitSet:
  4080                           	callstack 0
  4081                           
  4082 ;; *************** function _bitClear *****************
  4083 ;; Defined at:
  4084 ;;		line 7 in file "mylib.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  number          2    3[COMRAM] PTR unsigned char 
  4087 ;;		 -> main@a(1), 
  4088 ;;  b               1    5[COMRAM] unsigned char 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4100 ;;      Params:         3       0       0       0
  4101 ;;      Locals:         0       0       0       0
  4102 ;;      Temps:          1       0       0       0
  4103 ;;      Totals:         4       0       0       0
  4104 ;;Total ram usage:        4 bytes
  4105 ;; Hardware stack levels used: 1
  4106 ;; Hardware stack levels required when called: 1
  4107 ;; This function calls:
  4108 ;;		_bitValue
  4109 ;; This function is called by:
  4110 ;;		_bitWrite
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           	psect	text23
  4115  001696                     __ptext23:
  4116                           	callstack 0
  4117  001696                     _bitClear:
  4118                           	callstack 28
  4119  001696                     
  4120                           ;mylib.c: 8:     *number &= ~bitValue(b);
  4121  001696  5006               	movf	bitClear@b^0,w,c
  4122  001698  EC30  F00B         	call	_bitValue
  4123  00169C  0AFF               	xorlw	255
  4124  00169E  6E07               	movwf	??_bitClear^0,c
  4125  0016A0  C004  FFD9         	movff	bitClear@number,fsr2l
  4126  0016A4  C005  FFDA         	movff	bitClear@number+1,fsr2h
  4127  0016A8  5007               	movf	??_bitClear^0,w,c
  4128  0016AA  16DF               	andwf	indf2,f,c
  4129  0016AC  0012               	return		;funcret
  4130  0016AE                     __end_of_bitClear:
  4131                           	callstack 0
  4132                           
  4133 ;; *************** function _bitValue *****************
  4134 ;; Defined at:
  4135 ;;		line 3 in file "mylib.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  b               1    wreg     unsigned char 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  b               1    2[COMRAM] unsigned char 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      unsigned char 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4149 ;;      Params:         0       0       0       0
  4150 ;;      Locals:         1       0       0       0
  4151 ;;      Temps:          2       0       0       0
  4152 ;;      Totals:         3       0       0       0
  4153 ;;Total ram usage:        3 bytes
  4154 ;; Hardware stack levels used: 1
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_bitClear
  4159 ;;		_bitSet
  4160 ;;		_setBit
  4161 ;;		_clearBit
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text24
  4167  001660                     __ptext24:
  4168                           	callstack 0
  4169  001660                     _bitValue:
  4170                           	callstack 28
  4171                           
  4172                           ;incstack = 0
  4173                           ;bitValue@b stored from wreg
  4174  001660  6E03               	movwf	bitValue@b^0,c
  4175  001662                     
  4176                           ;mylib.c: 4:     return 1 << b;
  4177  001662  C003  F001         	movff	bitValue@b,??_bitValue
  4178  001666  0E01               	movlw	1
  4179  001668  6E02               	movwf	(??_bitValue+1)^0,c
  4180  00166A  2A01               	incf	??_bitValue^0,f,c
  4181  00166C  EF3A  F00B         	goto	u404
  4182  001670                     u405:
  4183  001670  90D8               	bcf	status,0,c
  4184  001672  3602               	rlcf	(??_bitValue+1)^0,f,c
  4185  001674                     u404:
  4186  001674  2E01               	decfsz	??_bitValue^0,f,c
  4187  001676  EF38  F00B         	goto	u405
  4188  00167A  5002               	movf	(??_bitValue+1)^0,w,c
  4189  00167C  0012               	return		;funcret
  4190  00167E                     __end_of_bitValue:
  4191                           	callstack 0
  4192                           
  4193 ;; *************** function _bitRead *****************
  4194 ;; Defined at:
  4195 ;;		line 11 in file "mylib.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  number          1    wreg     unsigned char 
  4198 ;;  b               1    0[COMRAM] unsigned char 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  number          1    3[COMRAM] unsigned char 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      unsigned char 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4210 ;;      Params:         1       0       0       0
  4211 ;;      Locals:         1       0       0       0
  4212 ;;      Temps:          2       0       0       0
  4213 ;;      Totals:         4       0       0       0
  4214 ;;Total ram usage:        4 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_main
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text25
  4224  001640                     __ptext25:
  4225                           	callstack 0
  4226  001640                     _bitRead:
  4227                           	callstack 30
  4228                           
  4229                           ;incstack = 0
  4230                           ;bitRead@number stored from wreg
  4231  001640  6E04               	movwf	bitRead@number^0,c
  4232  001642                     
  4233                           ;mylib.c: 12:     return (number >> b) & 0x01;
  4234  001642  C001  F002         	movff	bitRead@b,??_bitRead
  4235  001646  C004  F003         	movff	bitRead@number,??_bitRead+1
  4236  00164A  2A02               	incf	??_bitRead^0,f,c
  4237  00164C  EF2A  F00B         	goto	u1274
  4238  001650                     u1275:
  4239  001650  90D8               	bcf	status,0,c
  4240  001652  3203               	rrcf	(??_bitRead+1)^0,f,c
  4241  001654                     u1274:
  4242  001654  2E02               	decfsz	??_bitRead^0,f,c
  4243  001656  EF28  F00B         	goto	u1275
  4244  00165A  5003               	movf	(??_bitRead+1)^0,w,c
  4245  00165C  0B01               	andlw	1
  4246  00165E  0012               	return		;funcret
  4247  001660                     __end_of_bitRead:
  4248                           	callstack 0
  4249                           
  4250                           	psect	rparam
  4251  0000                     
  4252                           	psect	idloc
  4253                           
  4254                           ;Config register IDLOC0 @ 0x200000
  4255                           ;	unspecified, using default values
  4256  200000                     	org	2097152
  4257  200000  FF                 	db	255
  4258                           
  4259                           ;Config register IDLOC1 @ 0x200001
  4260                           ;	unspecified, using default values
  4261  200001                     	org	2097153
  4262  200001  FF                 	db	255
  4263                           
  4264                           ;Config register IDLOC2 @ 0x200002
  4265                           ;	unspecified, using default values
  4266  200002                     	org	2097154
  4267  200002  FF                 	db	255
  4268                           
  4269                           ;Config register IDLOC3 @ 0x200003
  4270                           ;	unspecified, using default values
  4271  200003                     	org	2097155
  4272  200003  FF                 	db	255
  4273                           
  4274                           ;Config register IDLOC4 @ 0x200004
  4275                           ;	unspecified, using default values
  4276  200004                     	org	2097156
  4277  200004  FF                 	db	255
  4278                           
  4279                           ;Config register IDLOC5 @ 0x200005
  4280                           ;	unspecified, using default values
  4281  200005                     	org	2097157
  4282  200005  FF                 	db	255
  4283                           
  4284                           ;Config register IDLOC6 @ 0x200006
  4285                           ;	unspecified, using default values
  4286  200006                     	org	2097158
  4287  200006  FF                 	db	255
  4288                           
  4289                           ;Config register IDLOC7 @ 0x200007
  4290                           ;	unspecified, using default values
  4291  200007                     	org	2097159
  4292  200007  FF                 	db	255
  4293                           
  4294                           	psect	config
  4295                           
  4296                           ; Padding undefined space
  4297  300000                     	org	3145728
  4298  300000  FF                 	db	255
  4299                           
  4300                           ;Config register CONFIG1H @ 0x300001
  4301                           ;	unspecified, using default values
  4302                           ;	Oscillator Selection bits
  4303                           ;	FOSC = 0x5, unprogrammed default
  4304                           ;	4X PLL Enable
  4305                           ;	PLLCFG = 0x0, unprogrammed default
  4306                           ;	Primary clock enable bit
  4307                           ;	PRICLKEN = 0x1, unprogrammed default
  4308                           ;	Fail-Safe Clock Monitor Enable bit
  4309                           ;	FCMEN = 0x0, unprogrammed default
  4310                           ;	Internal/External Oscillator Switchover bit
  4311                           ;	IESO = 0x0, unprogrammed default
  4312  300001                     	org	3145729
  4313  300001  25                 	db	37
  4314                           
  4315                           ;Config register CONFIG2L @ 0x300002
  4316                           ;	unspecified, using default values
  4317                           ;	Power-up Timer Enable bit
  4318                           ;	PWRTEN = 0x1, unprogrammed default
  4319                           ;	Brown-out Reset Enable bits
  4320                           ;	BOREN = 0x3, unprogrammed default
  4321                           ;	Brown Out Reset Voltage bits
  4322                           ;	BORV = 0x3, unprogrammed default
  4323  300002                     	org	3145730
  4324  300002  1F                 	db	31
  4325                           
  4326                           ;Config register CONFIG2H @ 0x300003
  4327                           ;	unspecified, using default values
  4328                           ;	Watchdog Timer Enable bits
  4329                           ;	WDTEN = 0x3, unprogrammed default
  4330                           ;	Watchdog Timer Postscale Select bits
  4331                           ;	WDTPS = 0xF, unprogrammed default
  4332  300003                     	org	3145731
  4333  300003  3F                 	db	63
  4334                           
  4335                           ; Padding undefined space
  4336  300004                     	org	3145732
  4337  300004  FF                 	db	255
  4338                           
  4339                           ;Config register CONFIG3H @ 0x300005
  4340                           ;	unspecified, using default values
  4341                           ;	CCP2 MUX bit
  4342                           ;	CCP2MX = 0x1, unprogrammed default
  4343                           ;	PORTB A/D Enable bit
  4344                           ;	PBADEN = 0x1, unprogrammed default
  4345                           ;	P3A/CCP3 Mux bit
  4346                           ;	CCP3MX = 0x1, unprogrammed default
  4347                           ;	HFINTOSC Fast Start-up
  4348                           ;	HFOFST = 0x1, unprogrammed default
  4349                           ;	Timer3 Clock input mux bit
  4350                           ;	T3CMX = 0x1, unprogrammed default
  4351                           ;	ECCP2 B output mux bit
  4352                           ;	P2BMX = 0x1, unprogrammed default
  4353                           ;	MCLR Pin Enable bit
  4354                           ;	MCLRE = 0x1, unprogrammed default
  4355  300005                     	org	3145733
  4356  300005  BF                 	db	191
  4357                           
  4358                           ;Config register CONFIG4L @ 0x300006
  4359                           ;	unspecified, using default values
  4360                           ;	Stack Full/Underflow Reset Enable bit
  4361                           ;	STVREN = 0x1, unprogrammed default
  4362                           ;	Single-Supply ICSP Enable bit
  4363                           ;	LVP = 0x1, unprogrammed default
  4364                           ;	Extended Instruction Set Enable bit
  4365                           ;	XINST = 0x0, unprogrammed default
  4366                           ;	Background Debug
  4367                           ;	DEBUG = 0x1, unprogrammed default
  4368  300006                     	org	3145734
  4369  300006  85                 	db	133
  4370                           
  4371                           ; Padding undefined space
  4372  300007                     	org	3145735
  4373  300007  FF                 	db	255
  4374                           
  4375                           ;Config register CONFIG5L @ 0x300008
  4376                           ;	unspecified, using default values
  4377                           ;	Code Protection Block 0
  4378                           ;	CP0 = 0x1, unprogrammed default
  4379                           ;	Code Protection Block 1
  4380                           ;	CP1 = 0x1, unprogrammed default
  4381  300008                     	org	3145736
  4382  300008  03                 	db	3
  4383                           
  4384                           ;Config register CONFIG5H @ 0x300009
  4385                           ;	unspecified, using default values
  4386                           ;	Boot Block Code Protection bit
  4387                           ;	CPB = 0x1, unprogrammed default
  4388                           ;	Data EEPROM Code Protection bit
  4389                           ;	CPD = 0x1, unprogrammed default
  4390  300009                     	org	3145737
  4391  300009  C0                 	db	192
  4392                           
  4393                           ;Config register CONFIG6L @ 0x30000A
  4394                           ;	unspecified, using default values
  4395                           ;	Write Protection Block 0
  4396                           ;	WRT0 = 0x1, unprogrammed default
  4397                           ;	Write Protection Block 1
  4398                           ;	WRT1 = 0x1, unprogramm  4399  30000A                     	org	3145738
  4400  30000A  03                 	db	3
  4401                           
  4402                           ;Config register CONFIG6H @ 0x30000B
  4403                           ;	unspecified, using default values
  4404                           ;	Configuration Register Write Protection bit
  4405                           ;	WRTC = 0x1, unprogrammed default
  4406                           ;	Boot Block Write Protection bit
  4407                           ;	WRTB = 0x1, unprogrammed default
  4408                           ;	Data EEPROM Write Protection bit
  4409                           ;	WRTD = 0x1, unprogrammed default
  4410  30000B                     	org	3145739
  4411  30000B  E0                 	db	224
  4412                           
  4413                           ;Config register CONFIG7L @ 0x30000C
  4414                           ;	unspecified, using default values
  4415                           ;	Table Read Protection Block 0
  4416                           ;	EBTR0 = 0x1, unprogrammed default
  4417                           ;	Table Read Protection Block 1
  4418                           ;	EBTR1 = 0x1, unprogrammed default
  4419  30000C                     	org	3145740
  4420  30000C  03                 	db	3
  4421                           
  4422                           ;Config register CONFIG7H @ 0x30000D
  4423                           ;	unspecified, using default values
  4424                           ;	Boot Block Table Read Protection bit
  4425                           ;	EBTRB = 0x1, unprogrammed default
  4426  30000D                     	org	3145741
  4427  30000D  40                 	db	64
  4428                           tosu	equ	0xFFF
  4429                           tosh	equ	0xFFE
  4430                           tosl	equ	0xFFD
  4431                           stkptr	equ	0xFFC
  4432                           pclatu	equ	0xFFB
  4433                           pclath	equ	0xFFA
  4434                           pcl	equ	0xFF9
  4435                           tblptru	equ	0xFF8
  4436                           tblptrh	equ	0xFF7
  4437                           tblptrl	equ	0xFF6
  4438                           tablat	equ	0xFF5
  4439                           prodh	equ	0xFF4
  4440                           prodl	equ	0xFF3
  4441                           indf0	equ	0xFEF
  4442                           postinc0	equ	0xFEE
  4443                           postdec0	equ	0xFED
  4444                           preinc0	equ	0xFEC
  4445                           plusw0	equ	0xFEB
  4446                           fsr0h	equ	0xFEA
  4447                           fsr0l	equ	0xFE9
  4448                           wreg	equ	0xFE8
  4449                           indf1	equ	0xFE7
  4450                           postinc1	equ	0xFE6
  4451                           postdec1	equ	0xFE5
  4452                           preinc1	equ	0xFE4
  4453                           plusw1	equ	0xFE3
  4454                           fsr1h	equ	0xFE2
  4455                           fsr1l	equ	0xFE1
  4456                           bsr	equ	0xFE0
  4457                           indf2	equ	0xFDF
  4458                           postinc2	equ	0xFDE
  4459                           postdec2	equ	0xFDD
  4460                           preinc2	equ	0xFDC
  4461                           plusw2	equ	0xFDB
  4462                           fsr2h	equ	0xFDA
  4463                           fsr2l	equ	0xFD9
  4464                           status	equ	0xFD8

Data Sizes:
    Strings     7
    Constant    0
    Data        36
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160      5      81
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S616_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    readBit@p	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTE(SFR_1[1]), PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), 
		 -> PORTA(SFR_1[1]), 

    clearBit@p	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATE(SFR_1[1]), LATD(SFR_1[1]), LATC(SFR_1[1]), LATB(SFR_1[1]), 
		 -> LATA(SFR_1[1]), ANSELE(SFR[1]), ANSELD(SFR[1]), TRISD(SFR_1[1]), 
		 -> ANSELC(SFR[1]), TRISC(SFR_1[1]), ANSELB(SFR[1]), TRISB(SFR_1[1]), 
		 -> ANSELA(SFR[1]), TRISA(SFR_1[1]), 

    setBit@p	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATE(SFR_1[1]), LATD(SFR_1[1]), LATC(SFR_1[1]), LATB(SFR_1[1]), 
		 -> LATA(SFR_1[1]), ANSELE(SFR[1]), TRISE(SFR_1[1]), ANSELD(SFR[1]), 
		 -> TRISD(SFR_1[1]), ANSELC(SFR[1]), TRISC(SFR_1[1]), ANSELB(SFR[1]), 
		 -> TRISB(SFR_1[1]), ANSELA(SFR[1]), TRISA(SFR_1[1]), 

    bitWrite@number	PTR unsigned char  size(2) Largest target is 1
		 -> main@a(COMRAM[1]), 

    bitSet@number	PTR unsigned char  size(2) Largest target is 1
		 -> main@a(COMRAM[1]), 

    bitClear@number	PTR unsigned char  size(2) Largest target is 1
		 -> main@a(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _pinMode->_pinToIndex
    _setBit->_bitValue
    _clearBit->_bitValue
    _digitalRead->_pinToIndex
    _bitWrite->_bitClear
    _bitWrite->_bitSet
    _bitSet->_bitValue
    _bitClear->_bitValue

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5   18496
                                             93 COMRAM     2     2      0
                                              0 BANK0      5     0      5
                            _bitRead
                           _bitValue
                           _bitWrite
                        _digitalRead
                            _pinMode
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6265
                                             87 COMRAM     6     2      4
                            _bitRead (ARG)
                           _bitValue (ARG)
                        _digitalRead (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5907
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5553
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4226
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2577
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1169
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     768
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _pinMode                                              7     6      1    9834
                                             39 COMRAM     7     6      1
                           _clearBit
                       _convertToBit
                      _convertToPort
                         _pinToIndex
                             _setBit
 ---------------------------------------------------------------------------------
 (2) _setBit                                               4     1      3    3859
                                              3 COMRAM     4     1      3
                           _bitValue
 ---------------------------------------------------------------------------------
 (2) _clearBit                                             4     1      3    3859
                                              3 COMRAM     4     1      3
                           _bitValue
 ---------------------------------------------------------------------------------
 (1) _digitalRead                                          7     7      0    1453
                                             39 COMRAM     7     7      0
                       _convertToBit
                      _convertToPort
                         _pinToIndex
                            _readBit
 ---------------------------------------------------------------------------------
 (2) _readBit                                              5     2      3     804
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _pinToIndex                                          39    39      0     136
                                              0 COMRAM    39    39      0
 ---------------------------------------------------------------------------------
 (2) _convertToPort                                        1     1      0     105
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _convertToBit                                         1     1      0     180
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bitWrite                                             4     0      4     760
                                              7 COMRAM     4     0      4
                           _bitClear
                             _bitSet
 ---------------------------------------------------------------------------------
 (2) _bitSet                                               4     1      3     211
                                              3 COMRAM     4     1      3
                           _bitValue
 ---------------------------------------------------------------------------------
 (2) _bitClear                                             4     1      3     211
                                              3 COMRAM     4     1      3
                           _bitValue
 ---------------------------------------------------------------------------------
 (3) _bitValue                                             3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _bitRead                                              4     3      1     120
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _bitRead
   _bitValue
   _bitWrite
     _bitClear
       _bitValue
     _bitSet
       _bitValue
   _digitalRead
     _convertToBit
     _convertToPort
     _pinToIndex
     _readBit
   _pinMode
     _clearBit
       _bitValue
     _convertToBit
     _convertToPort
     _pinToIndex
     _setBit
       _bitValue
   _printf
     _bitRead (ARG)
     _bitValue (ARG)
     _digitalRead (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      5      51       4       50.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B0       8        0.0%
DATA                 0      0      B0      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 30 20:47:37 2021

                      l3 167C                        l6 16AC                        l9 165E  
                     l12 16D8                       l31 1694                       l34 161A  
                     l19 15CE                       l51 1366                       l28 16C2  
                    l120 12D4                      l105 14A8                      l300 0EAC  
                    l109 13F6                      l133 088E                      l313 1010  
                    l183 10E2                      l902 0930                      l904 0938  
                    l922 0B70                      l940 1524                      l943 152C  
                    l935 1450                      l936 1458                      l864 15F4  
                    l929 0D24                      l955 123E                      l963 14EC  
                    l891 112A                      l972 1598                      l966 16DA  
                    l894 116C                      l896 11A8                      u404 1674  
                    u500 1392                      u405 1670                      u501 138E  
                    u510 13A2                      u511 139E                      u600 12A0  
                    u520 13B8                      u601 129C                      u521 13B4  
                    u610 12B8                      u530 13C8                      u611 12B4  
                    u531 13C4                      u620 12C8                      u540 13DE  
                    u621 12C4                      u541 13DA                      u550 13EE  
                    u551 13EA                      u560 1252                      u800 11CE  
                    u561 124E                      u801 11CA                      u570 1268  
                    u490 137C                      u810 11F6                      u571 1264  
                    u491 1378                      u811 11F2                      u580 1278  
                    u900 0E22                      u820 122C                      u581 1274  
                    u901 0E1E                      u821 1228                      u590 1290  
                    u910 0E6C                      u830 14EC                      u591 128C  
                    u911 0E68                      u831 14E8                      u920 0EC0  
                    u840 158C                      u921 0EBC                      u841 1588  
                    u850 0D38                      u930 0EF2                      u851 0D34  
                    u931 0EEE                      u860 0D6A                      u940 0F30  
                    u861 0D66                      u941 0F2C                      u950 0F5A  
                    u790 11BC                      u871 0D94                      u951 0F56  
                    u791 11B8                      u880 0DB8                      u960 0F88  
                    u881 0DB4                      u961 0F84                      u890 0DE2  
                    u970 0FD0                      u891 0DDE                      u971 0FCC  
                    u980 10F4                      u981 10F0                      u990 1116  
                    u991 1112                      _abs 14EE                      _pad 10E4  
                    wreg 000FE8                     ?_abs 0013                     l2100 060E  
                   l1302 1258                     l2102 076A                     l1304 1268  
                   l1312 1280                     l2104 0860                     l1314 1290  
                   l1322 12A8                     l1306 1278                     l2106 10B2  
                   l1324 12B8                     l1332 12D0                     l1316 12A0  
                   l1260 1382                     l1252 136C                     l1174 1662  
                   l1326 12C8                     l1262 1392                     l1270 13A8  
                   l1254 137C                     l1272 13B8                     l1280 13CE  
                   l1264 13A2                     l1600 0DF4                     l1282 13DE  
                   l1290 13F4                     l1274 13C8                     l1602 0E22  
                   l1610 0E5C                     l1284 13EE                     l1612 0E6C  
                   l1604 0E42                     l1620 0EB2                     l1700 0966  
                   l1294 1242                     l1614 0E8C                     l1606 0E44  
                   l1630 0F12                     l1622 0EC0                     l1550 11F6  
                   l1542 11AA                     l1710 0A04                     l1702 096E  
                   l1296 1252                     l1608 0E56                     l1640 0F88  
                   l1632 0F30                     l1624 0EE0                     l1552 122C  
                   l1544 11BC                     l1560 14C8                     l1720 0AC0  
                   l1712 0A0A                     l1704 0976                     l1810 1496  
                   l2098 04B4                     l1650 0FF0                     l1642 0FA8  
                   l1634 0F38                     l1626 0EE4                     l1618 0EAE  
                   l1546 11CE                     l1562 14CC                     l1570 158C  
                   l1730 0B12                     l1722 0ADA                     l1706 097C  
                   l1714 0A6E                     l1812 14A6                     l1804 1472  
                   l1580 0D58                     l1644 0FBA                     l1636 0F4C  
                   l1628 0EF2                     l1548 11D8                     l1556 14AA  
                   l1564 1564                     l1660 1116                     l1732 0B24  
                   l1716 0A88                     l1724 0AEA                     l1708 09FE  
                   l1820 140E                     l1830 15AA                     l1910 0686  
                   l1902 05FA                     l1590 0D9A                     l1582 0D5C  
                   l1574 0D26                     l1638 0F5A                     l1646 0FC0  
                   l1558 14B6                     l1566 1570                     l1670 117C  
                   l1662 1122                     l1654 10E4                     l1734 0B30  
                   l1726 0AFC                     l1718 0AA6                     l1750 0BBA  
                   l1742 0B72                     l1822 1434                     l1824 1642  
                   l1832 15BE                     l1808 1494                     l1912 06BA  
                   l1920 0756                     l1904 063C                     l1840 030C  
                   l1592 0DB8                     l1584 0D6A                     l1576 0D2A  
                   l1648 0FD0                     l1568 1574                     l1672 1190  
                   l1664 1136                     l1656 10F4                     l1736 0B38  
                   l1728 0B0C                     l1680 0890                     l1760 0C82  
                   l1752 0BDE                     l1744 0B96                     l1816 13F8  
                   l1930 0828                     l1922 0798                     l1914 06EE  
                   l1850 0364                     l1842 031E                     l1594 0DC0  
                   l1586 0D8A                     l1578 0D38                     l1666 114A  
                   l1658 1108                     l1738 0B48                     l1690 090A  
                   l1682 08B0                     l1762 0CA6                     l1770 0CD4  
                   l1754 0C02                     l1746 0BA4                     l1818 1400  
                   l1834 15D0                     l1828 159A                     l1924 07BC  
                   l1916 0722                     l1908 0652                     l1852 0378  
                   l1844 0330                     l1596 0DD4                     l1588 0D8E  
                   l1676 14EE                     l1668 114E                     l1692 0924  
                   l1684 08D8                     l1772 0CE2                     l1764 0CB4  
                   l1756 0C4A                     l1748 0BB6                     l1836 15D8  
                   l1790 167E                     l1926 07E0                     l1934 084C  
                   l1854 0388                     l1862 03C0                     l1846 0342  
                   l1598 0DE2                     l1678 1508                     l1694 0940  
                   l1686 08F8                     l1766 0CC8                     l1784 1696  
                   l1792 15F6                     l1960 1046                     l1952 1014  
                   l1928 0804                     l1880 047C                     l1872 03EC  
                   l1864 03C8                     l1856 0398                     l1848 0354  
                   l1696 0952                     l1688 0908                     l1776 0CEE  
                   l1786 16C4                     l1962 105C                     l1970 109E  
                   l1954 101C                     l1890 04F6                     l1874 0410  
                   l1866 03D0                     l1858 03AA                     l1698 0960  
                   l1778 0D12                     l1796 145C                     l1964 1072  
                   l1972 10E0                     l1956 1024                     l1788 16AE  
                   l1892 052A                     l1876 0434                     l1884 04A0  
                   l1868 03D8                     l1980 12D6                     l1798 146E  
                   l1966 1088                     l1958 1030                     l1894 055E  
                   l1878 0458                     l1886 04E2                     l1990 1338  
                   l1982 12F0                     ?_pad 0011                     l1896 0592  
                   l1992 1342                     l1984 12F4                     l1898 05C6  
                   l1994 134C                     l1986 1308                     l1988 131A  
                   STR_1 0301                     STR_2 0301                     STR_3 0305  
                   STR_4 0305                     u1000 116C                     u1001 1168  
                   u1010 117C                     u1011 1178                     u1020 1508  
                   u1100 0A88                     u1021 1504                     u1101 0A84  
                   u1110 0AA6                     u1030 08C0                     u1111 0AA2  
                   u1031 08BA                     u1120 0AC0                     u1040 08C2  
                   u1200 0C02                     u1121 0ABC                     u1201 0BFE  
                   u1130 0ADA                     u1050 08D8                     u1210 0CA6  
                   u1131 0AD6                     u1051 08D4                     u1211 0CA2  
                   u1300 0330                     u1140 0AEA                     u1060 0908  
                   u1301 032C                     u1141 0AE6                     u1061 0904  
                   u1310 0342                     u1150 0AFC                     u1070 0924  
                   u1231 1466                     u1311 033E                     u1151 0AF8  
                   u1071 0920                     u1240 1490                     u1224 1610  
                   u1400 04F2                     u1320 0354                     u1160 0B0C  
                   u1080 0952                     u1241 148C                     u1225 160C  
                   u1401 04EE                     u1321 0350                     u1161 0B08  
                   u1081 094E                     u1250 14A6                     u1410 064E  
                   u1330 0364                     u1170 0B24                     u1090 0960  
                   u1251 14A2                     u1411 064A                     u1331 0360  
                   u1171 0B20                     u1091 095C                     u1340 0374  
                   u1180 0B96                     u1260 1450                     u1341 0370  
                   u1181 0B92                     u1261 144C                     _LATA 000F89  
                   u1350 0388                     u1190 0BDE                     _LATB 000F8A  
                   u1351 0384                     u1191 0BDA                     _LATC 000F8B  
                   u1280 15AA                     u1360 0398                     _LATD 000F8C  
                   u1281 15A6                     u1361 0394                     _LATE 000F8D  
                   u1274 1654                     u1370 03AA                     u1290 031E  
                   u1275 1650                     u1371 03A6                     u1291 031A  
                   u1380 03BC                     u1381 03B8                     u1390 03E8  
                   u1391 03E4                     abs@a 0013                     _dbuf 0068  
                   _main 12D6                     _dtoa 0890                     _prec 0064  
                   _nout 0060                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
                   start 0000             ___param_bank 000000            ?_convertToBit 0001  
                  ??_abs 0015                    ??_pad 0017            _convertToPort 136A  
        __end_of___aodiv 0EAE                    ?_main 00AC                    ?_dtoa 001C  
        __end_of___aomod 1012             vfpfcnvrt@fmt 0042                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_bitRead 1660                    _flags 0066          __end_of_readBit 161C  
                  _fputc 11AA                    _fputs 14AA          __end_of_pinMode 0890  
                  pad@fp 0011                    _width 0062                    _putch 16DA  
                  main@a 005F                    dtoa@d 001E                    dtoa@i 003E  
                  dtoa@n 0036                    dtoa@p 0030                    dtoa@s 0034  
                  dtoa@w 0032           pinMode@bit_val 002E                    tablat 000FF5  
                  plusw1 000FE3                    plusw2 000FDB            pinToIndex@pin 0026  
                  status 000FD8           ??_convertToBit 0001          __initialization 152E  
           __end_of_main 136A             __end_of_dtoa 0B72           ?_convertToPort 0001  
                 ??_main 005E                   ??_dtoa 0026            __activetblptr 000002  
   __size_of_digitalRead 00D2                   ?_fputc 0001                   ?_fputs 000A  
                 _ANSELA 000F38                   ?_putch 0001                   _ANSELB 000F39  
                 _ANSELC 000F3A                   _ANSELD 000F3B                   _ANSELE 000F3C  
       __end_of_bitClear 16AE         __end_of_clearBit 1696         __end_of_bitValue 167E  
       __end_of_bitWrite 15D0             vfprintf@cfmt 0056                ??___aodiv 0011  
              ??___aomod 0011                   _bitSet 16C4                   clear_0 1554  
              ??_bitRead 0002                   _setBit 16AE                   isa$std 000001  
                 _printf 15D0                   pad@buf 0013                   dtoa@fp 001C  
                 _strlen 1564                ??_readBit 0004                   fputc@c 0001  
                 fputs@c 000E                   fputs@i 000F                   fputs@s 000A  
              ??_pinMode 0029             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8           pinToIndex@pins 0002  
                 putch@c 0001         __end_of_vfprintf 145A               __accesstop 0060  
__end_of__initialization 155A            ___rparam_used 000001       digitalRead@bit_val 002E  
            pinMode@mode 0028          pinMode@port_num 002B          ??_convertToPort 0001  
            pinMode@port 002C           __pcstackCOMRAM 0001           bitWrite@number 0008  
           __pidataBANK0 161C            __end_of_fputc 1240            __end_of_fputs 14EE  
            pinToIndex@i 0027            __end_of_putch 16DC     __end_of_convertToBit 12D6  
                ??_fputc 0005                  ??_fputs 000E                  ??_putch 0001  
             __pbssBANK0 0060                  ?_bitSet 0004                  ?_setBit 0004  
                ?_printf 0058                  ?_strlen 0001            bitRead@number 0004  
              ?_bitClear 0004                ?_clearBit 0004                ?_bitValue 0001  
     __size_of_vfpfcnvrt 01B4                ?_bitWrite 0008                  __Hparam 0000  
                __Lparam 0000           bitClear@number 0004                  ___aodiv 0D26  
                ___aomod 0EAE          __size_of_bitSet 0016                ?_vfprintf 0050  
           __psmallconst 0300                  _bitRead 1640                  __pcinit 152E  
                __ramtop 0300          __size_of_setBit 0016            convertToBit@i 0001  
                __ptext0 12D6                  __ptext1 15D0                  __ptext2 13F8  
                __ptext3 0B72                  __ptext4 0890                  __ptext5 10E4  
                __ptext6 1564                  __ptext7 14AA                  __ptext8 11AA  
                __ptext9 16DA          __size_of_printf 0026          __size_of_strlen 0036  
                _readBit 15F6             __size_of_abs 0040             __size_of_pad 00C6  
             ??_bitClear 0007                  bitSet@b 0006               _pinToIndex 145A  
                _pinMode 030A               ??_clearBit 0007               ??_bitValue 0001  
             ??_bitWrite 000C     end_of_initialization 155A          pinToIndex@F6037 0088  
                fputc@fp 0003            __Lmediumconst 0000                  fputs@fp 000C  
         digitalRead@pin 002A                  setBit@b 0006                  setBit@p 0004  
      __end_of_vfpfcnvrt 0D26                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0056            ??_digitalRead 0028                  strlen@a 0003  
                strlen@s 0001    __size_of_convertToBit 0096             _convertToBit 1240  
            vfpfcnvrt@ap 0044              vfpfcnvrt@fp 0040              vfpfcnvrt@ll 0048  
         __end_of_bitSet 16DA           __end_of_setBit 16C4           __end_of_printf 15F6  
            ?_pinToIndex 0001           __end_of_strlen 159A      start_initialization 152E  
    __end_of_digitalRead 10E4      digitalRead@port_num 002C              __end_of_abs 152E  
            __end_of_pad 11AA              vfprintf@fmt 0052    __end_of_convertToPort 13F8  
               ??_bitSet 0007              __pdataBANK0 0088                 ??_setBit 0007  
               ??_printf 005C                 ??_strlen 0003            __pcstackBANK0 00AC  
             pinMode@pin 002D         ___aodiv@dividend 0001        __size_of_bitClear 0018  
      __size_of_clearBit 0018        __size_of_bitValue 001E        __size_of_bitWrite 0036  
    __size_of_pinToIndex 0050                 ?___aodiv 0001                 ?___aomod 0001  
       ___aodiv@quotient 0013                 ?_bitRead 0001              _digitalRead 1012  
      __size_of_vfprintf 0062              __smallconst 0300                 ?_readBit 0001  
               ?_pinMode 0028                bitClear@b 0006           __size_of_fputc 0096  
         __size_of_fputs 0044           __size_of_putch 0002             bitSet@number 0004  
              clearBit@b 0006                clearBit@p 0004                bitValue@b 0003  
              bitWrite@b 000A                _vfpfcnvrt 0B72                copy_data0 1542  
               __Hrparam 0000               vfprintf@ap 0054                 __Lrparam 0000  
             vfprintf@fp 0050         __size_of___aodiv 0188         __size_of___aomod 0164  
             ?_vfpfcnvrt 0040          ___aodiv@divisor 0009         __size_of_bitRead 0020  
       digitalRead@value 002D          ___aodiv@counter 0011             ??_pinToIndex 0001  
               _bitClear 1696         __size_of_readBit 0026                 _clearBit 167E  
               _bitValue 1660         __size_of_pinMode 0586                 _dtoa$680 002E  
               _bitWrite 159A                 __ptext10 14EE                 __ptext11 0EAE  
               __ptext20 1240                 __ptext12 0D26                 __ptext21 159A  
               __ptext13 030A                 __ptext22 16C4                 __ptext14 16AE  
               __ptext23 1696                 __ptext15 167E                 __ptext24 1660  
               __ptext16 1012                 __ptext25 1640                 __ptext17 15F6  
               __ptext18 145A                 __ptext19 136A           convertToPort@i 0001  
          __size_of_main 0094            __size_of_dtoa 02E2                 bitRead@b 0001  
     __end_of_pinToIndex 14AA                 isa$xinst 000000                 _vfprintf 13F8  
              printf@fmt 0058                 main@argc 00AC                 main@argv 00AE  
       ___aomod@dividend 0001                 readBit@b 0003                 readBit@p 0001  
            bitWrite@val 000B          digitalRead@port 002B                 printf@ap 005C  
        ___aomod@divisor 0009              ??_vfpfcnvrt 0046          ___aomod@counter 0011  
           ?_digitalRead 0001             ___aodiv@sign 0012   __size_of_convertToPort 008E  
           ___aomod@sign 0012  
