

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Apr 26 15:07:30 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,inline
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 05/05/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F44K22 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataBANK0
    73  0011B2                     __pidataBANK0:
    74                           	callstack 0
    75                           
    76                           ;initializer for pinToPort@F6023
    77  0011B2  02                 	db	2
    78  0011B3  03                 	db	3
    79  0011B4  04                 	db	4
    80  0011B5  05                 	db	5
    81  0011B6  06                 	db	6
    82  0011B7  07                 	db	7
    83  0011B8  0E                 	db	14
    84  0011B9  0D                 	db	13
    85  0011BA  21                 	db	33
    86  0011BB  22                 	db	34
    87  0011BC  23                 	db	35
    88  0011BD  24                 	db	36
    89  0011BE  25                 	db	37
    90  0011BF  26                 	db	38
    91  0011C0  27                 	db	39
    92  0011C1  28                 	db	40
    93  0011C2  0F                 	db	15
    94  0011C3  10                 	db	16
    95  0011C4  11                 	db	17
    96  0011C5  12                 	db	18
    97  0011C6  17                 	db	23
    98  0011C7  18                 	db	24
    99  0011C8  19                 	db	25
   100  0011C9  1A                 	db	26
   101  0011CA  13                 	db	19
   102  0011CB  14                 	db	20
   103  0011CC  15                 	db	21
   104  0011CD  16                 	db	22
   105  0011CE  1B                 	db	27
   106  0011CF  1C                 	db	28
   107  0011D0  1D                 	db	29
   108  0011D1  1E                 	db	30
   109  0011D2  08                 	db	8
   110  0011D3  09                 	db	9
   111  0011D4  0A                 	db	10
   112  0011D5  01                 	db	1
   113  0000                     _ANSELE	set	3900
   114  0000                     _ANSELD	set	3899
   115  0000                     _ANSELC	set	3898
   116  0000                     _ANSELB	set	3897
   117  0000                     _ANSELA	set	3896
   118  0000                     _TRISE	set	3990
   119  0000                     _TRISD	set	3989
   120  0000                     _TRISC	set	3988
   121  0000                     _TRISB	set	3987
   122  0000                     _TRISA	set	3986
   123                           
   124                           	psect	smallconst
   125  000300                     __psmallconst:
   126                           	callstack 0
   127  000300  00                 	db	0
   128  000301                     STR_1:
   129  000301  25                 	db	37
   130  000302  64                 	db	100	;'d'
   131  000303  0A                 	db	10
   132  000304  00                 	db	0
   133  000305                     STR_3:
   134  000305  25                 	db	37
   135  000306  64                 	db	100	;'d'
   136  000307  00                 	db	0
   137  000308  00                 	db	0	; dummy byte at the end
   138  0000                     
   139                           ; #config settings
   140                           
   141                           	psect	cinit
   142  0010EA                     __pcinit:
   143                           	callstack 0
   144  0010EA                     start_initialization:
   145                           	callstack 0
   146  0010EA                     __initialization:
   147                           	callstack 0
   148                           
   149                           ; Initialize objects allocated to BANK0 (36 bytes)
   150                           ; load TBLPTR registers with __pidataBANK0
   151  0010EA  0EB2               	movlw	low __pidataBANK0
   152  0010EC  6EF6               	movwf	tblptrl,c
   153  0010EE  0E11               	movlw	high __pidataBANK0
   154  0010F0  6EF7               	movwf	tblptrh,c
   155  0010F2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   156  0010F4  6EF8               	movwf	tblptru,c
   157  0010F6  EE00  F08A         	lfsr	0,__pdataBANK0
   158  0010FA  EE10 F024          	lfsr	1,36
   159  0010FE                     copy_data0:
   160  0010FE  0009               	tblrd		*+
   161  001100  CFF5 FFEE          	movff	tablat,postinc0
   162  001104  50E5               	movf	postdec1,w,c
   163  001106  50E1               	movf	fsr1l,w,c
   164  001108  E1FA               	bnz	copy_data0
   165                           
   166                           ; Clear objects allocated to BANK0 (42 bytes)
   167  00110A  EE00  F060         	lfsr	0,__pbssBANK0
   168  00110E  0E2A               	movlw	42
   169  001110                     clear_0:
   170  001110  6AEE               	clrf	postinc0,c
   171  001112  06E8               	decf	wreg,f,c
   172  001114  E1FD               	bnz	clear_0
   173  001116                     end_of_initialization:
   174                           	callstack 0
   175  001116                     __end_of__initialization:
   176                           	callstack 0
   177  001116  0E00               	movlw	low (__Lmediumconst shr (0+16))
   178  001118  6EF8               	movwf	tblptru,c
   179  00111A  0100               	movlb	0
   180  00111C  EFC5  F007         	goto	_main	;jump to C main() function
   181                           
   182                           	psect	bssBANK0
   183  000060                     __pbssBANK0:
   184                           	callstack 0
   185  000060                     _nout:
   186                           	callstack 0
   187  000060                     	ds	2
   188  000062                     _width:
   189                           	callstack 0
   190  000062                     	ds	2
   191  000064                     _prec:
   192                           	callstack 0
   193  000064                     	ds	2
   194  000066                     _flags:
   195                           	callstack 0
   196  000066                     	ds	2
   197  000068                     _bit_val:
   198                           	callstack 0
   199  000068                     	ds	1
   200  000069                     _port:
   201                           	callstack 0
   202  000069                     	ds	1
   203  00006A                     _dbuf:
   204                           	callstack 0
   205  00006A                     	ds	32
   206                           
   207                           	psect	dataBANK0
   208  00008A                     __pdataBANK0:
   209                           	callstack 0
   210  00008A                     pinToPort@F6023:
   211                           	callstack 0
   212  00008A                     	ds	36
   213                           
   214                           	psect	cstackBANK0
   215  0000AE                     __pcstackBANK0:
   216                           	callstack 0
   217  0000AE                     
   218                           ; 2 bytes @ 0x0
   219  0000AE                     	ds	2
   220  0000B0                     
   221                           ; 3 bytes @ 0x2
   222  0000B0                     	ds	3
   223                           
   224                           	psect	cstackCOMRAM
   225  000001                     __pcstackCOMRAM:
   226                           	callstack 0
   227  000001                     ??_bitValue:
   228  000001                     ?_strlen:
   229                           	callstack 0
   230  000001                     ?___aodiv:
   231                           	callstack 0
   232  000001                     ?___aomod:
   233                           	callstack 0
   234  000001                     bitRead@b:
   235                           	callstack 0
   236  000001                     fputc@c:
   237                           	callstack 0
   238  000001                     strlen@s:
   239                           	callstack 0
   240  000001                     ___aodiv@dividend:
   241                           	callstack 0
   242  000001                     ___aomod@dividend:
   243                           	callstack 0
   244                           
   245                           ; 8 bytes @ 0x0
   246  000001                     	ds	1
   247  000002                     ??_bitRead:
   248  000002                     pinToPort@pins:
   249                           	callstack 0
   250                           
   251                           ; 36 bytes @ 0x1
   252  000002                     	ds	1
   253  000003                     bitValue@b:
   254                           	callstack 0
   255  000003                     fputc@fp:
   256                           	callstack 0
   257  000003                     strlen@a:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x2
   261  000003                     	ds	1
   262  000004                     bitRead@number:
   263                           	callstack 0
   264  000004                     bitClear@number:
   265                           	callstack 0
   266  000004                     bitSet@number:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x3
   270  000004                     	ds	1
   271  000005                     ??_fputc:
   272                           
   273                           ; 1 bytes @ 0x4
   274  000005                     	ds	1
   275  000006                     bitClear@b:
   276                           	callstack 0
   277  000006                     bitSet@b:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x5
   281  000006                     	ds	1
   282  000007                     ??_bitClear:
   283  000007                     ??_bitSet:
   284                           
   285                           ; 1 bytes @ 0x6
   286  000007                     	ds	1
   287  000008                     bitWrite@number:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x7
   291  000008                     	ds	1
   292  000009                     ___aodiv@divisor:
   293                           	callstack 0
   294  000009                     ___aomod@divisor:
   295                           	callstack 0
   296                           
   297                           ; 8 bytes @ 0x8
   298  000009                     	ds	1
   299  00000A                     bitWrite@b:
   300                           	callstack 0
   301  00000A                     fputs@s:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x9
   305  00000A                     	ds	1
   306  00000B                     bitWrite@val:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0xA
   310  00000B                     	ds	1
   311  00000C                     fputs@fp:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0xB
   315  00000C                     	ds	2
   316  00000E                     fputs@c:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0xD
   320  00000E                     	ds	1
   321  00000F                     fputs@i:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0xE
   325  00000F                     	ds	2
   326  000011                     ?_pad:
   327                           	callstack 0
   328  000011                     ___aodiv@counter:
   329                           	callstack 0
   330  000011                     ___aomod@counter:
   331                           	callstack 0
   332  000011                     pad@fp:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x10
   336  000011                     	ds	1
   337  000012                     ___aodiv@sign:
   338                           	callstack 0
   339  000012                     ___aomod@sign:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x11
   343  000012                     	ds	1
   344  000013                     ?_abs:
   345                           	callstack 0
   346  000013                     pad@buf:
   347                           	callstack 0
   348  000013                     abs@a:
   349                           	callstack 0
   350  000013                     ___aodiv@quotient:
   351                           	callstack 0
   352                           
   353                           ; 8 bytes @ 0x12
   354  000013                     	ds	2
   355  000015                     ??_abs:
   356  000015                     pad@p:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x14
   360  000015                     	ds	2
   361  000017                     ??_pad:
   362                           
   363                           ; 1 bytes @ 0x16
   364  000017                     	ds	1
   365  000018                     pad@i:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x17
   369  000018                     	ds	2
   370  00001A                     pad@w:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x19
   374  00001A                     	ds	2
   375  00001C                     ?_dtoa:
   376                           	callstack 0
   377  00001C                     dtoa@fp:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x1B
   381  00001C                     	ds	2
   382  00001E                     dtoa@d:
   383                           	callstack 0
   384                           
   385                           ; 8 bytes @ 0x1D
   386  00001E                     	ds	8
   387  000026                     ??_dtoa:
   388  000026                     pinToPort@pin:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0x25
   392  000026                     	ds	1
   393  000027                     pinToPort@i:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x26
   397  000027                     	ds	1
   398  000028                     pinMode@mode:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x27
   402  000028                     	ds	1
   403  000029                     ??_pinMode:
   404                           
   405                           ; 1 bytes @ 0x28
   406  000029                     	ds	2
   407  00002B                     pinMode@pin:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0x2A
   411  00002B                     	ds	3
   412  00002E                     _dtoa$625:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x2D
   416  00002E                     	ds	2
   417  000030                     dtoa@p:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x2F
   421  000030                     	ds	2
   422  000032                     dtoa@w:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x31
   426  000032                     	ds	2
   427  000034                     dtoa@s:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x33
   431  000034                     	ds	2
   432  000036                     dtoa@n:
   433                           	callstack 0
   434                           
   435                           ; 8 bytes @ 0x35
   436  000036                     	ds	8
   437  00003E                     dtoa@i:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x3D
   441  00003E                     	ds	2
   442  000040                     ?_vfpfcnvrt:
   443                           	callstack 0
   444  000040                     vfpfcnvrt@fp:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x3F
   448  000040                     	ds	2
   449  000042                     vfpfcnvrt@fmt:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x41
   453  000042                     	ds	2
   454  000044                     vfpfcnvrt@ap:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x43
   458  000044                     	ds	2
   459  000046                     ??_vfpfcnvrt:
   460                           
   461                           ; 1 bytes @ 0x45
   462  000046                     	ds	2
   463  000048                     vfpfcnvrt@ll:
   464                           	callstack 0
   465                           
   466                           ; 8 bytes @ 0x47
   467  000048                     	ds	8
   468  000050                     ?_vfprintf:
   469                           	callstack 0
   470  000050                     vfprintf@fp:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x4F
   474  000050                     	ds	2
   475  000052                     vfprintf@fmt:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x51
   479  000052                     	ds	2
   480  000054                     vfprintf@ap:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x53
   484  000054                     	ds	2
   485  000056                     vfprintf@cfmt:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x55
   489  000056                     	ds	2
   490  000058                     ?_printf:
   491                           	callstack 0
   492  000058                     printf@fmt:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x57
   496  000058                     	ds	4
   497  00005C                     printf@ap:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x5B
   501  00005C                     	ds	2
   502  00005E                     ??_main:
   503                           
   504                           ; 1 bytes @ 0x5D
   505  00005E                     	ds	1
   506  00005F                     main@a:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x5E
   510  00005F                     	ds	1
   511                           
   512 ;;
   513 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   514 ;;
   515 ;; *************** function _main *****************
   516 ;; Defined at:
   517 ;;		line 18 in file "fun.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;  argc            2    0[BANK0 ] int 
   520 ;;  argv            3    2[BANK0 ] PTR PTR unsigned char 
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  a               1   94[COMRAM] unsigned char 
   523 ;; Return value:  Size  Location     Type
   524 ;;                  2    0[BANK0 ] int 
   525 ;; Registers used:
   526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   532 ;;      Params:         0       5       0       0
   533 ;;      Locals:         1       0       0       0
   534 ;;      Temps:          1       0       0       0
   535 ;;      Totals:         2       5       0       0
   536 ;;Total ram usage:        7 bytes
   537 ;; Hardware stack levels required when called: 8
   538 ;; This function calls:
   539 ;;		_bitRead
   540 ;;		_bitValue
   541 ;;		_bitWrite
   542 ;;		_pinMode
   543 ;;		_printf
   544 ;; This function is called by:
   545 ;;		Startup code after reset
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text0
   550  000F8A                     __ptext0:
   551                           	callstack 0
   552  000F8A                     _main:
   553                           	callstack 23
   554  000F8A                     
   555                           ;fun.c: 20:     printf("%d\n", bitValue(5));
   556  000F8A  0E01               	movlw	low STR_1
   557  000F8C  6E58               	movwf	printf@fmt^0,c
   558  000F8E  0E03               	movlw	high STR_1
   559  000F90  6E59               	movwf	(printf@fmt+1)^0,c
   560  000F92  0E05               	movlw	5
   561  000F94  ECFB  F008         	call	_bitValue
   562  000F98  6E5E               	movwf	??_main^0,c
   563  000F9A  505E               	movf	??_main^0,w,c
   564  000F9C  6E5A               	movwf	(?_printf+2)^0,c
   565  000F9E  6A5B               	clrf	(?_printf+3)^0,c
   566  000FA0  ECC6  F008         	call	_printf	;wreg free
   567  000FA4                     
   568                           ;fun.c: 21:     uint8_t a = 14;
   569  000FA4  0E0E               	movlw	14
   570  000FA6  6E5F               	movwf	main@a^0,c
   571  000FA8                     
   572                           ;fun.c: 22:     bitWrite(&a, 0, 1);
   573  000FA8  0E5F               	movlw	low main@a
   574  000FAA  6E08               	movwf	bitWrite@number^0,c
   575  000FAC  0E00               	movlw	high main@a
   576  000FAE  6E09               	movwf	(bitWrite@number+1)^0,c
   577  000FB0  0E00               	movlw	0
   578  000FB2  6E0A               	movwf	bitWrite@b^0,c
   579  000FB4  0E01               	movlw	1
   580  000FB6  6E0B               	movwf	bitWrite@val^0,c
   581  000FB8  ECAB  F008         	call	_bitWrite	;wreg free
   582  000FBC                     
   583                           ;fun.c: 23:     printf("%d\n",a);
   584  000FBC  0E01               	movlw	low STR_1
   585  000FBE  6E58               	movwf	printf@fmt^0,c
   586  000FC0  0E03               	movlw	high STR_1
   587  000FC2  6E59               	movwf	(printf@fmt+1)^0,c
   588  000FC4  C05F  F05A         	movff	main@a,?_printf+2
   589  000FC8  6A5B               	clrf	(?_printf+3)^0,c
   590  000FCA  ECC6  F008         	call	_printf	;wreg free
   591  000FCE                     
   592                           ;fun.c: 24:     printf("%d", bitRead(8,3));
   593  000FCE  0E05               	movlw	low STR_3
   594  000FD0  6E58               	movwf	printf@fmt^0,c
   595  000FD2  0E03               	movlw	high STR_3
   596  000FD4  6E59               	movwf	(printf@fmt+1)^0,c
   597  000FD6  0E03               	movlw	3
   598  000FD8  6E01               	movwf	bitRead@b^0,c
   599  000FDA  0E08               	movlw	8
   600  000FDC  ECEB  F008         	call	_bitRead
   601  000FE0  6E5E               	movwf	??_main^0,c
   602  000FE2  505E               	movf	??_main^0,w,c
   603  000FE4  6E5A               	movwf	(?_printf+2)^0,c
   604  000FE6  6A5B               	clrf	(?_printf+3)^0,c
   605  000FE8  ECC6  F008         	call	_printf	;wreg free
   606  000FEC                     
   607                           ;fun.c: 26:     pinMode(33, OUTPUT);
   608  000FEC  0E02               	movlw	2
   609  000FEE  6E28               	movwf	pinMode@mode^0,c
   610  000FF0  0E21               	movlw	33
   611  000FF2  ECF6  F002         	call	_pinMode
   612  000FF6                     
   613                           ;fun.c: 27:     pinMode(15, INPUT);
   614  000FF6  0E01               	movlw	1
   615  000FF8  6E28               	movwf	pinMode@mode^0,c
   616  000FFA  0E0F               	movlw	15
   617  000FFC  ECF6  F002         	call	_pinMode
   618  001000  EF00  F000         	goto	start
   619  001004                     __end_of_main:
   620                           	callstack 0
   621                           
   622 ;; *************** function _printf *****************
   623 ;; Defined at:
   624 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
   627 ;;		 -> STR_3(3), STR_2(4), STR_1(4), 
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  ap              2   91[COMRAM] PTR void [1]
   630 ;;		 -> ?_printf(2), 
   631 ;;  ret             2    0        int 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  2   87[COMRAM] int 
   634 ;; Registers used:
   635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   641 ;;      Params:         4       0       0       0
   642 ;;      Locals:         2       0       0       0
   643 ;;      Temps:          0       0       0       0
   644 ;;      Totals:         6       0       0       0
   645 ;;Total ram usage:        6 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 7
   648 ;; This function calls:
   649 ;;		_vfprintf
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text1
   656  00118C                     __ptext1:
   657                           	callstack 0
   658  00118C                     _printf:
   659                           	callstack 23
   660  00118C  0E5A               	movlw	low (?_printf+2)
   661  00118E  6E5C               	movwf	printf@ap^0,c
   662  001190  0E00               	movlw	high (?_printf+2)
   663  001192  6E5D               	movwf	(printf@ap+1)^0,c
   664  001194  0E00               	movlw	0
   665  001196  6E50               	movwf	vfprintf@fp^0,c
   666  001198  0E00               	movlw	0
   667  00119A  6E51               	movwf	(vfprintf@fp+1)^0,c
   668  00119C  C058  F052         	movff	printf@fmt,vfprintf@fmt
   669  0011A0  C059  F053         	movff	printf@fmt+1,vfprintf@fmt+1
   670  0011A4  0E5C               	movlw	low printf@ap
   671  0011A6  6E54               	movwf	vfprintf@ap^0,c
   672  0011A8  0E00               	movlw	high printf@ap
   673  0011AA  6E55               	movwf	(vfprintf@ap+1)^0,c
   674  0011AC  EC02  F008         	call	_vfprintf	;wreg free
   675  0011B0  0012               	return		;funcret
   676  0011B2                     __end_of_printf:
   677                           	callstack 0
   678                           
   679 ;; *************** function _vfprintf *****************
   680 ;; Defined at:
   681 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   684 ;;		 -> NULL(0), 
   685 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   686 ;;		 -> STR_3(3), STR_2(4), STR_1(4), 
   687 ;;  ap              2   83[COMRAM] PTR PTR void 
   688 ;;		 -> printf@ap(2), 
   689 ;; Auto vars:     Size  Location     Type
   690 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   691 ;;		 -> STR_3(3), STR_2(4), STR_1(4), 
   692 ;; Return value:  Size  Location     Type
   693 ;;                  2   79[COMRAM] int 
   694 ;; Registers used:
   695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   701 ;;      Params:         6       0       0       0
   702 ;;      Locals:         2       0       0       0
   703 ;;      Temps:          0       0       0       0
   704 ;;      Totals:         8       0       0       0
   705 ;;Total ram usage:        8 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 6
   708 ;; This function calls:
   709 ;;		_vfpfcnvrt
   710 ;; This function is called by:
   711 ;;		_printf
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text2
   716  001004                     __ptext2:
   717                           	callstack 0
   718  001004                     _vfprintf:
   719                           	callstack 23
   720  001004                     
   721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   722  001004  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
   723  001008  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   724  00100C                     
   725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   726  00100C  0E00               	movlw	0
   727  00100E  0100               	movlb	0	; () banked
   728  001010  6F61               	movwf	(_nout+1)& (0+255),b
   729  001012  0E00               	movlw	0
   730  001014  6F60               	movwf	_nout& (0+255),b
   731                           
   732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   733  001016  EF20  F008         	goto	l1744
   734  00101A                     l1742:
   735                           
   736                           ; BSR set to: 0
   737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   738  00101A  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
   739  00101E  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   740  001022  0E56               	movlw	low vfprintf@cfmt
   741  001024  6E42               	movwf	vfpfcnvrt@fmt^0,c
   742  001026  0E00               	movlw	high vfprintf@cfmt
   743  001028  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
   744  00102A  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
   745  00102E  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   746  001032  EC43  F004         	call	_vfpfcnvrt	;wreg free
   747  001036  5040               	movf	?_vfpfcnvrt^0,w,c
   748  001038  0100               	movlb	0	; () banked
   749  00103A  2760               	addwf	_nout& (0+255),f,b
   750  00103C  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
   751  00103E  2361               	addwfc	(_nout+1)& (0+255),f,b
   752  001040                     l1744:
   753                           
   754                           ; BSR set to: 0
   755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   756  001040  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
   757  001044  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   758  001048                     	if	0	;tblptru may be non-zero
   759  001048                     	endif
   760  001048                     	if	0	;tblptru may be non-zero
   761  001048                     	endif
   762  001048  0008               	tblrd		*
   763  00104A  50F5               	movf	tablat,w,c
   764  00104C  0900               	iorlw	0
   765  00104E  A4D8               	btfss	status,2,c
   766  001050  EF2C  F008         	goto	u1231
   767  001054  EF2E  F008         	goto	u1230
   768  001058                     u1231:
   769  001058  EF0D  F008         	goto	l1742
   770  00105C                     u1230:
   771  00105C                     
   772                           ; BSR set to: 0
   773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   774  00105C  C060  F050         	movff	_nout,?_vfprintf
   775  001060  C061  F051         	movff	_nout+1,?_vfprintf+1
   776  001064                     
   777                           ; BSR set to: 0
   778  001064  0012               	return		;funcret
   779  001066                     __end_of_vfprintf:
   780                           	callstack 0
   781                           
   782 ;; *************** function _vfpfcnvrt *****************
   783 ;; Defined at:
   784 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
   787 ;;		 -> NULL(0), 
   788 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
   789 ;;		 -> vfprintf@cfmt(2), 
   790 ;;  ap              2   67[COMRAM] PTR PTR void 
   791 ;;		 -> printf@ap(2), 
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  ll              8   71[COMRAM] long long 
   794 ;;  llu             8    0        unsigned long long 
   795 ;;  f               4    0        unsigned long long 
   796 ;;  vp              3    0        PTR void 
   797 ;;  ct              3    0        unsigned char [3]
   798 ;;  cp              3    0        PTR unsigned char 
   799 ;;  i               2    0        int 
   800 ;;  done            2    0        int 
   801 ;;  c               1    0        unsigned char 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  2   63[COMRAM] int 
   804 ;; Registers used:
   805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   811 ;;      Params:         6       0       0       0
   812 ;;      Locals:         8       0       0       0
   813 ;;      Temps:          2       0       0       0
   814 ;;      Totals:        16       0       0       0
   815 ;;Total ram usage:       16 bytes
   816 ;; Hardware stack levels used: 1
   817 ;; Hardware stack levels required when called: 5
   818 ;; This function calls:
   819 ;;		_dtoa
   820 ;;		_fputc
   821 ;; This function is called by:
   822 ;;		_vfprintf
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text3
   827  000886                     __ptext3:
   828                           	callstack 0
   829  000886                     _vfpfcnvrt:
   830                           	callstack 23
   831  000886                     
   832                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   833  000886  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   834  00088A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   835  00088E  CFDE FFF6          	movff	postinc2,tblptrl
   836  000892  CFDD FFF7          	movff	postdec2,tblptrh
   837  000896                     	if	0	;tblptru may be non-zero
   838  000896                     	endif
   839  000896                     	if	0	;tblptru may be non-zero
   840  000896                     	endif
   841  000896  0008               	tblrd		*
   842  000898  50F5               	movf	tablat,w,c
   843  00089A  0A25               	xorlw	37
   844  00089C  A4D8               	btfss	status,2,c
   845  00089E  EF53  F004         	goto	u1091
   846  0008A2  EF55  F004         	goto	u1090
   847  0008A6                     u1091:
   848  0008A6  EF01  F005         	goto	l1670
   849  0008AA                     u1090:
   850  0008AA                     
   851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
   852  0008AA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   853  0008AE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   854  0008B2  2ADE               	incf	postinc2,f,c
   855  0008B4  0E00               	movlw	0
   856  0008B6  22DD               	addwfc	postdec2,f,c
   857  0008B8                     
   858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
   859  0008B8  0E00               	movlw	0
   860  0008BA  0100               	movlb	0	; () banked
   861  0008BC  6F63               	movwf	(_width+1)& (0+255),b
   862  0008BE  0E00               	movlw	0
   863  0008C0  6F62               	movwf	_width& (0+255),b
   864  0008C2  C062  F066         	movff	_width,_flags
   865  0008C6  C063  F067         	movff	_width+1,_flags+1
   866  0008CA                     
   867                           ; BSR set to: 0
   868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
   869  0008CA  6964               	setf	_prec& (0+255),b
   870  0008CC  6965               	setf	(_prec+1)& (0+255),b
   871  0008CE                     
   872                           ; BSR set to: 0
   873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
   874  0008CE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   875  0008D2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   876  0008D6  CFDE FFF6          	movff	postinc2,tblptrl
   877  0008DA  CFDD FFF7          	movff	postdec2,tblptrh
   878  0008DE                     	if	0	;tblptru may be non-zero
   879  0008DE                     	endif
   880  0008DE                     	if	0	;tblptru may be non-zero
   881  0008DE                     	endif
   882  0008DE  0008               	tblrd		*
   883  0008E0  50F5               	movf	tablat,w,c
   884  0008E2  0A64               	xorlw	100
   885  0008E4  B4D8               	btfsc	status,2,c
   886  0008E6  EF77  F004         	goto	u1101
   887  0008EA  EF79  F004         	goto	u1100
   888  0008EE                     u1101:
   889  0008EE  EF8B  F004         	goto	l1648
   890  0008F2                     u1100:
   891  0008F2                     
   892                           ; BSR set to: 0
   893  0008F2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   894  0008F6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   895  0008FA  CFDE FFF6          	movff	postinc2,tblptrl
   896  0008FE  CFDD FFF7          	movff	postdec2,tblptrh
   897  000902                     	if	0	;tblptru may be non-zero
   898  000902                     	endif
   899  000902                     	if	0	;tblptru may be non-zero
   900  000902                     	endif
   901  000902  0008               	tblrd		*
   902  000904  50F5               	movf	tablat,w,c
   903  000906  0A69               	xorlw	105
   904  000908  A4D8               	btfss	status,2,c
   905  00090A  EF89  F004         	goto	u1111
   906  00090E  EF8B  F004         	goto	u1110
   907  000912                     u1111:
   908  000912  EFCB  F004         	goto	l1654
   909  000916                     u1110:
   910  000916                     l1648:
   911                           
   912                           ; BSR set to: 0
   913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
   914  000916  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   915  00091A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   916  00091E  2ADE               	incf	postinc2,f,c
   917  000920  0E00               	movlw	0
   918  000922  22DD               	addwfc	postdec2,f,c
   919                           
   920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
   921  000924  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   922  000928  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   923  00092C  CFDF F046          	movff	indf2,??_vfpfcnvrt
   924  000930  0E02               	movlw	2
   925  000932  26DE               	addwf	postinc2,f,c
   926  000934  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
   927  000938  0E00               	movlw	0
   928  00093A  22DD               	addwfc	postdec2,f,c
   929  00093C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
   930  000940  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
   931  000944  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
   932  000948  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
   933  00094C  0E00               	movlw	0
   934  00094E  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
   935  000950  0EFF               	movlw	-1
   936  000952  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
   937  000954  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
   938  000956  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
   939  000958  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
   940  00095A  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
   941  00095C  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
   942  00095E                     
   943                           ; BSR set to: 0
   944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
   945  00095E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
   946  000962  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
   947  000966  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
   948  00096A  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
   949  00096E  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
   950  000972  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
   951  000976  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
   952  00097A  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
   953  00097E  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
   954  000982  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
   955  000986  EC85  F001         	call	_dtoa	;wreg free
   956  00098A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
   957  00098E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
   958  000992  EF1C  F005         	goto	l863
   959  000996                     l1654:
   960                           
   961                           ; BSR set to: 0
   962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
   963  000996  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   964  00099A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   965  00099E  CFDE FFF6          	movff	postinc2,tblptrl
   966  0009A2  CFDD FFF7          	movff	postdec2,tblptrh
   967  0009A6                     	if	0	;tblptru may be non-zero
   968  0009A6                     	endif
   969  0009A6                     	if	0	;tblptru may be non-zero
   970  0009A6                     	endif
   971  0009A6  0008               	tblrd		*
   972  0009A8  50F5               	movf	tablat,w,c
   973  0009AA  0A25               	xorlw	37
   974  0009AC  A4D8               	btfss	status,2,c
   975  0009AE  EFDB  F004         	goto	u1121
   976  0009B2  EFDD  F004         	goto	u1120
   977  0009B6                     u1121:
   978  0009B6  EFF4  F004         	goto	l1664
   979  0009BA                     u1120:
   980  0009BA                     
   981                           ; BSR set to: 0
   982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
   983  0009BA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   984  0009BE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   985  0009C2  2ADE               	incf	postinc2,f,c
   986  0009C4  0E00               	movlw	0
   987  0009C6  22DD               	addwfc	postdec2,f,c
   988  0009C8                     
   989                           ; BSR set to: 0
   990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
   991  0009C8  0E00               	movlw	0
   992  0009CA  6E02               	movwf	(fputc@c+1)^0,c
   993  0009CC  0E25               	movlw	37
   994  0009CE  6E01               	movwf	fputc@c^0,c
   995  0009D0  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
   996  0009D4  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   997  0009D8  EC7A  F007         	call	_fputc	;wreg free
   998  0009DC                     l1660:
   999                           
  1000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1001  0009DC  0E00               	movlw	0
  1002  0009DE  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1003  0009E0  0E01               	movlw	1
  1004  0009E2  6E40               	movwf	?_vfpfcnvrt^0,c
  1005  0009E4  EF1C  F005         	goto	l863
  1006  0009E8                     l1664:
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1010  0009E8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1011  0009EC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1012  0009F0  2ADE               	incf	postinc2,f,c
  1013  0009F2  0E00               	movlw	0
  1014  0009F4  22DD               	addwfc	postdec2,f,c
  1015  0009F6                     
  1016                           ; BSR set to: 0
  1017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1018  0009F6  0E00               	movlw	0
  1019  0009F8  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1020  0009FA  0E00               	movlw	0
  1021  0009FC  6E40               	movwf	?_vfpfcnvrt^0,c
  1022  0009FE  EF1C  F005         	goto	l863
  1023  000A02                     l1670:
  1024                           
  1025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1026  000A02  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1027  000A06  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1028  000A0A  CFDE FFF6          	movff	postinc2,tblptrl
  1029  000A0E  CFDD FFF7          	movff	postdec2,tblptrh
  1030  000A12                     	if	0	;tblptru may be non-zero
  1031  000A12                     	endif
  1032  000A12                     	if	0	;tblptru may be non-zero
  1033  000A12                     	endif
  1034  000A12  0008               	tblrd		*
  1035  000A14  50F5               	movf	tablat,w,c
  1036  000A16  6E01               	movwf	fputc@c^0,c
  1037  000A18  6A02               	clrf	(fputc@c+1)^0,c
  1038  000A1A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1039  000A1E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1040  000A22  EC7A  F007         	call	_fputc	;wreg free
  1041  000A26                     
  1042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1043  000A26  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1044  000A2A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1045  000A2E  2ADE               	incf	postinc2,f,c
  1046  000A30  0E00               	movlw	0
  1047  000A32  22DD               	addwfc	postdec2,f,c
  1048  000A34  EFEE  F004         	goto	l1660
  1049  000A38                     l863:
  1050  000A38  0012               	return		;funcret
  1051  000A3A                     __end_of_vfpfcnvrt:
  1052                           	callstack 0
  1053                           
  1054 ;; *************** function _dtoa *****************
  1055 ;; Defined at:
  1056 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1059 ;;		 -> NULL(0), 
  1060 ;;  d               8   29[COMRAM] long long 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  n               8   53[COMRAM] long long 
  1063 ;;  i               2   61[COMRAM] int 
  1064 ;;  s               2   51[COMRAM] int 
  1065 ;;  w               2   49[COMRAM] int 
  1066 ;;  p               2   47[COMRAM] int 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  2   27[COMRAM] int 
  1069 ;; Registers used:
  1070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1076 ;;      Params:        10       0       0       0
  1077 ;;      Locals:        18       0       0       0
  1078 ;;      Temps:          8       0       0       0
  1079 ;;      Totals:        36       0       0       0
  1080 ;;Total ram usage:       36 bytes
  1081 ;; Hardware stack levels used: 1
  1082 ;; Hardware stack levels required when called: 4
  1083 ;; This function calls:
  1084 ;;		___aodiv
  1085 ;;		___aomod
  1086 ;;		_abs
  1087 ;;		_pad
  1088 ;; This function is called by:
  1089 ;;		_vfpfcnvrt
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text4
  1094  00030A                     __ptext4:
  1095                           	callstack 0
  1096  00030A                     _dtoa:
  1097                           	callstack 23
  1098  00030A                     
  1099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1100  00030A  C01E  F036         	movff	dtoa@d,dtoa@n
  1101  00030E  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1102  000312  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1103  000316  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1104  00031A  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1105  00031E  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1106  000322  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1107  000326  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1108  00032A                     
  1109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1110  00032A  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1111  00032C  EF9A  F001         	goto	u931
  1112  000330  EF9D  F001         	goto	u930
  1113  000334                     u931:
  1114  000334  0E01               	movlw	1
  1115  000336  EF9E  F001         	goto	u940
  1116  00033A                     u930:
  1117  00033A  0E00               	movlw	0
  1118  00033C                     u940:
  1119  00033C  6E34               	movwf	dtoa@s^0,c
  1120  00033E  6A35               	clrf	(dtoa@s+1)^0,c
  1121                           
  1122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1123  000340  5034               	movf	dtoa@s^0,w,c
  1124  000342  1035               	iorwf	(dtoa@s+1)^0,w,c
  1125  000344  B4D8               	btfsc	status,2,c
  1126  000346  EFA7  F001         	goto	u951
  1127  00034A  EFA9  F001         	goto	u950
  1128  00034E                     u951:
  1129  00034E  EFB9  F001         	goto	l1576
  1130  000352                     u950:
  1131  000352                     
  1132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1133  000352  1E3D               	comf	(dtoa@n+7)^0,f,c
  1134  000354  1E3C               	comf	(dtoa@n+6)^0,f,c
  1135  000356  1E3B               	comf	(dtoa@n+5)^0,f,c
  1136  000358  1E3A               	comf	(dtoa@n+4)^0,f,c
  1137  00035A  1E39               	comf	(dtoa@n+3)^0,f,c
  1138  00035C  1E38               	comf	(dtoa@n+2)^0,f,c
  1139  00035E  1E37               	comf	(dtoa@n+1)^0,f,c
  1140  000360  6C36               	negf	dtoa@n^0,c
  1141  000362  0E00               	movlw	0
  1142  000364  2237               	addwfc	(dtoa@n+1)^0,f,c
  1143  000366  2238               	addwfc	(dtoa@n+2)^0,f,c
  1144  000368  2239               	addwfc	(dtoa@n+3)^0,f,c
  1145  00036A  223A               	addwfc	(dtoa@n+4)^0,f,c
  1146  00036C  223B               	addwfc	(dtoa@n+5)^0,f,c
  1147  00036E  223C               	addwfc	(dtoa@n+6)^0,f,c
  1148  000370  223D               	addwfc	(dtoa@n+7)^0,f,c
  1149  000372                     l1576:
  1150                           
  1151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1152  000372  0100               	movlb	0	; () banked
  1153  000374  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1154  000376  EFBF  F001         	goto	u961
  1155  00037A  EFC1  F001         	goto	u960
  1156  00037E                     u961:
  1157  00037E  EFC2  F001         	goto	l1580
  1158  000382                     u960:
  1159  000382                     
  1160                           ; BSR set to: 0
  1161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1162  000382  9366               	bcf	_flags& (0+255),1,b
  1163  000384                     l1580:
  1164                           
  1165                           ; BSR set to: 0
  1166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1167  000384  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1168  000386  EFCF  F001         	goto	u970
  1169  00038A  5165               	movf	(_prec+1)& (0+255),w,b
  1170  00038C  E106               	bnz	u971
  1171  00038E  0564               	decf	_prec& (0+255),w,b
  1172  000390  B0D8               	btfsc	status,0,c
  1173  000392  EFCD  F001         	goto	u971
  1174  000396  EFCF  F001         	goto	u970
  1175  00039A                     u971:
  1176  00039A  EFD5  F001         	goto	l836
  1177  00039E                     u970:
  1178  00039E                     
  1179                           ; BSR set to: 0
  1180  00039E  0E00               	movlw	0
  1181  0003A0  6E31               	movwf	(dtoa@p+1)^0,c
  1182  0003A2  0E01               	movlw	1
  1183  0003A4  6E30               	movwf	dtoa@p^0,c
  1184  0003A6  EFD9  F001         	goto	l838
  1185  0003AA                     l836:
  1186                           
  1187                           ; BSR set to: 0
  1188  0003AA  C064  F030         	movff	_prec,dtoa@p
  1189  0003AE  C065  F031         	movff	_prec+1,dtoa@p+1
  1190  0003B2                     l838:
  1191                           
  1192                           ; BSR set to: 0
  1193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1194  0003B2  C062  F032         	movff	_width,dtoa@w
  1195  0003B6  C063  F033         	movff	_width+1,dtoa@w+1
  1196  0003BA                     
  1197                           ; BSR set to: 0
  1198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1199  0003BA  5034               	movf	dtoa@s^0,w,c
  1200  0003BC  1035               	iorwf	(dtoa@s+1)^0,w,c
  1201  0003BE  A4D8               	btfss	status,2,c
  1202  0003C0  EFE4  F001         	goto	u981
  1203  0003C4  EFE6  F001         	goto	u980
  1204  0003C8                     u981:
  1205  0003C8  EFED  F001         	goto	l1588
  1206  0003CC                     u980:
  1207  0003CC                     
  1208                           ; BSR set to: 0
  1209  0003CC  A566               	btfss	_flags& (0+255),2,b
  1210  0003CE  EFEB  F001         	goto	u991
  1211  0003D2  EFED  F001         	goto	u990
  1212  0003D6                     u991:
  1213  0003D6  EFF0  F001         	goto	l1590
  1214  0003DA                     u990:
  1215  0003DA                     l1588:
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1219  0003DA  0632               	decf	dtoa@w^0,f,c
  1220  0003DC  A0D8               	btfss	status,0,c
  1221  0003DE  0633               	decf	(dtoa@w+1)^0,f,c
  1222  0003E0                     l1590:
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1226  0003E0  0E00               	movlw	0
  1227  0003E2  6E3F               	movwf	(dtoa@i+1)^0,c
  1228  0003E4  0E1F               	movlw	31
  1229  0003E6  6E3E               	movwf	dtoa@i^0,c
  1230  0003E8                     
  1231                           ; BSR set to: 0
  1232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1233  0003E8  0E00               	movlw	0
  1234  0003EA  6F89               	movwf	(_dbuf+31)& (0+255),b
  1235                           
  1236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1237  0003EC  EF74  F002         	goto	l1604
  1238  0003F0                     l1594:
  1239                           
  1240                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1241  0003F0  063E               	decf	dtoa@i^0,f,c
  1242  0003F2  A0D8               	btfss	status,0,c
  1243  0003F4  063F               	decf	(dtoa@i+1)^0,f,c
  1244  0003F6                     
  1245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1246  0003F6  0E6A               	movlw	low _dbuf
  1247  0003F8  243E               	addwf	dtoa@i^0,w,c
  1248  0003FA  6ED9               	movwf	fsr2l,c
  1249  0003FC  0E00               	movlw	high _dbuf
  1250  0003FE  203F               	addwfc	(dtoa@i+1)^0,w,c
  1251  000400  6EDA               	movwf	fsr2h,c
  1252  000402  C036  F001         	movff	dtoa@n,___aomod@dividend
  1253  000406  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1254  00040A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1255  00040E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1256  000412  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1257  000416  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1258  00041A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1259  00041E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1260  000422  0E0A               	movlw	10
  1261  000424  6E09               	movwf	___aomod@divisor^0,c
  1262  000426  0E00               	movlw	0
  1263  000428  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1264  00042A  0E00               	movlw	0
  1265  00042C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1266  00042E  0E00               	movlw	0
  1267  000430  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1268  000432  0E00               	movlw	0
  1269  000434  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1270  000436  0E00               	movlw	0
  1271  000438  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1272  00043A  0E00               	movlw	0
  1273  00043C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1274  00043E  0E00               	movlw	0
  1275  000440  6E10               	movwf	(___aomod@divisor+7)^0,c
  1276  000442  ECE1  F005         	call	___aomod	;wreg free
  1277  000446  C001  F026         	movff	?___aomod,??_dtoa
  1278  00044A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1279  00044E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1280  000452  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1281  000456  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1282  00045A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1283  00045E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1284  000462  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1285  000466  C026  F013         	movff	??_dtoa,abs@a
  1286  00046A  C028  F014         	movff	??_dtoa+2,abs@a+1
  1287  00046E  EC55  F008         	call	_abs	;wreg free
  1288  000472  5013               	movf	?_abs^0,w,c
  1289  000474  0F30               	addlw	48
  1290  000476  6EDF               	movwf	indf2,c
  1291  000478                     
  1292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  1293  000478  0630               	decf	dtoa@p^0,f,c
  1294  00047A  A0D8               	btfss	status,0,c
  1295  00047C  0631               	decf	(dtoa@p+1)^0,f,c
  1296  00047E                     
  1297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  1298  00047E  0632               	decf	dtoa@w^0,f,c
  1299  000480  A0D8               	btfss	status,0,c
  1300  000482  0633               	decf	(dtoa@w+1)^0,f,c
  1301  000484                     
  1302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1303  000484  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1304  000488  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1305  00048C  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1306  000490  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1307  000494  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1308  000498  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1309  00049C  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1310  0004A0  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1311  0004A4  0E0A               	movlw	10
  1312  0004A6  6E09               	movwf	___aodiv@divisor^0,c
  1313  0004A8  0E00               	movlw	0
  1314  0004AA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1315  0004AC  0E00               	movlw	0
  1316  0004AE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1317  0004B0  0E00               	movlw	0
  1318  0004B2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1319  0004B4  0E00               	movlw	0
  1320  0004B6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1321  0004B8  0E00               	movlw	0
  1322  0004BA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1323  0004BC  0E00               	movlw	0
  1324  0004BE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1325  0004C0  0E00               	movlw	0
  1326  0004C2  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1327  0004C4  EC1D  F005         	call	___aodiv	;wreg free
  1328  0004C8  C001  F036         	movff	?___aodiv,dtoa@n
  1329  0004CC  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1330  0004D0  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1331  0004D4  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1332  0004D8  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1333  0004DC  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1334  0004E0  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1335  0004E4  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1336  0004E8                     l1604:
  1337                           
  1338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1339  0004E8  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1340  0004EA  EF7F  F002         	goto	u1001
  1341  0004EE  503F               	movf	(dtoa@i+1)^0,w,c
  1342  0004F0  E108               	bnz	u1000
  1343  0004F2  043E               	decf	dtoa@i^0,w,c
  1344  0004F4  A0D8               	btfss	status,0,c
  1345  0004F6  EF7F  F002         	goto	u1001
  1346  0004FA  EF81  F002         	goto	u1000
  1347  0004FE                     u1001:
  1348  0004FE  EFB2  F002         	goto	l1614
  1349  000502                     u1000:
  1350  000502  5036               	movf	dtoa@n^0,w,c
  1351  000504  1037               	iorwf	(dtoa@n+1)^0,w,c
  1352  000506  1038               	iorwf	(dtoa@n+2)^0,w,c
  1353  000508  1039               	iorwf	(dtoa@n+3)^0,w,c
  1354  00050A  103A               	iorwf	(dtoa@n+4)^0,w,c
  1355  00050C  103B               	iorwf	(dtoa@n+5)^0,w,c
  1356  00050E  103C               	iorwf	(dtoa@n+6)^0,w,c
  1357  000510  103D               	iorwf	(dtoa@n+7)^0,w,c
  1358  000512  A4D8               	btfss	status,2,c
  1359  000514  EF8E  F002         	goto	u1011
  1360  000518  EF90  F002         	goto	u1010
  1361  00051C                     u1011:
  1362  00051C  EFF8  F001         	goto	l1594
  1363  000520                     u1010:
  1364  000520  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1365  000522  EF9D  F002         	goto	u1020
  1366  000526  5031               	movf	(dtoa@p+1)^0,w,c
  1367  000528  E106               	bnz	u1021
  1368  00052A  0430               	decf	dtoa@p^0,w,c
  1369  00052C  B0D8               	btfsc	status,0,c
  1370  00052E  EF9B  F002         	goto	u1021
  1371  000532  EF9D  F002         	goto	u1020
  1372  000536                     u1021:
  1373  000536  EFF8  F001         	goto	l1594
  1374  00053A                     u1020:
  1375  00053A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1376  00053C  EFA8  F002         	goto	u1031
  1377  000540  5033               	movf	(dtoa@w+1)^0,w,c
  1378  000542  E108               	bnz	u1030
  1379  000544  0432               	decf	dtoa@w^0,w,c
  1380  000546  A0D8               	btfss	status,0,c
  1381  000548  EFA8  F002         	goto	u1031
  1382  00054C  EFAA  F002         	goto	u1030
  1383  000550                     u1031:
  1384  000550  EFB2  F002         	goto	l1614
  1385  000554                     u1030:
  1386  000554  0100               	movlb	0	; () banked
  1387  000556  B366               	btfsc	_flags& (0+255),1,b
  1388  000558  EFB0  F002         	goto	u1041
  1389  00055C  EFB2  F002         	goto	u1040
  1390  000560                     u1041:
  1391  000560  EFF8  F001         	goto	l1594
  1392  000564                     u1040:
  1393  000564                     l1614:
  1394                           
  1395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1396  000564  5034               	movf	dtoa@s^0,w,c
  1397  000566  1035               	iorwf	(dtoa@s+1)^0,w,c
  1398  000568  A4D8               	btfss	status,2,c
  1399  00056A  EFB9  F002         	goto	u1051
  1400  00056E  EFBB  F002         	goto	u1050
  1401  000572                     u1051:
  1402  000572  EFC3  F002         	goto	l1618
  1403  000576                     u1050:
  1404  000576  0100               	movlb	0	; () banked
  1405  000578  A566               	btfss	_flags& (0+255),2,b
  1406  00057A  EFC1  F002         	goto	u1061
  1407  00057E  EFC3  F002         	goto	u1060
  1408  000582                     u1061:
  1409  000582  EFE1  F002         	goto	l1628
  1410  000586                     u1060:
  1411  000586                     l1618:
  1412                           
  1413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  1414  000586  063E               	decf	dtoa@i^0,f,c
  1415  000588  A0D8               	btfss	status,0,c
  1416  00058A  063F               	decf	(dtoa@i+1)^0,f,c
  1417  00058C                     
  1418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1419  00058C  5034               	movf	dtoa@s^0,w,c
  1420  00058E  1035               	iorwf	(dtoa@s+1)^0,w,c
  1421  000590  A4D8               	btfss	status,2,c
  1422  000592  EFCD  F002         	goto	u1071
  1423  000596  EFCF  F002         	goto	u1070
  1424  00059A                     u1071:
  1425  00059A  EFD5  F002         	goto	l1624
  1426  00059E                     u1070:
  1427  00059E  0E00               	movlw	0
  1428  0005A0  6E2F               	movwf	(_dtoa$625+1)^0,c
  1429  0005A2  0E2B               	movlw	43
  1430  0005A4  6E2E               	movwf	_dtoa$625^0,c
  1431  0005A6  EFD9  F002         	goto	l1626
  1432  0005AA                     l1624:
  1433  0005AA  0E00               	movlw	0
  1434  0005AC  6E2F               	movwf	(_dtoa$625+1)^0,c
  1435  0005AE  0E2D               	movlw	45
  1436  0005B0  6E2E               	movwf	_dtoa$625^0,c
  1437  0005B2                     l1626:
  1438  0005B2  0E6A               	movlw	low _dbuf
  1439  0005B4  243E               	addwf	dtoa@i^0,w,c
  1440  0005B6  6ED9               	movwf	fsr2l,c
  1441  0005B8  0E00               	movlw	high _dbuf
  1442  0005BA  203F               	addwfc	(dtoa@i+1)^0,w,c
  1443  0005BC  6EDA               	movwf	fsr2h,c
  1444  0005BE  C02E  FFDF         	movff	_dtoa$625,indf2
  1445  0005C2                     l1628:
  1446                           
  1447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1448  0005C2  C01C  F011         	movff	dtoa@fp,pad@fp
  1449  0005C6  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1450  0005CA  0E6A               	movlw	low _dbuf
  1451  0005CC  243E               	addwf	dtoa@i^0,w,c
  1452  0005CE  6E13               	movwf	pad@buf^0,c
  1453  0005D0  0E00               	movlw	high _dbuf
  1454  0005D2  203F               	addwfc	(dtoa@i+1)^0,w,c
  1455  0005D4  6E14               	movwf	(pad@buf+1)^0,c
  1456  0005D6  C032  F015         	movff	dtoa@w,pad@p
  1457  0005DA  C033  F016         	movff	dtoa@w+1,pad@p+1
  1458  0005DE  EC17  F007         	call	_pad	;wreg free
  1459  0005E2  C011  F01C         	movff	?_pad,?_dtoa
  1460  0005E6  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1461  0005EA  0012               	return		;funcret
  1462  0005EC                     __end_of_dtoa:
  1463                           	callstack 0
  1464                           
  1465 ;; *************** function _pad *****************
  1466 ;; Defined at:
  1467 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1470 ;;		 -> NULL(0), 
  1471 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1472 ;;		 -> dbuf(32), 
  1473 ;;  p               2   20[COMRAM] int 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  w               2   25[COMRAM] int 
  1476 ;;  i               2   23[COMRAM] int 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  2   16[COMRAM] int 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1486 ;;      Params:         6       0       0       0
  1487 ;;      Locals:         4       0       0       0
  1488 ;;      Temps:          1       0       0       0
  1489 ;;      Totals:        11       0       0       0
  1490 ;;Total ram usage:       11 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 3
  1493 ;; This function calls:
  1494 ;;		_fputc
  1495 ;;		_fputs
  1496 ;;		_strlen
  1497 ;; This function is called by:
  1498 ;;		_dtoa
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text5
  1503  000E2E                     __ptext5:
  1504                           	callstack 0
  1505  000E2E                     _pad:
  1506                           	callstack 23
  1507  000E2E                     
  1508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1509  000E2E  0100               	movlb	0	; () banked
  1510  000E30  A166               	btfss	_flags& (0+255),0,b
  1511  000E32  EF1D  F007         	goto	u881
  1512  000E36  EF1F  F007         	goto	u880
  1513  000E3A                     u881:
  1514  000E3A  EF29  F007         	goto	l1548
  1515  000E3E                     u880:
  1516  000E3E                     
  1517                           ; BSR set to: 0
  1518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1519  000E3E  C013  F00A         	movff	pad@buf,fputs@s
  1520  000E42  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1521  000E46  C011  F00C         	movff	pad@fp,fputs@fp
  1522  000E4A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1523  000E4E  EC33  F008         	call	_fputs	;wreg free
  1524  000E52                     l1548:
  1525                           
  1526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1527  000E52  BE16               	btfsc	(pad@p+1)^0,7,c
  1528  000E54  EF2E  F007         	goto	u891
  1529  000E58  EF30  F007         	goto	u890
  1530  000E5C                     u891:
  1531  000E5C  EF36  F007         	goto	l1552
  1532  000E60                     u890:
  1533  000E60  C015  F01A         	movff	pad@p,pad@w
  1534  000E64  C016  F01B         	movff	pad@p+1,pad@w+1
  1535  000E68  EF3A  F007         	goto	l825
  1536  000E6C                     l1552:
  1537  000E6C  0E00               	movlw	0
  1538  000E6E  6E1B               	movwf	(pad@w+1)^0,c
  1539  000E70  0E00               	movlw	0
  1540  000E72  6E1A               	movwf	pad@w^0,c
  1541  000E74                     l825:
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1544  000E74  0E00               	movlw	0
  1545  000E76  6E19               	movwf	(pad@i+1)^0,c
  1546  000E78  0E00               	movlw	0
  1547  000E7A  6E18               	movwf	pad@i^0,c
  1548                           
  1549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1550  000E7C  EF4C  F007         	goto	l1558
  1551  000E80                     l1554:
  1552                           
  1553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1554  000E80  0E00               	movlw	0
  1555  000E82  6E02               	movwf	(fputc@c+1)^0,c
  1556  000E84  0E20               	movlw	32
  1557  000E86  6E01               	movwf	fputc@c^0,c
  1558  000E88  C011  F003         	movff	pad@fp,fputc@fp
  1559  000E8C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1560  000E90  EC7A  F007         	call	_fputc	;wreg free
  1561  000E94                     
  1562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1563  000E94  4A18               	infsnz	pad@i^0,f,c
  1564  000E96  2A19               	incf	(pad@i+1)^0,f,c
  1565  000E98                     l1558:
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1568  000E98  501A               	movf	pad@w^0,w,c
  1569  000E9A  5C18               	subwf	pad@i^0,w,c
  1570  000E9C  5019               	movf	(pad@i+1)^0,w,c
  1571  000E9E  0A80               	xorlw	128
  1572  000EA0  6E17               	movwf	??_pad^0,c
  1573  000EA2  501B               	movf	(pad@w+1)^0,w,c
  1574  000EA4  0A80               	xorlw	128
  1575  000EA6  5817               	subwfb	??_pad^0,w,c
  1576  000EA8  A0D8               	btfss	status,0,c
  1577  000EAA  EF59  F007         	goto	u901
  1578  000EAE  EF5B  F007         	goto	u900
  1579  000EB2                     u901:
  1580  000EB2  EF40  F007         	goto	l1554
  1581  000EB6                     u900:
  1582  000EB6                     
  1583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1584  000EB6  0100               	movlb	0	; () banked
  1585  000EB8  B166               	btfsc	_flags& (0+255),0,b
  1586  000EBA  EF61  F007         	goto	u911
  1587  000EBE  EF63  F007         	goto	u910
  1588  000EC2                     u911:
  1589  000EC2  EF6D  F007         	goto	l1562
  1590  000EC6                     u910:
  1591  000EC6                     
  1592                           ; BSR set to: 0
  1593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1594  000EC6  C013  F00A         	movff	pad@buf,fputs@s
  1595  000ECA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1596  000ECE  C011  F00C         	movff	pad@fp,fputs@fp
  1597  000ED2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1598  000ED6  EC33  F008         	call	_fputs	;wreg free
  1599  000EDA                     l1562:
  1600                           
  1601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1602  000EDA  C013  F001         	movff	pad@buf,strlen@s
  1603  000EDE  C014  F002         	movff	pad@buf+1,strlen@s+1
  1604  000EE2  EC90  F008         	call	_strlen	;wreg free
  1605  000EE6  501A               	movf	pad@w^0,w,c
  1606  000EE8  2401               	addwf	?_strlen^0,w,c
  1607  000EEA  6E11               	movwf	?_pad^0,c
  1608  000EEC  501B               	movf	(pad@w+1)^0,w,c
  1609  000EEE  2002               	addwfc	(?_strlen+1)^0,w,c
  1610  000EF0  6E12               	movwf	(?_pad+1)^0,c
  1611  000EF2  0012               	return		;funcret
  1612  000EF4                     __end_of_pad:
  1613                           	callstack 0
  1614                           
  1615 ;; *************** function _strlen *****************
  1616 ;; Defined at:
  1617 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1620 ;;		 -> dbuf(32), 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1623 ;;		 -> dbuf(32), 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  2    0[COMRAM] unsigned int 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1633 ;;      Params:         2       0       0       0
  1634 ;;      Locals:         2       0       0       0
  1635 ;;      Temps:          0       0       0       0
  1636 ;;      Totals:         4       0       0       0
  1637 ;;Total ram usage:        4 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_pad
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text6
  1647  001120                     __ptext6:
  1648                           	callstack 0
  1649  001120                     _strlen:
  1650                           	callstack 25
  1651  001120  C001  F003         	movff	strlen@s,strlen@a
  1652  001124  C002  F004         	movff	strlen@s+1,strlen@a+1
  1653  001128  EF98  F008         	goto	l1458
  1654  00112C                     l1456:
  1655  00112C  4A01               	infsnz	strlen@s^0,f,c
  1656  00112E  2A02               	incf	(strlen@s+1)^0,f,c
  1657  001130                     l1458:
  1658  001130  C001  FFD9         	movff	strlen@s,fsr2l
  1659  001134  C002  FFDA         	movff	strlen@s+1,fsr2h
  1660  001138  50DF               	movf	indf2,w,c
  1661  00113A  A4D8               	btfss	status,2,c
  1662  00113C  EFA2  F008         	goto	u741
  1663  001140  EFA4  F008         	goto	u740
  1664  001144                     u741:
  1665  001144  EF96  F008         	goto	l1456
  1666  001148                     u740:
  1667  001148  5003               	movf	strlen@a^0,w,c
  1668  00114A  5C01               	subwf	strlen@s^0,w,c
  1669  00114C  6E01               	movwf	?_strlen^0,c
  1670  00114E  5004               	movf	(strlen@a+1)^0,w,c
  1671  001150  5802               	subwfb	(strlen@s+1)^0,w,c
  1672  001152  6E02               	movwf	(?_strlen+1)^0,c
  1673  001154  0012               	return		;funcret
  1674  001156                     __end_of_strlen:
  1675                           	callstack 0
  1676                           
  1677 ;; *************** function _fputs *****************
  1678 ;; Defined at:
  1679 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1682 ;;		 -> dbuf(32), 
  1683 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1684 ;;		 -> NULL(0), 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  i               2   14[COMRAM] int 
  1687 ;;  c               1   13[COMRAM] unsigned char 
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  2    9[COMRAM] int 
  1690 ;; Registers used:
  1691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1697 ;;      Params:         4       0       0       0
  1698 ;;      Locals:         3       0       0       0
  1699 ;;      Temps:          0       0       0       0
  1700 ;;      Totals:         7       0       0       0
  1701 ;;Total ram usage:        7 bytes
  1702 ;; Hardware stack levels used: 1
  1703 ;; Hardware stack levels required when called: 2
  1704 ;; This function calls:
  1705 ;;		_fputc
  1706 ;; This function is called by:
  1707 ;;		_pad
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text7
  1712  001066                     __ptext7:
  1713                           	callstack 0
  1714  001066                     _fputs:
  1715                           	callstack 23
  1716  001066  0E00               	movlw	0
  1717  001068  6E10               	movwf	(fputs@i+1)^0,c
  1718  00106A  0E00               	movlw	0
  1719  00106C  6E0F               	movwf	fputs@i^0,c
  1720  00106E  EF44  F008         	goto	l1452
  1721  001072                     l1448:
  1722  001072  C00E  F001         	movff	fputs@c,fputc@c
  1723  001076  6A02               	clrf	(fputc@c+1)^0,c
  1724  001078  C00C  F003         	movff	fputs@fp,fputc@fp
  1725  00107C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1726  001080  EC7A  F007         	call	_fputc	;wreg free
  1727  001084  4A0F               	infsnz	fputs@i^0,f,c
  1728  001086  2A10               	incf	(fputs@i+1)^0,f,c
  1729  001088                     l1452:
  1730  001088  500F               	movf	fputs@i^0,w,c
  1731  00108A  240A               	addwf	fputs@s^0,w,c
  1732  00108C  6ED9               	movwf	fsr2l,c
  1733  00108E  5010               	movf	(fputs@i+1)^0,w,c
  1734  001090  200B               	addwfc	(fputs@s+1)^0,w,c
  1735  001092  6EDA               	movwf	fsr2h,c
  1736  001094  50DF               	movf	indf2,w,c
  1737  001096  6E0E               	movwf	fputs@c^0,c
  1738  001098  500E               	movf	fputs@c^0,w,c
  1739  00109A  A4D8               	btfss	status,2,c
  1740  00109C  EF52  F008         	goto	u731
  1741  0010A0  EF54  F008         	goto	u730
  1742  0010A4                     u731:
  1743  0010A4  EF39  F008         	goto	l1448
  1744  0010A8                     u730:
  1745  0010A8  0012               	return		;funcret
  1746  0010AA                     __end_of_fputs:
  1747                           	callstack 0
  1748                           
  1749 ;; *************** function _fputc *****************
  1750 ;; Defined at:
  1751 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  c               2    0[COMRAM] int 
  1754 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1755 ;;		 -> NULL(0), 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  2    0[COMRAM] int 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1767 ;;      Params:         4       0       0       0
  1768 ;;      Locals:         0       0       0       0
  1769 ;;      Temps:          5       0       0       0
  1770 ;;      Totals:         9       0       0       0
  1771 ;;Total ram usage:        9 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 1
  1774 ;; This function calls:
  1775 ;;		_putch
  1776 ;; This function is called by:
  1777 ;;		_pad
  1778 ;;		_vfpfcnvrt
  1779 ;;		_fputs
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text8
  1784  000EF4                     __ptext8:
  1785                           	callstack 0
  1786  000EF4                     _fputc:
  1787                           	callstack 26
  1788  000EF4  5003               	movf	fputc@fp^0,w,c
  1789  000EF6  1004               	iorwf	(fputc@fp+1)^0,w,c
  1790  000EF8  B4D8               	btfsc	status,2,c
  1791  000EFA  EF81  F007         	goto	u691
  1792  000EFE  EF83  F007         	goto	u690
  1793  000F02                     u691:
  1794  000F02  EF8C  F007         	goto	l1436
  1795  000F06                     u690:
  1796  000F06  5003               	movf	fputc@fp^0,w,c
  1797  000F08  1004               	iorwf	(fputc@fp+1)^0,w,c
  1798  000F0A  A4D8               	btfss	status,2,c
  1799  000F0C  EF8A  F007         	goto	u701
  1800  000F10  EF8C  F007         	goto	u700
  1801  000F14                     u701:
  1802  000F14  EF91  F007         	goto	l1438
  1803  000F18                     u700:
  1804  000F18                     l1436:
  1805  000F18  5001               	movf	fputc@c^0,w,c
  1806  000F1A  EC21  F009         	call	_putch
  1807  000F1E  EFC4  F007         	goto	l889
  1808  000F22                     l1438:
  1809  000F22  EE20 F004          	lfsr	2,4
  1810  000F26  5003               	movf	fputc@fp^0,w,c
  1811  000F28  26D9               	addwf	fsr2l,f,c
  1812  000F2A  5004               	movf	(fputc@fp+1)^0,w,c
  1813  000F2C  22DA               	addwfc	fsr2h,f,c
  1814  000F2E  50DE               	movf	postinc2,w,c
  1815  000F30  10DE               	iorwf	postinc2,w,c
  1816  000F32  B4D8               	btfsc	status,2,c
  1817  000F34  EF9E  F007         	goto	u711
  1818  000F38  EFA0  F007         	goto	u710
  1819  000F3C                     u711:
  1820  000F3C  EFBB  F007         	goto	l1442
  1821  000F40                     u710:
  1822  000F40  EE20 F004          	lfsr	2,4
  1823  000F44  5003               	movf	fputc@fp^0,w,c
  1824  000F46  26D9               	addwf	fsr2l,f,c
  1825  000F48  5004               	movf	(fputc@fp+1)^0,w,c
  1826  000F4A  22DA               	addwfc	fsr2h,f,c
  1827  000F4C  EE10 F002          	lfsr	1,2
  1828  000F50  5003               	movf	fputc@fp^0,w,c
  1829  000F52  26E1               	addwf	fsr1l,f,c
  1830  000F54  5004               	movf	(fputc@fp+1)^0,w,c
  1831  000F56  22E2               	addwfc	fsr1h,f,c
  1832  000F58  50DE               	movf	postinc2,w,c
  1833  000F5A  5CE6               	subwf	postinc1,w,c
  1834  000F5C  50E6               	movf	postinc1,w,c
  1835  000F5E  0A80               	xorlw	128
  1836  000F60  6E09               	movwf	(??_fputc+4)^0,c
  1837  000F62  50DE               	movf	postinc2,w,c
  1838  000F64  0A80               	xorlw	128
  1839  000F66  5809               	subwfb	(??_fputc+4)^0,w,c
  1840  000F68  B0D8               	btfsc	status,0,c
  1841  000F6A  EFB9  F007         	goto	u721
  1842  000F6E  EFBB  F007         	goto	u720
  1843  000F72                     u721:
  1844  000F72  EFC4  F007         	goto	l889
  1845  000F76                     u720:
  1846  000F76                     l1442:
  1847  000F76  EE20 F002          	lfsr	2,2
  1848  000F7A  5003               	movf	fputc@fp^0,w,c
  1849  000F7C  26D9               	addwf	fsr2l,f,c
  1850  000F7E  5004               	movf	(fputc@fp+1)^0,w,c
  1851  000F80  22DA               	addwfc	fsr2h,f,c
  1852  000F82  2ADE               	incf	postinc2,f,c
  1853  000F84  0E00               	movlw	0
  1854  000F86  22DD               	addwfc	postdec2,f,c
  1855  000F88                     l889:
  1856  000F88  0012               	return		;funcret
  1857  000F8A                     __end_of_fputc:
  1858                           	callstack 0
  1859                           
  1860 ;; *************** function _putch *****************
  1861 ;; Defined at:
  1862 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  c               1    wreg     unsigned char 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  c               1    0[COMRAM] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1876 ;;      Params:         0       0       0       0
  1877 ;;      Locals:         0       0       0       0
  1878 ;;      Temps:          0       0       0       0
  1879 ;;      Totals:         0       0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_fputc
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text9
  1890  001242                     __ptext9:
  1891                           	callstack 0
  1892  001242                     _putch:
  1893                           	callstack 26
  1894  001242  0012               	return		;funcret
  1895  001244                     __end_of_putch:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _abs *****************
  1899 ;; Defined at:
  1900 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  a               2   18[COMRAM] int 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  2   18[COMRAM] int 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1914 ;;      Params:         2       0       0       0
  1915 ;;      Locals:         0       0       0       0
  1916 ;;      Temps:          2       0       0       0
  1917 ;;      Totals:         4       0       0       0
  1918 ;;Total ram usage:        4 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_dtoa
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text10
  1928  0010AA                     __ptext10:
  1929                           	callstack 0
  1930  0010AA                     _abs:
  1931                           	callstack 26
  1932  0010AA  BE14               	btfsc	(abs@a+1)^0,7,c
  1933  0010AC  EF62  F008         	goto	u920
  1934  0010B0  5014               	movf	(abs@a+1)^0,w,c
  1935  0010B2  E106               	bnz	u921
  1936  0010B4  0413               	decf	abs@a^0,w,c
  1937  0010B6  B0D8               	btfsc	status,0,c
  1938  0010B8  EF60  F008         	goto	u921
  1939  0010BC  EF62  F008         	goto	u920
  1940  0010C0                     u921:
  1941  0010C0  EF70  F008         	goto	l874
  1942  0010C4                     u920:
  1943  0010C4  C013  F015         	movff	abs@a,??_abs
  1944  0010C8  C014  F016         	movff	abs@a+1,??_abs+1
  1945  0010CC  1E15               	comf	??_abs^0,f,c
  1946  0010CE  1E16               	comf	(??_abs+1)^0,f,c
  1947  0010D0  4A15               	infsnz	??_abs^0,f,c
  1948  0010D2  2A16               	incf	(??_abs+1)^0,f,c
  1949  0010D4  C015  F013         	movff	??_abs,?_abs
  1950  0010D8  C016  F014         	movff	??_abs+1,?_abs+1
  1951  0010DC  EF74  F008         	goto	l877
  1952  0010E0                     l874:
  1953  0010E0  C013  F013         	movff	abs@a,?_abs
  1954  0010E4  C014  F014         	movff	abs@a+1,?_abs+1
  1955  0010E8                     l877:
  1956  0010E8  0012               	return		;funcret
  1957  0010EA                     __end_of_abs:
  1958                           	callstack 0
  1959                           
  1960 ;; *************** function ___aomod *****************
  1961 ;; Defined at:
  1962 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;  dividend        8    0[COMRAM] long long 
  1965 ;;  divisor         8    8[COMRAM] long long 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  sign            1   17[COMRAM] unsigned char 
  1968 ;;  counter         1   16[COMRAM] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  8    0[COMRAM] long long 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1978 ;;      Params:        16       0       0       0
  1979 ;;      Locals:         2       0       0       0
  1980 ;;      Temps:          0       0       0       0
  1981 ;;      Totals:        18       0       0       0
  1982 ;;Total ram usage:       18 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_dtoa
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           	psect	text11
  1992  000BC2                     __ptext11:
  1993                           	callstack 0
  1994  000BC2                     ___aomod:
  1995                           	callstack 26
  1996  000BC2  0E00               	movlw	0
  1997  000BC4  6E12               	movwf	___aomod@sign^0,c
  1998  000BC6  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  1999  000BC8  EFEA  F005         	goto	u820
  2000  000BCC  EFE8  F005         	goto	u821
  2001  000BD0                     u821:
  2002  000BD0  EFFC  F005         	goto	l1516
  2003  000BD4                     u820:
  2004  000BD4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2005  000BD6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2006  000BD8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2007  000BDA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2008  000BDC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2009  000BDE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2010  000BE0  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2011  000BE2  6C01               	negf	___aomod@dividend^0,c
  2012  000BE4  0E00               	movlw	0
  2013  000BE6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2014  000BE8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2015  000BEA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2016  000BEC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2017  000BEE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2018  000BF0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2019  000BF2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2020  000BF4  0E01               	movlw	1
  2021  000BF6  6E12               	movwf	___aomod@sign^0,c
  2022  000BF8                     l1516:
  2023  000BF8  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2024  000BFA  EF03  F006         	goto	u830
  2025  000BFE  EF01  F006         	goto	u831
  2026  000C02                     u831:
  2027  000C02  EF13  F006         	goto	l1520
  2028  000C06                     u830:
  2029  000C06  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2030  000C08  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2031  000C0A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2032  000C0C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2033  000C0E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2034  000C10  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2035  000C12  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2036  000C14  6C09               	negf	___aomod@divisor^0,c
  2037  000C16  0E00               	movlw	0
  2038  000C18  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2039  000C1A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2040  000C1C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2041  000C1E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2042  000C20  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2043  000C22  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2044  000C24  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2045  000C26                     l1520:
  2046  000C26  5009               	movf	___aomod@divisor^0,w,c
  2047  000C28  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2048  000C2A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2049  000C2C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2050  000C2E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2051  000C30  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2052  000C32  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2053  000C34  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2054  000C36  B4D8               	btfsc	status,2,c
  2055  000C38  EF20  F006         	goto	u841
  2056  000C3C  EF22  F006         	goto	u840
  2057  000C40                     u841:
  2058  000C40  EF6A  F006         	goto	l1536
  2059  000C44                     u840:
  2060  000C44  0E01               	movlw	1
  2061  000C46  6E11               	movwf	___aomod@counter^0,c
  2062  000C48  EF30  F006         	goto	l1526
  2063  000C4C                     l1524:
  2064  000C4C  90D8               	bcf	status,0,c
  2065  000C4E  3609               	rlcf	___aomod@divisor^0,f,c
  2066  000C50  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2067  000C52  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2068  000C54  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2069  000C56  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2070  000C58  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2071  000C5A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2072  000C5C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2073  000C5E  2A11               	incf	___aomod@counter^0,f,c
  2074  000C60                     l1526:
  2075  000C60  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2076  000C62  EF35  F006         	goto	u851
  2077  000C66  EF37  F006         	goto	u850
  2078  000C6A                     u851:
  2079  000C6A  EF26  F006         	goto	l1524
  2080  000C6E                     u850:
  2081  000C6E                     l1528:
  2082  000C6E  5009               	movf	___aomod@divisor^0,w,c
  2083  000C70  5C01               	subwf	___aomod@dividend^0,w,c
  2084  000C72  500A               	movf	(___aomod@divisor+1)^0,w,c
  2085  000C74  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2086  000C76  500B               	movf	(___aomod@divisor+2)^0,w,c
  2087  000C78  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2088  000C7A  500C               	movf	(___aomod@divisor+3)^0,w,c
  2089  000C7C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2090  000C7E  500D               	movf	(___aomod@divisor+4)^0,w,c
  2091  000C80  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2092  000C82  500E               	movf	(___aomod@divisor+5)^0,w,c
  2093  000C84  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2094  000C86  500F               	movf	(___aomod@divisor+6)^0,w,c
  2095  000C88  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2096  000C8A  5010               	movf	(___aomod@divisor+7)^0,w,c
  2097  000C8C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2098  000C8E  A0D8               	btfss	status,0,c
  2099  000C90  EF4C  F006         	goto	u861
  2100  000C94  EF4E  F006         	goto	u860
  2101  000C98                     u861:
  2102  000C98  EF5E  F006         	goto	l1532
  2103  000C9C                     u860:
  2104  000C9C  5009               	movf	___aomod@divisor^0,w,c
  2105  000C9E  5E01               	subwf	___aomod@dividend^0,f,c
  2106  000CA0  500A               	movf	(___aomod@divisor+1)^0,w,c
  2107  000CA2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2108  000CA4  500B               	movf	(___aomod@divisor+2)^0,w,c
  2109  000CA6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2110  000CA8  500C               	movf	(___aomod@divisor+3)^0,w,c
  2111  000CAA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2112  000CAC  500D               	movf	(___aomod@divisor+4)^0,w,c
  2113  000CAE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2114  000CB0  500E               	movf	(___aomod@divisor+5)^0,w,c
  2115  000CB2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2116  000CB4  500F               	movf	(___aomod@divisor+6)^0,w,c
  2117  000CB6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2118  000CB8  5010               	movf	(___aomod@divisor+7)^0,w,c
  2119  000CBA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2120  000CBC                     l1532:
  2121  000CBC  90D8               	bcf	status,0,c
  2122  000CBE  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2123  000CC0  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2124  000CC2  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2125  000CC4  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2126  000CC6  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2127  000CC8  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2128  000CCA  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2129  000CCC  3209               	rrcf	___aomod@divisor^0,f,c
  2130  000CCE  2E11               	decfsz	___aomod@counter^0,f,c
  2131  000CD0  EF37  F006         	goto	l1528
  2132  000CD4                     l1536:
  2133  000CD4  5012               	movf	___aomod@sign^0,w,c
  2134  000CD6  B4D8               	btfsc	status,2,c
  2135  000CD8  EF70  F006         	goto	u871
  2136  000CDC  EF72  F006         	goto	u870
  2137  000CE0                     u871:
  2138  000CE0  EF82  F006         	goto	l1540
  2139  000CE4                     u870:
  2140  000CE4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2141  000CE6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2142  000CE8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2143  000CEA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2144  000CEC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2145  000CEE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2146  000CF0  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2147  000CF2  6C01               	negf	___aomod@dividend^0,c
  2148  000CF4  0E00               	movlw	0
  2149  000CF6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2150  000CF8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2151  000CFA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2152  000CFC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2153  000CFE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2154  000D00  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2155  000D02  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2156  000D04                     l1540:
  2157  000D04  C001  F001         	movff	___aomod@dividend,?___aomod
  2158  000D08  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2159  000D0C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2160  000D10  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2161  000D14  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2162  000D18  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2163  000D1C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2164  000D20  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2165  000D24  0012               	return		;funcret
  2166  000D26                     __end_of___aomod:
  2167                           	callstack 0
  2168                           
  2169 ;; *************** function ___aodiv *****************
  2170 ;; Defined at:
  2171 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  dividend        8    0[COMRAM] long long 
  2174 ;;  divisor         8    8[COMRAM] long long 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  quotient        8   18[COMRAM] long long 
  2177 ;;  sign            1   17[COMRAM] unsigned char 
  2178 ;;  counter         1   16[COMRAM] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  8    0[COMRAM] long long 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2188 ;;      Params:        16       0       0       0
  2189 ;;      Locals:        10       0       0       0
  2190 ;;      Temps:          0       0       0       0
  2191 ;;      Totals:        26       0       0       0
  2192 ;;Total ram usage:       26 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_dtoa
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text12
  2202  000A3A                     __ptext12:
  2203                           	callstack 0
  2204  000A3A                     ___aodiv:
  2205                           	callstack 26
  2206  000A3A  0E00               	movlw	0
  2207  000A3C  6E12               	movwf	___aodiv@sign^0,c
  2208  000A3E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2209  000A40  EF26  F005         	goto	u750
  2210  000A44  EF24  F005         	goto	u751
  2211  000A48                     u751:
  2212  000A48  EF38  F005         	goto	l1472
  2213  000A4C                     u750:
  2214  000A4C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2215  000A4E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2216  000A50  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2217  000A52  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2218  000A54  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2219  000A56  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2220  000A58  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2221  000A5A  6C09               	negf	___aodiv@divisor^0,c
  2222  000A5C  0E00               	movlw	0
  2223  000A5E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2224  000A60  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2225  000A62  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2226  000A64  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2227  000A66  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2228  000A68  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2229  000A6A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2230  000A6C  0E01               	movlw	1
  2231  000A6E  6E12               	movwf	___aodiv@sign^0,c
  2232  000A70                     l1472:
  2233  000A70  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2234  000A72  EF3F  F005         	goto	u760
  2235  000A76  EF3D  F005         	goto	u761
  2236  000A7A                     u761:
  2237  000A7A  EF51  F005         	goto	l1478
  2238  000A7E                     u760:
  2239  000A7E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2240  000A80  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2241  000A82  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2242  000A84  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2243  000A86  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2244  000A88  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2245  000A8A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2246  000A8C  6C01               	negf	___aodiv@dividend^0,c
  2247  000A8E  0E00               	movlw	0
  2248  000A90  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2249  000A92  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2250  000A94  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2251  000A96  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2252  000A98  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2253  000A9A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2254  000A9C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2255  000A9E  0E01               	movlw	1
  2256  000AA0  1A12               	xorwf	___aodiv@sign^0,f,c
  2257  000AA2                     l1478:
  2258  000AA2  EE20  F013         	lfsr	2,___aodiv@quotient
  2259  000AA6  0E07               	movlw	7
  2260  000AA8                     u771:
  2261  000AA8  6ADE               	clrf	postinc2,c
  2262  000AAA  06E8               	decf	wreg,f,c
  2263  000AAC  E2FD               	bc	u771
  2264  000AAE  5009               	movf	___aodiv@divisor^0,w,c
  2265  000AB0  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2266  000AB2  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2267  000AB4  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2268  000AB6  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2269  000AB8  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2270  000ABA  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2271  000ABC  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2272  000ABE  B4D8               	btfsc	status,2,c
  2273  000AC0  EF64  F005         	goto	u781
  2274  000AC4  EF66  F005         	goto	u780
  2275  000AC8                     u781:
  2276  000AC8  EFB8  F005         	goto	l1500
  2277  000ACC                     u780:
  2278  000ACC  0E01               	movlw	1
  2279  000ACE  6E11               	movwf	___aodiv@counter^0,c
  2280  000AD0  EF74  F005         	goto	l1486
  2281  000AD4                     l1484:
  2282  000AD4  90D8               	bcf	status,0,c
  2283  000AD6  3609               	rlcf	___aodiv@divisor^0,f,c
  2284  000AD8  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2285  000ADA  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2286  000ADC  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2287  000ADE  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2288  000AE0  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2289  000AE2  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2290  000AE4  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2291  000AE6  2A11               	incf	___aodiv@counter^0,f,c
  2292  000AE8                     l1486:
  2293  000AE8  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2294  000AEA  EF79  F005         	goto	u791
  2295  000AEE  EF7B  F005         	goto	u790
  2296  000AF2                     u791:
  2297  000AF2  EF6A  F005         	goto	l1484
  2298  000AF6                     u790:
  2299  000AF6                     l1488:
  2300  000AF6  90D8               	bcf	status,0,c
  2301  000AF8  3613               	rlcf	___aodiv@quotient^0,f,c
  2302  000AFA  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2303  000AFC  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2304  000AFE  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2305  000B00  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2306  000B02  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2307  000B04  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2308  000B06  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2309  000B08  5009               	movf	___aodiv@divisor^0,w,c
  2310  000B0A  5C01               	subwf	___aodiv@dividend^0,w,c
  2311  000B0C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2312  000B0E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2313  000B10  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2314  000B12  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2315  000B14  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2316  000B16  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2317  000B18  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2318  000B1A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2319  000B1C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2320  000B1E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2321  000B20  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2322  000B22  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2323  000B24  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2324  000B26  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2325  000B28  A0D8               	btfss	status,0,c
  2326  000B2A  EF99  F005         	goto	u801
  2327  000B2E  EF9B  F005         	goto	u800
  2328  000B32                     u801:
  2329  000B32  EFAC  F005         	goto	l1496
  2330  000B36                     u800:
  2331  000B36  5009               	movf	___aodiv@divisor^0,w,c
  2332  000B38  5E01               	subwf	___aodiv@dividend^0,f,c
  2333  000B3A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2334  000B3C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2335  000B3E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2336  000B40  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2337  000B42  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2338  000B44  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2339  000B46  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2340  000B48  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2341  000B4A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2342  000B4C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2343  000B4E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2344  000B50  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2345  000B52  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2346  000B54  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2347  000B56  8013               	bsf	___aodiv@quotient^0,0,c
  2348  000B58                     l1496:
  2349  000B58  90D8               	bcf	status,0,c
  2350  000B5A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2351  000B5C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2352  000B5E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2353  000B60  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2354  000B62  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2355  000B64  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2356  000B66  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2357  000B68  3209               	rrcf	___aodiv@divisor^0,f,c
  2358  000B6A  2E11               	decfsz	___aodiv@counter^0,f,c
  2359  000B6C  EF7B  F005         	goto	l1488
  2360  000B70                     l1500:
  2361  000B70  5012               	movf	___aodiv@sign^0,w,c
  2362  000B72  B4D8               	btfsc	status,2,c
  2363  000B74  EFBE  F005         	goto	u811
  2364  000B78  EFC0  F005         	goto	u810
  2365  000B7C                     u811:
  2366  000B7C  EFD0  F005         	goto	l1504
  2367  000B80                     u810:
  2368  000B80  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2369  000B82  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2370  000B84  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2371  000B86  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2372  000B88  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2373  000B8A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2374  000B8C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2375  000B8E  6C13               	negf	___aodiv@quotient^0,c
  2376  000B90  0E00               	movlw	0
  2377  000B92  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2378  000B94  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2379  000B96  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2380  000B98  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2381  000B9A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2382  000B9C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2383  000B9E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2384  000BA0                     l1504:
  2385  000BA0  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2386  000BA4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2387  000BA8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2388  000BAC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2389  000BB0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2390  000BB4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2391  000BB8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2392  000BBC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2393  000BC0  0012               	return		;funcret
  2394  000BC2                     __end_of___aodiv:
  2395                           	callstack 0
  2396                           
  2397 ;; *************** function _pinMode *****************
  2398 ;; Defined at:
  2399 ;;		line 48 in file "pins.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  pin             1    wreg     unsigned char 
  2402 ;;  mode            1   39[COMRAM] unsigned char 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  pin             1   42[COMRAM] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2414 ;;      Params:         1       0       0       0
  2415 ;;      Locals:         1       0       0       0
  2416 ;;      Temps:          2       0       0       0
  2417 ;;      Totals:         4       0       0       0
  2418 ;;Total ram usage:        4 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; Hardware stack levels required when called: 1
  2421 ;; This function calls:
  2422 ;;		_bitValue
  2423 ;;		_pinToPort
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text13
  2430  0005EC                     __ptext13:
  2431                           	callstack 0
  2432  0005EC                     _pinMode:
  2433                           	callstack 29
  2434                           
  2435                           ;incstack = 0
  2436                           ;pinMode@pin stored from wreg
  2437  0005EC  6E2B               	movwf	pinMode@pin^0,c
  2438  0005EE                     
  2439                           ;pins.c: 49:      if (pin == 11 ||
  2440  0005EE  0E0B               	movlw	11
  2441  0005F0  182B               	xorwf	pinMode@pin^0,w,c
  2442  0005F2  B4D8               	btfsc	status,2,c
  2443  0005F4  EFFE  F002         	goto	u1261
  2444  0005F8  EF00  F003         	goto	u1260
  2445  0005FC                     u1261:
  2446  0005FC  EF42  F004         	goto	l88
  2447  000600                     u1260:
  2448  000600  0E0C               	movlw	12
  2449  000602  182B               	xorwf	pinMode@pin^0,w,c
  2450  000604  B4D8               	btfsc	status,2,c
  2451  000606  EF07  F003         	goto	u1271
  2452  00060A  EF09  F003         	goto	u1270
  2453  00060E                     u1271:
  2454  00060E  EF42  F004         	goto	l88
  2455  000612                     u1270:
  2456  000612  0E1F               	movlw	31
  2457  000614  182B               	xorwf	pinMode@pin^0,w,c
  2458  000616  B4D8               	btfsc	status,2,c
  2459  000618  EF10  F003         	goto	u1281
  2460  00061C  EF12  F003         	goto	u1280
  2461  000620                     u1281:
  2462  000620  EF42  F004         	goto	l88
  2463  000624                     u1280:
  2464  000624  0E20               	movlw	32
  2465  000626  182B               	xorwf	pinMode@pin^0,w,c
  2466  000628  B4D8               	btfsc	status,2,c
  2467  00062A  EF19  F003         	goto	u1291
  2468  00062E  EF1B  F003         	goto	u1290
  2469  000632                     u1291:
  2470  000632  EF42  F004         	goto	l88
  2471  000636                     u1290:
  2472  000636  502B               	movf	pinMode@pin^0,w,c
  2473  000638  B4D8               	btfsc	status,2,c
  2474  00063A  EF21  F003         	goto	u1301
  2475  00063E  EF23  F003         	goto	u1300
  2476  000642                     u1301:
  2477  000642  EF42  F004         	goto	l88
  2478  000646                     u1300:
  2479  000646  0E28               	movlw	40
  2480  000648  642B               	cpfsgt	pinMode@pin^0,c
  2481  00064A  EF29  F003         	goto	u1311
  2482  00064E  EF2B  F003         	goto	u1310
  2483  000652                     u1311:
  2484  000652  EF2D  F003         	goto	l1774
  2485  000656                     u1310:
  2486  000656  EF42  F004         	goto	l88
  2487  00065A                     l1774:
  2488                           
  2489                           ;pins.c: 55:      if(mode != ANALOG_INPUT && mode != INPUT && mode != OUTPUT) return;
  2490  00065A  5028               	movf	pinMode@mode^0,w,c
  2491  00065C  B4D8               	btfsc	status,2,c
  2492  00065E  EF33  F003         	goto	u1321
  2493  000662  EF35  F003         	goto	u1320
  2494  000666                     u1321:
  2495  000666  EF48  F003         	goto	l1782
  2496  00066A                     u1320:
  2497  00066A  0428               	decf	pinMode@mode^0,w,c
  2498  00066C  B4D8               	btfsc	status,2,c
  2499  00066E  EF3B  F003         	goto	u1331
  2500  000672  EF3D  F003         	goto	u1330
  2501  000676                     u1331:
  2502  000676  EF48  F003         	goto	l1782
  2503  00067A                     u1330:
  2504  00067A  0E02               	movlw	2
  2505  00067C  1828               	xorwf	pinMode@mode^0,w,c
  2506  00067E  B4D8               	btfsc	status,2,c
  2507  000680  EF44  F003         	goto	u1341
  2508  000684  EF46  F003         	goto	u1340
  2509  000688                     u1341:
  2510  000688  EF48  F003         	goto	l1782
  2511  00068C                     u1340:
  2512  00068C  EF42  F004         	goto	l88
  2513  000690                     l1782:
  2514                           
  2515                           ;pins.c: 57:      pinToPort(pin);
  2516  000690  502B               	movf	pinMode@pin^0,w,c
  2517  000692  EC93  F006         	call	_pinToPort
  2518  000696                     
  2519                           ;pins.c: 58:      if(mode == ANALOG_INPUT){
  2520  000696  5028               	movf	pinMode@mode^0,w,c
  2521  000698  A4D8               	btfss	status,2,c
  2522  00069A  EF51  F003         	goto	u1351
  2523  00069E  EF53  F003         	goto	u1350
  2524  0006A2                     u1351:
  2525  0006A2  EFA4  F003         	goto	l1812
  2526  0006A6                     u1350:
  2527  0006A6  EF82  F003         	goto	l1810
  2528  0006AA                     l1788:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;pins.c: 61:                 TRISA = bitValue(bit_val);
  2532  0006AA  5168               	movf	_bit_val& (0+255),w,b
  2533  0006AC  ECFB  F008         	call	_bitValue
  2534  0006B0  6E92               	movwf	146,c	;volatile
  2535  0006B2                     
  2536                           ;pins.c: 62:                 ANSELA = 1;
  2537  0006B2  0E01               	movlw	1
  2538  0006B4  010F               	movlb	15	; () banked
  2539  0006B6  6F38               	movwf	56,b	;volatile
  2540                           
  2541                           ;pins.c: 63:                 break;
  2542  0006B8  EF42  F004         	goto	l88
  2543  0006BC                     l1792:
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;pins.c: 65:                 TRISB = bitValue(bit_val);
  2547  0006BC  5168               	movf	_bit_val& (0+255),w,b
  2548  0006BE  ECFB  F008         	call	_bitValue
  2549  0006C2  6E93               	movwf	147,c	;volatile
  2550  0006C4                     
  2551                           ;pins.c: 66:                 ANSELB = 1;
  2552  0006C4  0E01               	movlw	1
  2553  0006C6  010F               	movlb	15	; () banked
  2554  0006C8  6F39               	movwf	57,b	;volatile
  2555                           
  2556                           ;pins.c: 67:                 break;
  2557  0006CA  EF42  F004         	goto	l88
  2558  0006CE                     l1796:
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;pins.c: 69:                  TRISC = bitValue(bit_val);
  2562  0006CE  5168               	movf	_bit_val& (0+255),w,b
  2563  0006D0  ECFB  F008         	call	_bitValue
  2564  0006D4  6E94               	movwf	148,c	;volatile
  2565  0006D6                     
  2566                           ;pins.c: 70:                  ANSELC = 1;
  2567  0006D6  0E01               	movlw	1
  2568  0006D8  010F               	movlb	15	; () banked
  2569  0006DA  6F3A               	movwf	58,b	;volatile
  2570                           
  2571                           ;pins.c: 71:                  break;
  2572  0006DC  EF42  F004         	goto	l88
  2573  0006E0                     l1800:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;pins.c: 73:                  TRISD = bitValue(bit_val);
  2577  0006E0  5168               	movf	_bit_val& (0+255),w,b
  2578  0006E2  ECFB  F008         	call	_bitValue
  2579  0006E6  6E95               	movwf	149,c	;volatile
  2580  0006E8                     
  2581                           ;pins.c: 74:                  ANSELD = 1;
  2582  0006E8  0E01               	movlw	1
  2583  0006EA  010F               	movlb	15	; () banked
  2584  0006EC  6F3B               	movwf	59,b	;volatile
  2585                           
  2586                           ;pins.c: 75:                  break;
  2587  0006EE  EF42  F004         	goto	l88
  2588  0006F2                     l1804:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;pins.c: 77:                  TRISE = bitValue(bit_val);
  2592  0006F2  5168               	movf	_bit_val& (0+255),w,b
  2593  0006F4  ECFB  F008         	call	_bitValue
  2594  0006F8  6E96               	movwf	150,c	;volatile
  2595  0006FA                     
  2596                           ;pins.c: 78:                  ANSELE = 1;
  2597  0006FA  0E01               	movlw	1
  2598  0006FC  010F               	movlb	15	; () banked
  2599  0006FE  6F3C               	movwf	60,b	;volatile
  2600                           
  2601                           ;pins.c: 79:                  break;
  2602  000700  EF42  F004         	goto	l88
  2603  000704                     l1810:
  2604  000704  0100               	movlb	0	; () banked
  2605  000706  5169               	movf	_port& (0+255),w,b
  2606  000708  6E29               	movwf	??_pinMode^0,c
  2607  00070A  6A2A               	clrf	(??_pinMode+1)^0,c
  2608                           
  2609                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2610                           ; Switch size 1, requested type "simple"
  2611                           ; Number of cases is 1, Range of values is 0 to 0
  2612                           ; switch strategies available:
  2613                           ; Name         Instructions Cycles
  2614                           ; simple_byte            4     3 (average)
  2615                           ;	Chosen strategy is simple_byte
  2616  00070C  502A               	movf	(??_pinMode+1)^0,w,c
  2617  00070E  0A00               	xorlw	0	; case 0
  2618  000710  B4D8               	btfsc	status,2,c
  2619  000712  EF8D  F003         	goto	l1952
  2620  000716  EF42  F004         	goto	l88
  2621  00071A                     l1952:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ; Switch size 1, requested type "simple"
  2625                           ; Number of cases is 5, Range of values is 0 to 4
  2626                           ; switch strategies available:
  2627                           ; Name         Instructions Cycles
  2628                           ; simple_byte           16     9 (average)
  2629                           ;	Chosen strategy is simple_byte
  2630  00071A  5029               	movf	??_pinMode^0,w,c
  2631  00071C  0A00               	xorlw	0	; case 0
  2632  00071E  B4D8               	btfsc	status,2,c
  2633  000720  EF55  F003         	goto	l1788
  2634  000724  0A01               	xorlw	1	; case 1
  2635  000726  B4D8               	btfsc	status,2,c
  2636  000728  EF5E  F003         	goto	l1792
  2637  00072C  0A03               	xorlw	3	; case 2
  2638  00072E  B4D8               	btfsc	status,2,c
  2639  000730  EF67  F003         	goto	l1796
  2640  000734  0A01               	xorlw	1	; case 3
  2641  000736  B4D8               	btfsc	status,2,c
  2642  000738  EF70  F003         	goto	l1800
  2643  00073C  0A07               	xorlw	7	; case 4
  2644  00073E  B4D8               	btfsc	status,2,c
  2645  000740  EF79  F003         	goto	l1804
  2646  000744  EF42  F004         	goto	l88
  2647  000748                     l1812:
  2648  000748  0428               	decf	pinMode@mode^0,w,c
  2649  00074A  A4D8               	btfss	status,2,c
  2650  00074C  EFAA  F003         	goto	u1361
  2651  000750  EFAC  F003         	goto	u1360
  2652  000754                     u1361:
  2653  000754  EF20  F004         	goto	l1862
  2654  000758                     u1360:
  2655  000758  EFDB  F003         	goto	l1838
  2656  00075C                     l1816:
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;pins.c: 87:                 TRISA = bitValue(bit_val);
  2660  00075C  5168               	movf	_bit_val& (0+255),w,b
  2661  00075E  ECFB  F008         	call	_bitValue
  2662  000762  6E92               	movwf	146,c	;volatile
  2663  000764                     l1818:
  2664                           
  2665                           ;pins.c: 88:                 ANSELA = 0;
  2666  000764  0E00               	movlw	0
  2667  000766  010F               	movlb	15	; () banked
  2668  000768  6F38               	movwf	56,b	;volatile
  2669                           
  2670                           ;pins.c: 89:                 break;
  2671  00076A  EF42  F004         	goto	l88
  2672  00076E                     l1820:
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;pins.c: 91:                 TRISB = bitValue(bit_val);
  2676  00076E  5168               	movf	_bit_val& (0+255),w,b
  2677  000770  ECFB  F008         	call	_bitValue
  2678  000774  6E93               	movwf	147,c	;volatile
  2679  000776                     l1822:
  2680                           
  2681                           ;pins.c: 92:                 ANSELB = 0;
  2682  000776  0E00               	movlw	0
  2683  000778  010F               	movlb	15	; () banked
  2684  00077A  6F39               	movwf	57,b	;volatile
  2685                           
  2686                           ;pins.c: 93:                 break;
  2687  00077C  EF42  F004         	goto	l88
  2688  000780                     l1824:
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;pins.c: 95:                  TRISC = bitValue(bit_val);
  2692  000780  5168               	movf	_bit_val& (0+255),w,b
  2693  000782  ECFB  F008         	call	_bitValue
  2694  000786  6E94               	movwf	148,c	;volatile
  2695  000788                     l1826:
  2696                           
  2697                           ;pins.c: 96:                  ANSELC = 0;
  2698  000788  0E00               	movlw	0
  2699  00078A  010F               	movlb	15	; () banked
  2700  00078C  6F3A               	movwf	58,b	;volatile
  2701                           
  2702                           ;pins.c: 97:                  break;
  2703  00078E  EF42  F004         	goto	l88
  2704  000792                     l1828:
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;pins.c: 99:                  TRISD = bitValue(bit_val);
  2708  000792  5168               	movf	_bit_val& (0+255),w,b
  2709  000794  ECFB  F008         	call	_bitValue
  2710  000798  6E95               	movwf	149,c	;volatile
  2711  00079A                     l1830:
  2712                           
  2713                           ;pins.c: 100:                  ANSELD = 0;
  2714  00079A  0E00               	movlw	0
  2715  00079C  010F               	movlb	15	; () banked
  2716  00079E  6F3B               	movwf	59,b	;volatile
  2717                           
  2718                           ;pins.c: 101:                  break;
  2719  0007A0  EF42  F004         	goto	l88
  2720  0007A4                     l1832:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;pins.c: 103:                  TRISE = bitValue(bit_val);
  2724  0007A4  5168               	movf	_bit_val& (0+255),w,b
  2725  0007A6  ECFB  F008         	call	_bitValue
  2726  0007AA  6E96               	movwf	150,c	;volatile
  2727  0007AC                     l1834:
  2728                           
  2729                           ;pins.c: 104:                  ANSELE = 0;
  2730  0007AC  0E00               	movlw	0
  2731  0007AE  010F               	movlb	15	; () banked
  2732  0007B0  6F3C               	movwf	60,b	;volatile
  2733                           
  2734                           ;pins.c: 105:                  break;
  2735  0007B2  EF42  F004         	goto	l88
  2736  0007B6                     l1838:
  2737  0007B6  0100               	movlb	0	; () banked
  2738  0007B8  5169               	movf	_port& (0+255),w,b
  2739  0007BA  6E29               	movwf	??_pinMode^0,c
  2740  0007BC  6A2A               	clrf	(??_pinMode+1)^0,c
  2741                           
  2742                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2743                           ; Switch size 1, requested type "simple"
  2744                           ; Number of cases is 1, Range of values is 0 to 0
  2745                           ; switch strategies available:
  2746                           ; Name         Instructions Cycles
  2747                           ; simple_byte            4     3 (average)
  2748                           ;	Chosen strategy is simple_byte
  2749  0007BE  502A               	movf	(??_pinMode+1)^0,w,c
  2750  0007C0  0A00               	xorlw	0	; case 0
  2751  0007C2  B4D8               	btfsc	status,2,c
  2752  0007C4  EFE6  F003         	goto	l1954
  2753  0007C8  EF42  F004         	goto	l88
  2754  0007CC                     l1954:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ; Switch size 1, requested type "simple"
  2758                           ; Number of cases is 5, Range of values is 0 to 4
  2759                           ; switch strategies available:
  2760                           ; Name         Instructions Cycles
  2761                           ; simple_byte           16     9 (average)
  2762                           ;	Chosen strategy is simple_byte
  2763  0007CC  5029               	movf	??_pinMode^0,w,c
  2764  0007CE  0A00               	xorlw	0	; case 0
  2765  0007D0  B4D8               	btfsc	status,2,c
  2766  0007D2  EFAE  F003         	goto	l1816
  2767  0007D6  0A01               	xorlw	1	; case 1
  2768  0007D8  B4D8               	btfsc	status,2,c
  2769  0007DA  EFB7  F003         	goto	l1820
  2770  0007DE  0A03               	xorlw	3	; case 2
  2771  0007E0  B4D8               	btfsc	status,2,c
  2772  0007E2  EFC0  F003         	goto	l1824
  2773  0007E6  0A01               	xorlw	1	; case 3
  2774  0007E8  B4D8               	btfsc	status,2,c
  2775  0007EA  EFC9  F003         	goto	l1828
  2776  0007EE  0A07               	xorlw	7	; case 4
  2777  0007F0  B4D8               	btfsc	status,2,c
  2778  0007F2  EFD2  F003         	goto	l1832
  2779  0007F6  EF42  F004         	goto	l88
  2780  0007FA                     l1840:
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;pins.c: 113:                 TRISA = ~bitValue(bit_val);
  2784  0007FA  5168               	movf	_bit_val& (0+255),w,b
  2785  0007FC  ECFB  F008         	call	_bitValue
  2786  000800  0AFF               	xorlw	255
  2787  000802  6E92               	movwf	146,c	;volatile
  2788  000804  EFB2  F003         	goto	l1818
  2789  000808                     l1844:
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;pins.c: 117:                 TRISB = ~bitValue(bit_val);
  2793  000808  5168               	movf	_bit_val& (0+255),w,b
  2794  00080A  ECFB  F008         	call	_bitValue
  2795  00080E  0AFF               	xorlw	255
  2796  000810  6E93               	movwf	147,c	;volatile
  2797  000812  EFBB  F003         	goto	l1822
  2798  000816                     l1848:
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;pins.c: 121:                  TRISC = ~bitValue(bit_val);
  2802  000816  5168               	movf	_bit_val& (0+255),w,b
  2803  000818  ECFB  F008         	call	_bitValue
  2804  00081C  0AFF               	xorlw	255
  2805  00081E  6E94               	movwf	148,c	;volatile
  2806  000820  EFC4  F003         	goto	l1826
  2807  000824                     l1852:
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;pins.c: 125:                  TRISD = ~bitValue(bit_val);
  2811  000824  5168               	movf	_bit_val& (0+255),w,b
  2812  000826  ECFB  F008         	call	_bitValue
  2813  00082A  0AFF               	xorlw	255
  2814  00082C  6E95               	movwf	149,c	;volatile
  2815  00082E  EFCD  F003         	goto	l1830
  2816  000832                     l1856:
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;pins.c: 129:                  TRISE = ~bitValue(bit_val);
  2820  000832  5168               	movf	_bit_val& (0+255),w,b
  2821  000834  ECFB  F008         	call	_bitValue
  2822  000838  0AFF               	xorlw	255
  2823  00083A  6E96               	movwf	150,c	;volatile
  2824  00083C  EFD6  F003         	goto	l1834
  2825  000840                     l1862:
  2826  000840  0100               	movlb	0	; () banked
  2827  000842  5169               	movf	_port& (0+255),w,b
  2828  000844  6E29               	movwf	??_pinMode^0,c
  2829  000846  6A2A               	clrf	(??_pinMode+1)^0,c
  2830                           
  2831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2832                           ; Switch size 1, requested type "simple"
  2833                           ; Number of cases is 1, Range of values is 0 to 0
  2834                           ; switch strategies available:
  2835                           ; Name         Instructions Cycles
  2836                           ; simple_byte            4     3 (average)
  2837                           ;	Chosen strategy is simple_byte
  2838  000848  502A               	movf	(??_pinMode+1)^0,w,c
  2839  00084A  0A00               	xorlw	0	; case 0
  2840  00084C  B4D8               	btfsc	status,2,c
  2841  00084E  EF2B  F004         	goto	l1956
  2842  000852  EF42  F004         	goto	l88
  2843  000856                     l1956:
  2844                           
  2845                           ; BSR set to: 0
  2846                           ; Switch size 1, requested type "simple"
  2847                           ; Number of cases is 5, Range of values is 0 to 4
  2848                           ; switch strategies available:
  2849                           ; Name         Instructions Cycles
  2850                           ; simple_byte           16     9 (average)
  2851                           ;	Chosen strategy is simple_byte
  2852  000856  5029               	movf	??_pinMode^0,w,c
  2853  000858  0A00               	xorlw	0	; case 0
  2854  00085A  B4D8               	btfsc	status,2,c
  2855  00085C  EFFD  F003         	goto	l1840
  2856  000860  0A01               	xorlw	1	; case 1
  2857  000862  B4D8               	btfsc	status,2,c
  2858  000864  EF04  F004         	goto	l1844
  2859  000868  0A03               	xorlw	3	; case 2
  2860  00086A  B4D8               	btfsc	status,2,c
  2861  00086C  EF0B  F004         	goto	l1848
  2862  000870  0A01               	xorlw	1	; case 3
  2863  000872  B4D8               	btfsc	status,2,c
  2864  000874  EF12  F004         	goto	l1852
  2865  000878  0A07               	xorlw	7	; case 4
  2866  00087A  B4D8               	btfsc	status,2,c
  2867  00087C  EF19  F004         	goto	l1856
  2868  000880  EF42  F004         	goto	l88
  2869  000884                     l88:
  2870  000884  0012               	return		;funcret
  2871  000886                     __end_of_pinMode:
  2872                           	callstack 0
  2873                           
  2874 ;; *************** function _pinToPort *****************
  2875 ;; Defined at:
  2876 ;;		line 11 in file "pins.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  pin             1    wreg     unsigned char 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  pin             1   37[COMRAM] unsigned char 
  2881 ;;  i               1   38[COMRAM] unsigned char 
  2882 ;;  pins           36    1[COMRAM] unsigned char [36]
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2892 ;;      Params:         0       0       0       0
  2893 ;;      Locals:        38       0       0       0
  2894 ;;      Temps:          1       0       0       0
  2895 ;;      Totals:        39       0       0       0
  2896 ;;Total ram usage:       39 bytes
  2897 ;; Hardware stack levels used: 1
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_pinMode
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text14
  2906  000D26                     __ptext14:
  2907                           	callstack 0
  2908  000D26                     _pinToPort:
  2909                           	callstack 29
  2910                           
  2911                           ;incstack = 0
  2912                           ;pinToPort@pin stored from wreg
  2913  000D26  6E26               	movwf	pinToPort@pin^0,c
  2914  000D28                     
  2915                           ;pins.c: 12:     uint8_t pins[36] = {2, 3, 4, 5, 6, 7, 14, 13,
  2916  000D28  EE20  F08A         	lfsr	2,pinToPort@F6023
  2917  000D2C  EE10  F002         	lfsr	1,pinToPort@pins
  2918  000D30  0E23               	movlw	35
  2919  000D32                     u1131:
  2920  000D32  CFDB FFE3          	movff	plusw2,plusw1
  2921  000D36  06E8               	decf	wreg,f,c
  2922  000D38  E2FC               	bc	u1131
  2923  000D3A                     
  2924                           ;pins.c: 17:     for(uint8_t i=0; i<36; i++){
  2925  000D3A  0E00               	movlw	0
  2926  000D3C  6E27               	movwf	pinToPort@i^0,c
  2927  000D3E                     l1690:
  2928                           
  2929                           ;pins.c: 18:         if (pins[i] == pin){
  2930  000D3E  0E02               	movlw	low pinToPort@pins
  2931  000D40  2427               	addwf	pinToPort@i^0,w,c
  2932  000D42  6ED9               	movwf	fsr2l,c
  2933  000D44  6ADA               	clrf	fsr2h,c
  2934  000D46  0E00               	movlw	high pinToPort@pins
  2935  000D48  22DA               	addwfc	fsr2h,f,c
  2936  000D4A  5026               	movf	pinToPort@pin^0,w,c
  2937  000D4C  18DE               	xorwf	postinc2,w,c
  2938  000D4E  A4D8               	btfss	status,2,c
  2939  000D50  EFAC  F006         	goto	u1141
  2940  000D54  EFAE  F006         	goto	u1140
  2941  000D58                     u1141:
  2942  000D58  EF0D  F007         	goto	l1734
  2943  000D5C                     u1140:
  2944  000D5C                     
  2945                           ;pins.c: 19:             if(i >= 0 && i <= 7) {
  2946  000D5C  0E08               	movlw	8
  2947  000D5E  6027               	cpfslt	pinToPort@i^0,c
  2948  000D60  EFB4  F006         	goto	u1151
  2949  000D64  EFB6  F006         	goto	u1150
  2950  000D68                     u1151:
  2951  000D68  EFBD  F006         	goto	l1700
  2952  000D6C                     u1150:
  2953  000D6C                     
  2954                           ;pins.c: 20:                 port = A;
  2955  000D6C  0E00               	movlw	0
  2956  000D6E  0100               	movlb	0	; () banked
  2957  000D70  6F69               	movwf	_port& (0+255),b
  2958  000D72                     
  2959                           ; BSR set to: 0
  2960                           ;pins.c: 21:                 bit_val = i;
  2961  000D72  C027  F068         	movff	pinToPort@i,_bit_val
  2962                           
  2963                           ;pins.c: 22:                 break;
  2964  000D76  EF16  F007         	goto	l82
  2965  000D7A                     l1700:
  2966  000D7A  0E07               	movlw	7
  2967  000D7C  6427               	cpfsgt	pinToPort@i^0,c
  2968  000D7E  EFC3  F006         	goto	u1161
  2969  000D82  EFC5  F006         	goto	u1160
  2970  000D86                     u1161:
  2971  000D86  EFD5  F006         	goto	l1710
  2972  000D8A                     u1160:
  2973  000D8A  0E10               	movlw	16
  2974  000D8C  6027               	cpfslt	pinToPort@i^0,c
  2975  000D8E  EFCB  F006         	goto	u1171
  2976  000D92  EFCD  F006         	goto	u1170
  2977  000D96                     u1171:
  2978  000D96  EFD5  F006         	goto	l1710
  2979  000D9A                     u1170:
  2980  000D9A                     
  2981                           ;pins.c: 25:                 port = B;
  2982  000D9A  0E01               	movlw	1
  2983  000D9C  0100               	movlb	0	; () banked
  2984  000D9E  6F69               	movwf	_port& (0+255),b
  2985  000DA0                     
  2986                           ; BSR set to: 0
  2987                           ;pins.c: 26:                 bit_val = i-8;
  2988  000DA0  5027               	movf	pinToPort@i^0,w,c
  2989  000DA2  0FF8               	addlw	248
  2990  000DA4  6F68               	movwf	_bit_val& (0+255),b
  2991                           
  2992                           ;pins.c: 27:                 break;
  2993  000DA6  EF16  F007         	goto	l82
  2994  000DAA                     l1710:
  2995  000DAA  0E0F               	movlw	15
  2996  000DAC  6427               	cpfsgt	pinToPort@i^0,c
  2997  000DAE  EFDB  F006         	goto	u1181
  2998  000DB2  EFDD  F006         	goto	u1180
  2999  000DB6                     u1181:
  3000  000DB6  EFED  F006         	goto	l1720
  3001  000DBA                     u1180:
  3002  000DBA  0E18               	movlw	24
  3003  000DBC  6027               	cpfslt	pinToPort@i^0,c
  3004  000DBE  EFE3  F006         	goto	u1191
  3005  000DC2  EFE5  F006         	goto	u1190
  3006  000DC6                     u1191:
  3007  000DC6  EFED  F006         	goto	l1720
  3008  000DCA                     u1190:
  3009  000DCA                     
  3010                           ;pins.c: 30:                  port = C;
  3011  000DCA  0E02               	movlw	2
  3012  000DCC  0100               	movlb	0	; () banked
  3013  000DCE  6F69               	movwf	_port& (0+255),b
  3014  000DD0                     
  3015                           ; BSR set to: 0
  3016                           ;pins.c: 31:                  bit_val = i-16;
  3017  000DD0  5027               	movf	pinToPort@i^0,w,c
  3018  000DD2  0FF0               	addlw	240
  3019  000DD4  6F68               	movwf	_bit_val& (0+255),b
  3020                           
  3021                           ;pins.c: 32:                  break;
  3022  000DD6  EF16  F007         	goto	l82
  3023  000DDA                     l1720:
  3024  000DDA  0E17               	movlw	23
  3025  000DDC  6427               	cpfsgt	pinToPort@i^0,c
  3026  000DDE  EFF3  F006         	goto	u1201
  3027  000DE2  EFF5  F006         	goto	u1200
  3028  000DE6                     u1201:
  3029  000DE6  EF05  F007         	goto	l1730
  3030  000DEA                     u1200:
  3031  000DEA  0E20               	movlw	32
  3032  000DEC  6027               	cpfslt	pinToPort@i^0,c
  3033  000DEE  EFFB  F006         	goto	u1211
  3034  000DF2  EFFD  F006         	goto	u1210
  3035  000DF6                     u1211:
  3036  000DF6  EF05  F007         	goto	l1730
  3037  000DFA                     u1210:
  3038  000DFA                     
  3039                           ;pins.c: 35:                 port = D;
  3040  000DFA  0E03               	movlw	3
  3041  000DFC  0100               	movlb	0	; () banked
  3042  000DFE  6F69               	movwf	_port& (0+255),b
  3043  000E00                     
  3044                           ; BSR set to: 0
  3045                           ;pins.c: 36:                 bit_val = i-24;
  3046  000E00  5027               	movf	pinToPort@i^0,w,c
  3047  000E02  0FE8               	addlw	232
  3048  000E04  6F68               	movwf	_bit_val& (0+255),b
  3049                           
  3050                           ;pins.c: 37:                 break;
  3051  000E06  EF16  F007         	goto	l82
  3052  000E0A                     l1730:
  3053                           
  3054                           ;pins.c: 40:                 port = E;
  3055  000E0A  0E04               	movlw	4
  3056  000E0C  0100               	movlb	0	; () banked
  3057  000E0E  6F69               	movwf	_port& (0+255),b
  3058  000E10                     
  3059                           ; BSR set to: 0
  3060                           ;pins.c: 41:                 bit_val = i-32;
  3061  000E10  5027               	movf	pinToPort@i^0,w,c
  3062  000E12  0FE0               	addlw	224
  3063  000E14  6F68               	movwf	_bit_val& (0+255),b
  3064                           
  3065                           ;pins.c: 42:                 break;
  3066  000E16  EF16  F007         	goto	l82
  3067  000E1A                     l1734:
  3068                           
  3069                           ;pins.c: 45:     }
  3070  000E1A  2A27               	incf	pinToPort@i^0,f,c
  3071  000E1C  0E23               	movlw	35
  3072  000E1E  6427               	cpfsgt	pinToPort@i^0,c
  3073  000E20  EF14  F007         	goto	u1221
  3074  000E24  EF16  F007         	goto	u1220
  3075  000E28                     u1221:
  3076  000E28  EF9F  F006         	goto	l1690
  3077  000E2C                     u1220:
  3078  000E2C                     l82:
  3079  000E2C  0012               	return		;funcret
  3080  000E2E                     __end_of_pinToPort:
  3081                           	callstack 0
  3082                           
  3083 ;; *************** function _bitWrite *****************
  3084 ;; Defined at:
  3085 ;;		line 19 in file "mylib.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  number          2    7[COMRAM] PTR unsigned char 
  3088 ;;		 -> main@a(1), 
  3089 ;;  b               1    9[COMRAM] unsigned char 
  3090 ;;  val             1   10[COMRAM] unsigned char 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3102 ;;      Params:         4       0       0       0
  3103 ;;      Locals:         0       0       0       0
  3104 ;;      Temps:          0       0       0       0
  3105 ;;      Totals:         4       0       0       0
  3106 ;;Total ram usage:        4 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; Hardware stack levels required when called: 2
  3109 ;; This function calls:
  3110 ;;		_bitClear
  3111 ;;		_bitSet
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text15
  3118  001156                     __ptext15:
  3119                           	callstack 0
  3120  001156                     _bitWrite:
  3121                           	callstack 28
  3122  001156                     
  3123                           ;mylib.c: 20:     val ? bitSet(number, b) : bitClear(number, b);
  3124  001156  500B               	movf	bitWrite@val^0,w,c
  3125  001158  B4D8               	btfsc	status,2,c
  3126  00115A  EFB1  F008         	goto	u1251
  3127  00115E  EFB3  F008         	goto	u1250
  3128  001162                     u1251:
  3129  001162  EFBD  F008         	goto	l1754
  3130  001166                     u1250:
  3131  001166  C008  F004         	movff	bitWrite@number,bitSet@number
  3132  00116A  C009  F005         	movff	bitWrite@number+1,bitSet@number+1
  3133  00116E  C00A  F006         	movff	bitWrite@b,bitSet@b
  3134  001172  EC16  F009         	call	_bitSet	;wreg free
  3135  001176  EFC5  F008         	goto	l19
  3136  00117A                     l1754:
  3137  00117A  C008  F004         	movff	bitWrite@number,bitClear@number
  3138  00117E  C009  F005         	movff	bitWrite@number+1,bitClear@number+1
  3139  001182  C00A  F006         	movff	bitWrite@b,bitClear@b
  3140  001186  EC0A  F009         	call	_bitClear	;wreg free
  3141  00118A                     l19:
  3142  00118A  0012               	return		;funcret
  3143  00118C                     __end_of_bitWrite:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function _bitSet *****************
  3147 ;; Defined at:
  3148 ;;		line 15 in file "mylib.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  number          2    3[COMRAM] PTR unsigned char 
  3151 ;;		 -> main@a(1), 
  3152 ;;  b               1    5[COMRAM] unsigned char 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3164 ;;      Params:         3       0       0       0
  3165 ;;      Locals:         0       0       0       0
  3166 ;;      Temps:          1       0       0       0
  3167 ;;      Totals:         4       0       0       0
  3168 ;;Total ram usage:        4 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; Hardware stack levels required when called: 1
  3171 ;; This function calls:
  3172 ;;		_bitValue
  3173 ;; This function is called by:
  3174 ;;		_bitWrite
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text16
  3179  00122C                     __ptext16:
  3180                           	callstack 0
  3181  00122C                     _bitSet:
  3182                           	callstack 28
  3183  00122C                     
  3184                           ;mylib.c: 16:     *number |= bitValue(b);
  3185  00122C  5006               	movf	bitSet@b^0,w,c
  3186  00122E  ECFB  F008         	call	_bitValue
  3187  001232  6E07               	movwf	??_bitSet^0,c
  3188  001234  C004  FFD9         	movff	bitSet@number,fsr2l
  3189  001238  C005  FFDA         	movff	bitSet@number+1,fsr2h
  3190  00123C  5007               	movf	??_bitSet^0,w,c
  3191  00123E  12DF               	iorwf	indf2,f,c
  3192  001240  0012               	return		;funcret
  3193  001242                     __end_of_bitSet:
  3194                           	callstack 0
  3195                           
  3196 ;; *************** function _bitClear *****************
  3197 ;; Defined at:
  3198 ;;		line 7 in file "mylib.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  number          2    3[COMRAM] PTR unsigned char 
  3201 ;;		 -> main@a(1), 
  3202 ;;  b               1    5[COMRAM] unsigned char 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;		None
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3214 ;;      Params:         3       0       0       0
  3215 ;;      Locals:         0       0       0       0
  3216 ;;      Temps:          1       0       0       0
  3217 ;;      Totals:         4       0       0       0
  3218 ;;Total ram usage:        4 bytes
  3219 ;; Hardware stack levels used: 1
  3220 ;; Hardware stack levels required when called: 1
  3221 ;; This function calls:
  3222 ;;		_bitValue
  3223 ;; This function is called by:
  3224 ;;		_bitWrite
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text17
  3229  001214                     __ptext17:
  3230                           	callstack 0
  3231  001214                     _bitClear:
  3232                           	callstack 28
  3233  001214                     
  3234                           ;mylib.c: 8:     *number &= ~bitValue(b);
  3235  001214  5006               	movf	bitClear@b^0,w,c
  3236  001216  ECFB  F008         	call	_bitValue
  3237  00121A  0AFF               	xorlw	255
  3238  00121C  6E07               	movwf	??_bitClear^0,c
  3239  00121E  C004  FFD9         	movff	bitClear@number,fsr2l
  3240  001222  C005  FFDA         	movff	bitClear@number+1,fsr2h
  3241  001226  5007               	movf	??_bitClear^0,w,c
  3242  001228  16DF               	andwf	indf2,f,c
  3243  00122A  0012               	return		;funcret
  3244  00122C                     __end_of_bitClear:
  3245                           	callstack 0
  3246                           
  3247 ;; *************** function _bitValue *****************
  3248 ;; Defined at:
  3249 ;;		line 3 in file "mylib.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  b               1    wreg     unsigned char 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  b               1    2[COMRAM] unsigned char 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      unsigned char 
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, status,0
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3263 ;;      Params:         0       0       0       0
  3264 ;;      Locals:         1       0       0       0
  3265 ;;      Temps:          2       0       0       0
  3266 ;;      Totals:         3       0       0       0
  3267 ;;Total ram usage:        3 bytes
  3268 ;; Hardware stack levels used: 1
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_bitClear
  3273 ;;		_bitSet
  3274 ;;		_main
  3275 ;;		_pinMode
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text18
  3280  0011F6                     __ptext18:
  3281                           	callstack 0
  3282  0011F6                     _bitValue:
  3283                           	callstack 29
  3284                           
  3285                           ;incstack = 0
  3286                           ;bitValue@b stored from wreg
  3287  0011F6  6E03               	movwf	bitValue@b^0,c
  3288  0011F8                     
  3289                           ;mylib.c: 4:     return 1 << b;
  3290  0011F8  C003  F001         	movff	bitValue@b,??_bitValue
  3291  0011FC  0E01               	movlw	1
  3292  0011FE  6E02               	movwf	(??_bitValue+1)^0,c
  3293  001200  2A01               	incf	??_bitValue^0,f,c
  3294  001202  EF05  F009         	goto	u1084
  3295  001206                     u1085:
  3296  001206  90D8               	bcf	status,0,c
  3297  001208  3602               	rlcf	(??_bitValue+1)^0,f,c
  3298  00120A                     u1084:
  3299  00120A  2E01               	decfsz	??_bitValue^0,f,c
  3300  00120C  EF03  F009         	goto	u1085
  3301  001210  5002               	movf	(??_bitValue+1)^0,w,c
  3302  001212  0012               	return		;funcret
  3303  001214                     __end_of_bitValue:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function _bitRead *****************
  3307 ;; Defined at:
  3308 ;;		line 11 in file "mylib.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  number          1    wreg     unsigned char 
  3311 ;;  b               1    0[COMRAM] unsigned char 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  number          1    3[COMRAM] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      unsigned char 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3323 ;;      Params:         1       0       0       0
  3324 ;;      Locals:         1       0       0       0
  3325 ;;      Temps:          2       0       0       0
  3326 ;;      Totals:         4       0       0       0
  3327 ;;Total ram usage:        4 bytes
  3328 ;; Hardware stack levels used: 1
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_main
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text19
  3337  0011D6                     __ptext19:
  3338                           	callstack 0
  3339  0011D6                     _bitRead:
  3340                           	callstack 30
  3341                           
  3342                           ;incstack = 0
  3343                           ;bitRead@number stored from wreg
  3344  0011D6  6E04               	movwf	bitRead@number^0,c
  3345  0011D8                     
  3346                           ;mylib.c: 12:     return (number >> b) & 0x01;
  3347  0011D8  C001  F002         	movff	bitRead@b,??_bitRead
  3348  0011DC  C004  F003         	movff	bitRead@number,??_bitRead+1
  3349  0011E0  2A02               	incf	??_bitRead^0,f,c
  3350  0011E2  EFF5  F008         	goto	u1244
  3351  0011E6                     u1245:
  3352  0011E6  90D8               	bcf	status,0,c
  3353  0011E8  3203               	rrcf	(??_bitRead+1)^0,f,c
  3354  0011EA                     u1244:
  3355  0011EA  2E02               	decfsz	??_bitRead^0,f,c
  3356  0011EC  EFF3  F008         	goto	u1245
  3357  0011F0  5003               	movf	(??_bitRead+1)^0,w,c
  3358  0011F2  0B01               	andlw	1
  3359  0011F4  0012               	return		;funcret
  3360  0011F6                     __end_of_bitRead:
  3361                           	callstack 0
  3362                           
  3363                           	psect	rparam
  3364  0000                     
  3365                           	psect	idloc
  3366                           
  3367                           ;Config register IDLOC0 @ 0x200000
  3368                           ;	unspecified, using default values
  3369  200000                     	org	2097152
  3370  200000  FF                 	db	255
  3371                           
  3372                           ;Config register IDLOC1 @ 0x200001
  3373                           ;	unspecified, using default values
  3374  200001                     	org	2097153
  3375  200001  FF                 	db	255
  3376                           
  3377                           ;Config register IDLOC2 @ 0x200002
  3378                           ;	unspecified, using default values
  3379  200002                     	org	2097154
  3380  200002  FF                 	db	255
  3381                           
  3382                           ;Config register IDLOC3 @ 0x200003
  3383                           ;	unspecified, using default values
  3384  200003                     	org	2097155
  3385  200003  FF                 	db	255
  3386                           
  3387                           ;Config register IDLOC4 @ 0x200004
  3388                           ;	unspecified, using default values
  3389  200004                     	org	2097156
  3390  200004  FF                 	db	255
  3391                           
  3392                           ;Config register IDLOC5 @ 0x200005
  3393                           ;	unspecified, using default values
  3394  200005                     	org	2097157
  3395  200005  FF                 	db	255
  3396                           
  3397                           ;Config register IDLOC6 @ 0x200006
  3398                           ;	unspecified, using default values
  3399  200006                     	org	2097158
  3400  200006  FF                 	db	255
  3401                           
  3402                           ;Config register IDLOC7 @ 0x200007
  3403                           ;	unspecified, using default values
  3404  200007                     	org	2097159
  3405  200007  FF                 	db	255
  3406                           
  3407                           	psect	config
  3408                           
  3409                           ; Padding undefined space
  3410  300000                     	org	3145728
  3411  300000  FF                 	db	255
  3412                           
  3413                           ;Config register CONFIG1H @ 0x300001
  3414                           ;	unspecified, using default values
  3415                           ;	Oscillator Selection bits
  3416                           ;	FOSC = 0x5, unprogrammed default
  3417                           ;	4X PLL Enable
  3418                           ;	PLLCFG = 0x0, unprogrammed default
  3419                           ;	Primary clock enable bit
  3420                           ;	PRICLKEN = 0x1, unprogrammed default
  3421                           ;	Fail-Safe Clock Monitor Enable bit
  3422                           ;	FCMEN = 0x0, unprogrammed default
  3423                           ;	Internal/External Oscillator Switchover bit
  3424                           ;	IESO = 0x0, unprogrammed default
  3425  300001                     	org	3145729
  3426  300001  25                 	db	37
  3427                           
  3428                           ;Config register CONFIG2L @ 0x300002
  3429                           ;	unspecified, using default values
  3430                           ;	Power-up Timer Enable bit
  3431                           ;	PWRTEN = 0x1, unprogrammed default
  3432                           ;	Brown-out Reset Enable bits
  3433                           ;	BOREN = 0x3, unprogrammed default
  3434                           ;	Brown Out Reset Voltage bits
  3435                           ;	BORV = 0x3, unprogrammed default
  3436  300002                     	org	3145730
  3437  300002  1F                 	db	31
  3438                           
  3439                           ;Config register CONFIG2H @ 0x300003
  3440                           ;	unspecified, using default values
  3441                           ;	Watchdog Timer Enable bits
  3442                           ;	WDTEN = 0x3, unprogrammed default
  3443                           ;	Watchdog Timer Postscale Select bits
  3444                           ;	WDTPS = 0xF, unprogrammed default
  3445  300003                     	org	3145731
  3446  300003  3F                 	db	63
  3447                           
  3448                           ; Padding undefined space
  3449  300004                     	org	3145732
  3450  300004  FF                 	db	255
  3451                           
  3452                           ;Config register CONFIG3H @ 0x300005
  3453                           ;	unspecified, using default values
  3454                           ;	CCP2 MUX bit
  3455                           ;	CCP2MX = 0x1, unprogrammed default
  3456                           ;	PORTB A/D Enable bit
  3457                           ;	PBADEN = 0x1, unprogrammed default
  3458                           ;	P3A/CCP3 Mux bit
  3459                           ;	CCP3MX = 0x1, unprogrammed default
  3460                           ;	HFINTOSC Fast Start-up
  3461                           ;	HFOFST = 0x1, unprogrammed default
  3462                           ;	Timer3 Clock input mux bit
  3463                           ;	T3CMX = 0x1, unprogrammed default
  3464                           ;	ECCP2 B output mux bit
  3465                           ;	P2BMX = 0x1, unprogrammed default
  3466                           ;	MCLR Pin Enable bit
  3467                           ;	MCLRE = 0x1, unprogrammed default
  3468  300005                     	org	3145733
  3469  300005  BF                 	db	191
  3470                           
  3471                           ;Config register CONFIG4L @ 0x300006
  3472                           ;	unspecified, using default values
  3473                           ;	Stack Full/Underflow Reset Enable bit
  3474                           ;	STVREN = 0x1, unprogrammed default
  3475                           ;	Single-Supply ICSP Enable bit
  3476                           ;	LVP = 0x1, unprogrammed default
  3477                           ;	Extended Instruction Set Enable bit
  3478                           ;	XINST = 0x0, unprogrammed default
  3479                           ;	Background Debug
  3480                           ;	DEBUG = 0x1, unprogrammed default
  3481  300006                     	org	3145734
  3482  300006  85                 	db	133
  3483                           
  3484                           ; Padding undefined space
  3485  300007                     	org	3145735
  3486  300007  FF                 	db	255
  3487                           
  3488                           ;Config register CONFIG5L @ 0x300008
  3489                           ;	unspecified, using default values
  3490                           ;	Code Protection Block 0
  3491                           ;	CP0 = 0x1, unprogrammed default
  3492                           ;	Code Protection Block 1
  3493                           ;	CP1 = 0x1, unprogrammed default
  3494  300008                     	org	3145736
  3495  300008  03                 	db	3
  3496                           
  3497                           ;Config register CONFIG5H @ 0x300009
  3498                           ;	unspecified, using default values
  3499                           ;	Boot Block Code Protection bit
  3500                           ;	CPB = 0x1, unprogrammed default
  3501                           ;	Data EEPROM Code Protection bit
  3502                           ;	CPD = 0x1, unprogrammed default
  3503  300009                     	org	3145737
  3504  300009  C0                 	db	192
  3505                           
  3506                           ;Config register CONFIG6L @ 0x30000A
  3507                           ;	unspecified, using default values
  3508                           ;	Write Protection Block 0
  3509                           ;	WRT0 = 0x1, unprogrammed default
  3510                           ;	Write Protection Block 1
  3511                           ;	WRT1 = 0x1, unprogramm  3512  30000A                     	org	3145738
  3513  30000A  03                 	db	3
  3514                           
  3515                           ;Config register CONFIG6H @ 0x30000B
  3516                           ;	unspecified, using default values
  3517                           ;	Configuration Register Write Protection bit
  3518                           ;	WRTC = 0x1, unprogrammed default
  3519                           ;	Boot Block Write Protection bit
  3520                           ;	WRTB = 0x1, unprogrammed default
  3521                           ;	Data EEPROM Write Protection bit
  3522                           ;	WRTD = 0x1, unprogrammed default
  3523  30000B                     	org	3145739
  3524  30000B  E0                 	db	224
  3525                           
  3526                           ;Config register CONFIG7L @ 0x30000C
  3527                           ;	unspecified, using default values
  3528                           ;	Table Read Protection Block 0
  3529                           ;	EBTR0 = 0x1, unprogrammed default
  3530                           ;	Table Read Protection Block 1
  3531                           ;	EBTR1 = 0x1, unprogrammed default
  3532  30000C                     	org	3145740
  3533  30000C  03                 	db	3
  3534                           
  3535                           ;Config register CONFIG7H @ 0x30000D
  3536                           ;	unspecified, using default values
  3537                           ;	Boot Block Table Read Protection bit
  3538                           ;	EBTRB = 0x1, unprogrammed default
  3539  30000D                     	org	3145741
  3540  30000D  40                 	db	64
  3541                           tosu	equ	0xFFF
  3542                           tosh	equ	0xFFE
  3543                           tosl	equ	0xFFD
  3544                           stkptr	equ	0xFFC
  3545                           pclatu	equ	0xFFB
  3546                           pclath	equ	0xFFA
  3547                           pcl	equ	0xFF9
  3548                           tblptru	equ	0xFF8
  3549                           tblptrh	equ	0xFF7
  3550                           tblptrl	equ	0xFF6
  3551                           tablat	equ	0xFF5
  3552                           prodh	equ	0xFF4
  3553                           prodl	equ	0xFF3
  3554                           indf0	equ	0xFEF
  3555                           postinc0	equ	0xFEE
  3556                           postdec0	equ	0xFED
  3557                           preinc0	equ	0xFEC
  3558                           plusw0	equ	0xFEB
  3559                           fsr0h	equ	0xFEA
  3560                           fsr0l	equ	0xFE9
  3561                           wreg	equ	0xFE8
  3562                           indf1	equ	0xFE7
  3563                           postinc1	equ	0xFE6
  3564                           postdec1	equ	0xFE5
  3565                           preinc1	equ	0xFE4
  3566                           plusw1	equ	0xFE3
  3567                           fsr1h	equ	0xFE2
  3568                           fsr1l	equ	0xFE1
  3569                           bsr	equ	0xFE0
  3570                           indf2	equ	0xFDF
  3571                           postinc2	equ	0xFDE
  3572                           postdec2	equ	0xFDD
  3573                           preinc2	equ	0xFDC
  3574                           plusw2	equ	0xFDB
  3575                           fsr2h	equ	0xFDA
  3576                           fsr2l	equ	0xFD9
  3577                           status	equ	0xFD8

Data Sizes:
    Strings     7
    Constant    0
    Data        36
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160      5      83
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S561_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    bitWrite@number	PTR unsigned char  size(2) Largest target is 1
		 -> main@a(COMRAM[1]), 

    bitSet@number	PTR unsigned char  size(2) Largest target is 1
		 -> main@a(COMRAM[1]), 

    bitClear@number	PTR unsigned char  size(2) Largest target is 1
		 -> main@a(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _pinMode->_pinToPort
    _bitWrite->_bitClear
    _bitWrite->_bitSet
    _bitSet->_bitValue
    _bitClear->_bitValue

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5    7970
                                             93 COMRAM     2     2      0
                                              0 BANK0      5     0      5
                            _bitRead
                           _bitValue
                           _bitWrite
                            _pinMode
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6189
                                             87 COMRAM     6     2      4
                            _bitRead (ARG)
                           _bitValue (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5907
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5553
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4226
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2577
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1169
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     768
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _pinMode                                              4     3      1     816
                                             39 COMRAM     4     3      1
                           _bitValue
                          _pinToPort
 ---------------------------------------------------------------------------------
 (2) _pinToPort                                           39    39      0     378
                                              0 COMRAM    39    39      0
 ---------------------------------------------------------------------------------
 (1) _bitWrite                                             4     0      4     774
                                              7 COMRAM     4     0      4
                           _bitClear
                             _bitSet
 ---------------------------------------------------------------------------------
 (2) _bitSet                                               4     1      3     218
                                              3 COMRAM     4     1      3
                           _bitValue
 ---------------------------------------------------------------------------------
 (2) _bitClear                                             4     1      3     218
                                              3 COMRAM     4     1      3
                           _bitValue
 ---------------------------------------------------------------------------------
 (2) _bitValue                                             3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _bitRead                                              4     3      1     120
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _bitRead
   _bitValue
   _bitWrite
     _bitClear
       _bitValue
     _bitSet
       _bitValue
   _pinMode
     _bitValue
     _pinToPort
   _printf
     _bitRead (ARG)
     _bitValue (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      5      53       4       51.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B2       8        0.0%
DATA                 0      0      B2      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Apr 26 15:07:30 2021

                      l3 1212                        l6 122A                        l9 11F4  
                     l12 1240                       l40 1000                       l19 118A  
                     l82 0E2C                       l88 0884                      l234 0BC0  
                    l247 0D24                      l900 1242                      l830 0EF2  
                    l825 0E74                      l906 1154                      l828 0EB6  
                    l836 03AA                      l838 03B2                      l870 1064  
                    l863 0A38                      l856 05EA                      l874 10E0  
                    l877 10E8                      l869 105C                      l798 11B0  
                    l889 0F88                      l897 10A8                      u700 0F18  
                    u701 0F14                      u710 0F40                      u711 0F3C  
                    u800 0B36                      u720 0F76                      u801 0B32  
                    u721 0F72                      u810 0B80                      u730 10A8  
                    u811 0B7C                      u731 10A4                      u820 0BD4  
                    u740 1148                      u900 0EB6                      u821 0BD0  
                    u741 1144                      u901 0EB2                      u750 0A4C  
                    u830 0C06                      u910 0EC6                      u751 0A48  
                    u831 0C02                      u911 0EC2                      u760 0A7E  
                    u840 0C44                      u920 10C4                      u761 0A7A  
                    u841 0C40                      u921 10C0                      u850 0C6E  
                    u690 0F06                      u930 033A                      u771 0AA8  
                    u851 0C6A                      u691 0F02                      u931 0334  
                    u780 0ACC                      u860 0C9C                      u940 033C  
                    u781 0AC8                      u861 0C98                      u790 0AF6  
                    u870 0CE4                      u950 0352                      u791 0AF2  
                    u871 0CE0                      u951 034E                      u880 0E3E  
                    u960 0382                      u881 0E3A                      u961 037E  
                    u890 0E60                      u970 039E                      u891 0E5C  
                    u971 039A                      u980 03CC                      u981 03C8  
                    u990 03DA                      u991 03D6                      _abs 10AA  
                    _pad 0E2E                      wreg 000FE8                     ?_abs 0013  
                   l1500 0B70                     l1502 0B80                     l1510 0BC6  
                   l1504 0BA0                     l1520 0C26                     l1512 0BD4  
                   l1440 0F40                     l1432 0EF4                     l1600 047E  
                   l1530 0C9C                     l1522 0C44                     l1514 0BF4  
                   l1442 0F76                     l1434 0F06                     l1450 1084  
                   l1610 053A                     l1602 0484                     l1700 0D7A  
                   l1540 0D04                     l1532 0CBC                     l1524 0C4C  
                   l1516 0BF8                     l1508 0BC2                     l1436 0F18  
                   l1452 1088                     l1460 1148                     l1620 058C  
                   l1612 0554                     l1604 04E8                     l1702 0D8A  
                   l1710 0DAA                     l1470 0A6C                     l1534 0CCE  
                   l1526 0C60                     l1518 0C06                     l1438 0F22  
                   l1446 1066                     l1454 1120                     l1550 0E60  
                   l1622 059E                     l1606 0502                     l1614 0564  
                   l1632 11F8                     l1712 0DBA                     l1720 0DDA  
                   l1704 0D9A                     l1800 06E0                     l1480 0AAE  
                   l1472 0A70                     l1464 0A3A                     l1528 0C6E  
                   l1536 0CD4                     l1448 1072                     l1456 112C  
                   l1560 0EC6                     l1552 0E6C                     l1544 0E2E  
                   l1624 05AA                     l1616 0576                     l1608 0520  
                   l1640 08B8                     l1722 0DEA                     l1730 0E0A  
                   l1714 0DCA                     l1706 0DA0                     l1802 06E8  
                   l1810 0704                     l1490 0B08                     l1482 0ACC  
                   l1474 0A7E                     l1466 0A3E                     l1538 0CE4  
                   l1458 1130                     l1562 0EDA                     l1554 0E80  
                   l1546 0E3E                     l1626 05B2                     l1618 0586  
                   l1570 030A                     l1650 095E                     l1642 08CA  
                   l1732 0E10                     l1724 0DFA                     l1716 0DD0  
                   l1820 076E                     l1804 06F2                     l1812 0748  
                   l1492 0B36                     l1484 0AD4                     l1476 0A9E  
                   l1468 0A4C                     l1556 0E94                     l1548 0E52  
                   l1628 05C2                     l1580 0384                     l1572 032A  
                   l1660 09DC                     l1644 08CE                     l1636 0886  
                   l1740 100C                     l1750 1156                     l1726 0E00  
                   l1734 0E1A                     l1830 079A                     l1822 0776  
                   l1806 06FA                     l1494 0B56                     l1486 0AE8  
                   l1478 0AA2                     l1566 10AA                     l1558 0E98  
                   l1590 03E0                     l1582 039E                     l1574 0352  
                   l1654 0996                     l1646 08F2                     l1638 08AA  
                   l1670 0A02                     l1742 101A                     l1680 122C  
                   l1752 1166                     l1736 0E1C                     l1840 07FA  
                   l1832 07A4                     l1824 0780                     l1816 075C  
                   l1496 0B58                     l1488 0AF6                     l1568 10C4  
                   l1592 03E8                     l1584 03BA                     l1576 0372  
                   l1672 0A26                     l1656 09BA                     l1664 09E8  
                   l1648 0916                     l1744 1040                     l1746 11D8  
                   l1754 117A                     l1690 0D3E                     l1682 0D28  
                   l1834 07AC                     l1826 0788                     l1818 0764  
                   l1770 0636                     l1762 05EE                     l1498 0B6A  
                   l1594 03F0                     l1586 03CC                     l1578 0382  
                   l1666 09F6                     l1658 09C8                     l1738 1004  
                   l1692 0D5C                     l1684 0D3A                     l1852 0824  
                   l1844 0808                     l1828 0792                     l1772 0646  
                   l1764 0600                     l1596 03F6                     l1588 03DA  
                   l1756 118C                     l1678 1214                     l1694 0D6C  
                   l1838 07B6                     l1862 0840                     l1790 06B2  
                   l1782 0690                     l1774 065A                     l1766 0612  
                   l1598 0478                     l1758 1194                     l1696 0D72  
                   l1856 0832                     l1848 0816                     l1952 071A  
                   l1792 06BC                     l1784 0696                     l1776 066A  
                   l1768 0624                     l1880 0FA8                     l1954 07CC  
                   l1794 06C4                     l1778 067A                     l1882 0FBC  
                   l1956 0856                     l1796 06CE                     l1788 06AA  
                   l1884 0FCE                     l1876 0F8A                     l1798 06D6  
                   l1886 0FEC                     l1878 0FA4                     ?_pad 0011  
                   l1888 0FF6                     STR_1 0301                     STR_2 0301  
                   STR_3 0305                     u1000 0502                     u1001 04FE  
                   u1010 0520                     u1011 051C                     u1020 053A  
                   u1100 08F2                     u1021 0536                     u1101 08EE  
                   u1030 0554                     u1110 0916                     u1031 0550  
                   u1111 0912                     u1200 0DEA                     u1040 0564  
                   u1120 09BA                     u1201 0DE6                     u1041 0560  
                   u1121 09B6                     u1210 0DFA                     u1050 0576  
                   u1211 0DF6                     u1131 0D32                     u1051 0572  
                   u1220 0E2C                     u1140 0D5C                     u1300 0646  
                   u1060 0586                     u1221 0E28                     u1141 0D58  
                   u1301 0642                     u1061 0582                     u1150 0D6C  
                   u1310 0656                     u1070 059E                     u1230 105C  
                   u1151 0D68                     u1311 0652                     u1071 059A  
                   u1231 1058                     u1160 0D8A                     u1320 066A  
                   u1161 0D86                     u1321 0666                     u1250 1166  
                   u1170 0D9A                     u1330 067A                     u1090 08AA  
                   u1251 1162                     u1171 0D96                     u1331 0676  
                   u1091 08A6                     u1244 11EA                     u1084 120A  
                   u1180 0DBA                     u1340 068C                     u1260 0600  
                   u1245 11E6                     u1085 1206                     u1181 0DB6  
                   u1341 0688                     u1261 05FC                     u1190 0DCA  
                   u1350 06A6                     u1270 0612                     u1191 0DC6  
                   u1351 06A2                     u1271 060E                     u1360 0758  
                   u1280 0624                     u1361 0754                     u1281 0620  
                   u1290 0636                     u1291 0632                     abs@a 0013  
                   _dbuf 006A                     _main 0F8A                     _dtoa 030A  
                   _prec 0064                     _nout 0060                     pad@i 0018  
                   _port 0069                     pad@p 0015                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   pad@w 001A                     fsr2l 000FD9                     start 0000  
           ___param_bank 000000                    ??_abs 0015                    ??_pad 0017  
        __end_of___aodiv 0BC2                    ?_main 00AE                    ?_dtoa 001C  
        __end_of___aomod 0D26             vfpfcnvrt@fmt 0042                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_bitRead 11F6                    _flags 0066  
                  _fputc 0EF4                    _fputs 1066          __end_of_pinMode 0886  
                  pad@fp 0011                    _width 0062                    _putch 1242  
                  main@a 005F                    dtoa@d 001E                    dtoa@i 003E  
                  dtoa@n 0036                    dtoa@p 0030                    dtoa@s 0034  
                  dtoa@w 0032                    tablat 000FF5                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8          __initialization 10EA  
           __end_of_main 1004             __end_of_dtoa 05EC                   ??_main 005E  
                 ??_dtoa 0026            __activetblptr 000002            pinToPort@pins 0002  
                 ?_fputc 0001                   ?_fputs 000A                   _ANSELA 000F38  
                 ?_putch 0001                   _ANSELB 000F39                   _ANSELC 000F3A  
                 _ANSELD 000F3B                   _ANSELE 000F3C         __end_of_bitClear 122C  
       __end_of_bitValue 1214         __end_of_bitWrite 118C             vfprintf@cfmt 0056  
              ??___aodiv 0011                ??___aomod 0011                   _bitSet 122C  
                 clear_0 1110                ??_bitRead 0002                   isa$std 000001  
                 _printf 118C                   pad@buf 0013                   dtoa@fp 001C  
                 _strlen 1120                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A                ??_pinMode 0029  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 1066  
             __accesstop 0060  __end_of__initialization 1116            ___rparam_used 000001  
            pinMode@mode 0028           __pcstackCOMRAM 0001           bitWrite@number 0008  
           __pidataBANK0 11B2            __end_of_fputc 0F8A            __end_of_fputs 10AA  
          __end_of_putch 1244           pinToPort@F6023 008A                  ??_fputc 0005  
                ??_fputs 000E                  ??_putch 0001               __pbssBANK0 0060  
     __size_of_pinToPort 0108                  ?_bitSet 0004                  ?_printf 0058  
                ?_strlen 0001            bitRead@number 0004                ?_bitClear 0004  
              ?_bitValue 0001       __size_of_vfpfcnvrt 01B4                ?_bitWrite 0008  
                __Hparam 0000                  __Lparam 0000           bitClear@number 0004  
                ___aodiv 0A3A                  ___aomod 0BC2          __size_of_bitSet 0016  
              ?_vfprintf 0050             __psmallconst 0300                  _bitRead 11D6  
                __pcinit 10EA                  __ramtop 0300                  _bit_val 0068  
                __ptext0 0F8A                  __ptext1 118C                  __ptext2 1004  
                __ptext3 0886                  __ptext4 030A                  __ptext5 0E2E  
                __ptext6 1120                  __ptext7 1066                  __ptext8 0EF4  
                __ptext9 1242          __size_of_printf 0026          __size_of_strlen 0036  
           __size_of_abs 0040             __size_of_pad 00C6               ??_bitClear 0007  
                bitSet@b 0006                  _pinMode 05EC               ??_bitValue 0001  
             ??_bitWrite 000C        __end_of_pinToPort 0E2E     end_of_initialization 1116  
                fputc@fp 0003            __Lmediumconst 0000                  fputs@fp 000C  
      __end_of_vfpfcnvrt 0A3A                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0056                  strlen@a 0003                  strlen@s 0001  
            vfpfcnvrt@ap 0044              vfpfcnvrt@fp 0040              vfpfcnvrt@ll 0048  
         __end_of_bitSet 1242           __end_of_printf 11B2           __end_of_strlen 1156  
    start_initialization 10EA              __end_of_abs 10EA              __end_of_pad 0EF4  
           pinToPort@pin 0026              vfprintf@fmt 0052                 ??_bitSet 0007  
            __pdataBANK0 008A                 ??_printf 005C                 ??_strlen 0003  
          __pcstackBANK0 00AE               pinMode@pin 002B         ___aodiv@dividend 0001  
      __size_of_bitClear 0018        __size_of_bitValue 001E        __size_of_bitWrite 0036  
             pinToPort@i 0027                 ?___aodiv 0001                 ?___aomod 0001  
       ___aodiv@quotient 0013                 ?_bitRead 0001        __size_of_vfprintf 0062  
            __smallconst 0300                 ?_pinMode 0028                bitClear@b 0006  
         __size_of_fputc 0096           __size_of_fputs 0044           __size_of_putch 0002  
           bitSet@number 0004                _pinToPort 0D26                bitValue@b 0003  
              bitWrite@b 000A                _vfpfcnvrt 0886                copy_data0 10FE  
             ?_pinToPort 0001                 __Hrparam 0000               vfprintf@ap 0054  
               __Lrparam 0000               vfprintf@fp 0050         __size_of___aodiv 0188  
       __size_of___aomod 0164               ?_vfpfcnvrt 0040          ___aodiv@divisor 0009  
       __size_of_bitRead 0020          ___aodiv@counter 0011                 _bitClear 1214  
               _bitValue 11F6         __size_of_pinMode 029A                 _dtoa$625 002E  
               _bitWrite 1156                 __ptext10 10AA                 __ptext11 0BC2  
               __ptext12 0A3A                 __ptext13 05EC                 __ptext14 0D26  
               __ptext15 1156                 __ptext16 122C                 __ptext17 1214  
               __ptext18 11F6                 __ptext19 11D6            __size_of_main 007A  
          __size_of_dtoa 02E2                 bitRead@b 0001                 isa$xinst 000000  
               _vfprintf 1004                printf@fmt 0058                 main@argc 00AE  
               main@argv 00B0         ___aomod@dividend 0001              bitWrite@val 000B  
            ??_pinToPort 0001                 printf@ap 005C          ___aomod@divisor 0009  
            ??_vfpfcnvrt 0046          ___aomod@counter 0011             ___aodiv@sign 0012  
           ___aomod@sign 0012  
